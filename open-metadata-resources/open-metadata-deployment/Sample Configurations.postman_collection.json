{
	"info": {
		"_postman_id": "47c559f1-5ce0-4bc9-a887-be6315059a61",
		"name": "Sample Configurations",
		"description": "This postman collection creates the sample-configs included in the omag-server-platform assembly.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28623075"
	},
	"item": [
		{
			"name": "Set up the plain text configuration store",
			"item": [
				{
					"name": "Set Configuration Document Store Connection",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"class\": \"Connection\",\n    \"connectorType\": {\n        \"class\": \"ConnectorType\",\n        \"connectorProviderClassName\": \"org.odpi.openmetadata.adapters.adminservices.configurationstore.file.FileBasedServerConfigStoreProvider\"\n    },\n    \"endpoint\": {\n        \"class\": \"Endpoint\",\n        \"address\": \"data/servers/{0}/config/{0}.config\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseURL}}/open-metadata/admin-services/users/{{adminUserId}}/stores/connection",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"open-metadata",
								"admin-services",
								"users",
								"{{adminUserId}}",
								"stores",
								"connection"
							]
						},
						"description": "Overrides the default connector that stores the configuration documents in a plain text file.\nThe request body is a Connection object that is used to create and configure the connector.\nThis call is preconfigured to switch the store to using the encrypted configuration document store."
					},
					"response": []
				}
			],
			"description": "This command is run immediately after the platform is started to set up the plain text configuration store. The amin is to distribute the sample config in plain text. The configurations will be encrypted the first time they are loaded in the platform."
		},
		{
			"name": "Configure simple-metadata-store",
			"item": [
				{
					"name": "Set local server user Id",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/open-metadata/admin-services/users/{{adminUserId}}/servers/simple-metadata-store/server-user-id?id=simplemdsnpa",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"open-metadata",
								"admin-services",
								"users",
								"{{adminUserId}}",
								"servers",
								"simple-metadata-store",
								"server-user-id"
							],
							"query": [
								{
									"key": "id",
									"value": "simplemdsnpa"
								}
							]
						},
						"description": "Set up the user Id that this server should use on open metadata requests when it is processing events (and consequently there is no end user id to use)."
					},
					"response": []
				},
				{
					"name": "Enable the in-memory repository",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/open-metadata/admin-services/users/{{adminUserId}}/servers/simple-metadata-store/local-repository/mode/in-memory-repository",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"open-metadata",
								"admin-services",
								"users",
								"{{adminUserId}}",
								"servers",
								"simple-metadata-store",
								"local-repository",
								"mode",
								"in-memory-repository"
							]
						},
						"description": "Set up the local reposiotry to use the in-memory implementation."
					},
					"response": []
				},
				{
					"name": "Enable the Open Metadata Access Services (OMASs)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/open-metadata/admin-services/users/{{adminUserId}}/servers/simple-metadata-store/access-services/no-topics",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"open-metadata",
								"admin-services",
								"users",
								"{{adminUserId}}",
								"servers",
								"simple-metadata-store",
								"access-services",
								"no-topics"
							]
						},
						"description": "Turn on a specific registered Open Metadata Access Services (OMAS).\n\nChange the value of the {{access-service}} variable in the environment to be the URL version of the name.  Typically this is done by taking the access service name, dropping \"OMAS\", change to lower-case and link two words with a dash \"-\".  For example, Asset Owner OMAS, would have a url name of asset-owner."
					},
					"response": []
				},
				{
					"name": "Get simple-metadata-store's configuration document",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/open-metadata/admin-services/users/{{adminUserId}}/servers/simple-metadata-store/configuration",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"open-metadata",
								"admin-services",
								"users",
								"{{adminUserId}}",
								"servers",
								"simple-metadata-store",
								"configuration"
							]
						},
						"description": "Retrieve the configuration document for the named server."
					},
					"response": []
				}
			],
			"description": "This folder contains the commands to configure the Metadata Access Store called simple-metadata-store. This version of the server is configured without event support."
		},
		{
			"name": "Configure active-metadata-store - with kafka",
			"item": [
				{
					"name": "Set local server user Id",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/open-metadata/admin-services/users/{{adminUserId}}/servers/active-metadata-store/server-user-id?id=activemdsnpa",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"open-metadata",
								"admin-services",
								"users",
								"{{adminUserId}}",
								"servers",
								"active-metadata-store",
								"server-user-id"
							],
							"query": [
								{
									"key": "id",
									"value": "activemdsnpa"
								}
							]
						},
						"description": "Set up the user Id that this server should use on open metadata requests when it is processing events (and consequently there is no end user id to use)."
					},
					"response": []
				},
				{
					"name": "Set up event bus",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"producer\": {\n        \"bootstrap.servers\": \"{{kafkaep}}\"\n    },\n    \"consumer\":{\n        \"bootstrap.servers\": \"{{kafkaep}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/open-metadata/admin-services/users/{{adminUserId}}/servers/active-metadata-store/event-bus",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"open-metadata",
								"admin-services",
								"users",
								"{{adminUserId}}",
								"servers",
								"active-metadata-store",
								"event-bus"
							]
						},
						"description": "Set up the common properties needed to call your event bus.  These properties are passed in the request body.\nThis request just sets up the defaults that will be incorporated into any future configuration that includes an event bus topic."
					},
					"response": []
				},
				{
					"name": "Enable the in-memory repository",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/open-metadata/admin-services/users/{{adminUserId}}/servers/active-metadata-store/local-repository/mode/in-memory-repository",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"open-metadata",
								"admin-services",
								"users",
								"{{adminUserId}}",
								"servers",
								"active-metadata-store",
								"local-repository",
								"mode",
								"in-memory-repository"
							]
						},
						"description": "Set up the local reposiotry to use the in-memory implementation."
					},
					"response": []
				},
				{
					"name": "Enable the Open Metadata Access Services (OMASs) with topics",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/open-metadata/admin-services/users/{{adminUserId}}/servers/active-metadata-store/access-services",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"open-metadata",
								"admin-services",
								"users",
								"{{adminUserId}}",
								"servers",
								"active-metadata-store",
								"access-services"
							]
						},
						"description": "Turn on a specific registered Open Metadata Access Services (OMAS).\n\nChange the value of the {{access-service}} variable in the environment to be the URL version of the name.  Typically this is done by taking the access service name, dropping \"OMAS\", change to lower-case and link two words with a dash \"-\".  For example, Asset Owner OMAS, would have a url name of asset-owner."
					},
					"response": []
				},
				{
					"name": "Get active-metadata-store's configuration document",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/open-metadata/admin-services/users/{{adminUserId}}/servers/active-metadata-store/configuration",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"open-metadata",
								"admin-services",
								"users",
								"{{adminUserId}}",
								"servers",
								"active-metadata-store",
								"configuration"
							]
						},
						"description": "Retrieve the configuration document for the named server."
					},
					"response": []
				}
			],
			"description": "This folder contains the commands to configure the Metadata Access Store called active-metadata-store. This version of the server is configured with event support that relies on Apache Kafka."
		},
		{
			"name": "Configure integration-daemon server",
			"item": [
				{
					"name": "Set local server user Id",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/open-metadata/admin-services/users/{{adminUserId}}/servers/integration-daemon/server-user-id?id=intgdaemonnpa",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"open-metadata",
								"admin-services",
								"users",
								"{{adminUserId}}",
								"servers",
								"integration-daemon",
								"server-user-id"
							],
							"query": [
								{
									"key": "id",
									"value": "intgdaemonnpa"
								}
							]
						},
						"description": "Set up the user Id that this server should use on open metadata requests when it is processing events (and consequently there is no end user id to use)."
					},
					"response": []
				},
				{
					"name": "Configure the Files Integrator OMIS",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"class\": \"IntegrationServiceRequestBody\",\n    \"omagserverPlatformRootURL\": \"{{baseURL}}\",\n    \"omagserverName\": \"active-metadata-store\",\n    \"integrationConnectorConfigs\": [\n        {\n            \"class\": \"IntegrationConnectorConfig\",\n            \"connectorName\": \"FilesCataloguer\",\n            \"connectorUserId\": \"filecatgnpa\",\n            \"connection\": {\n                \"class\": \"Connection\",\n                \"connectorType\": {\n                    \"class\": \"ConnectorType\",\n                    \"connectorProviderClassName\": \"org.odpi.openmetadata.adapters.connectors.integration.basicfiles.DataFilesMonitorIntegrationProvider\"\n                },\n                \"endpoint\": {\n                    \"class\": \"Endpoint\",\n                    \"address\": \"../opt/sample-data/data-files\"\n                }\n            },\n            \"metadataSourceQualifiedName\": \"FileSystem:sample-files\",\n            \"refreshTimeInterval\": \"15\",\n            \"usesBlockingCalls\": \"false\",\n            \"permittedSynchronization\": \"FROM_THIRD_PARTY\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/open-metadata/admin-services/users/{{adminUserId}}/servers/integration-daemon/integration-services/files-integrator",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"open-metadata",
								"admin-services",
								"users",
								"{{adminUserId}}",
								"servers",
								"integration-daemon",
								"integration-services",
								"files-integrator"
							]
						},
						"description": "Add details of the metadata server to call and the connectors to run."
					},
					"response": []
				},
				{
					"name": "Get integration-daemon's configuration document",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/open-metadata/admin-services/users/{{adminUserId}}/servers/integration-daemon/configuration",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"open-metadata",
								"admin-services",
								"users",
								"{{adminUserId}}",
								"servers",
								"integration-daemon",
								"configuration"
							]
						},
						"description": "Retrieve the configuration document for the named server."
					},
					"response": []
				}
			],
			"description": "This folder describes how to set up the nanny server. This is an integration daemon and runs the nanny connectors."
		},
		{
			"name": "Start Servers",
			"item": [
				{
					"name": "Start simple-metadata-store server - using stored configuration",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/open-metadata/platform-services/users/{{adminUserId}}/server-platform/servers/simple-metadata-store/instance",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"open-metadata",
								"platform-services",
								"users",
								"{{adminUserId}}",
								"server-platform",
								"servers",
								"simple-metadata-store",
								"instance"
							]
						},
						"description": "Activate a server on the OMAG Server Platform.  Use the configuration document found in the configuration document store."
					},
					"response": []
				},
				{
					"name": "Start active-metadata-store server - using stored configuration",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/open-metadata/platform-services/users/{{adminUserId}}/server-platform/servers/active-metadata-store/instance",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"open-metadata",
								"platform-services",
								"users",
								"{{adminUserId}}",
								"server-platform",
								"servers",
								"active-metadata-store",
								"instance"
							]
						},
						"description": "Activate a server on the OMAG Server Platform.  Use the configuration document found in the configuration document store."
					},
					"response": []
				},
				{
					"name": "Start integration-daemon server - using stored configuration",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/open-metadata/platform-services/users/{{adminUserId}}/server-platform/servers/integration-daemon/instance",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"open-metadata",
								"platform-services",
								"users",
								"{{adminUserId}}",
								"server-platform",
								"servers",
								"integration-daemon",
								"instance"
							]
						},
						"description": "Activate a server on the OMAG Server Platform.  Use the configuration document found in the configuration document store."
					},
					"response": []
				},
				{
					"name": "Get integration-daemon status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/servers/integration-daemon/open-metadata/integration-daemon/users/{{user}}/status",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"integration-daemon",
								"open-metadata",
								"integration-daemon",
								"users",
								"{{user}}",
								"status"
							]
						},
						"description": "Retrieves the status of the connectors running in the Integration Daemon"
					},
					"response": []
				}
			],
			"description": "This folder contains the requests to start up the sample servers."
		}
	]
}