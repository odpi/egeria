# SPDX-License-Identifier: Apache-2.0
# Copyright Contributors to the ODPi Egeria project.
name: "Release"

# Trigger when a Release is created in github
# - does not run on modification (may be just text)

on:
  # No checks for branch or repo - assuming release creation is manual, controlled
  #release:
    #types:
      - #created
  # Also allow for manual invocation for testing
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    name: "Release"
    if: startsWith(github.repository,'odpi/')
    steps:
      - uses: actions/checkout@v3
        name: Checkout source
      # Prep for docker builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to container registry (Quay.io)
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_IO_USERNAME }}
          password: ${{ secrets.QUAY_IO_ACCESS_TOKEN }}
      - name: Login to container registry (docker.io)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          # Publishing attributes for maven central (this step adds to setting.xml)
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          # Keys must be known to maven central - require broad publishing
          gpg-private-key: ${{ secrets.OSSRH_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      # Normal build (in future may also run reports (site)) -
      - name: Build with Maven and publish to oss.sonatype.org
        # See https://github.com/actions/toolkit/issues/231 requires parms using . to be quoted
        run: 'mvn -B -DuseMavenCentral clean deploy'
        # Needed for publishing -- note we push to a staging area, login to oss.sonatype.org to
        # verify (close) the repository & release
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_PASSPHRASE }}
      # QEMU is needed for ARM64 build for egeria-configure
      # egeria-configure needs to install utilities
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set Release version env variable
        run: |
          echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
      # Publish container images(egeria) to quay.io and docker.io
      - name: Copy the distribution content to be used in docker copy command
        run: |
          mkdir -p ./open-metadata-resources/open-metadata-deployment/docker/egeria/target/assembly
          cp -r open-metadata-distribution/open-metadata-assemblies/target/egeria-${{ env.VERSION }}-distribution/egeria-omag-${{ env.VERSION }}/. open-metadata-resources/open-metadata-deployment/docker/egeria/target/assembly
      - name: Build and push(egeria) to quay.io and docker.io
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: odpi/egeria:${{ env.VERSION }}, odpi/egeria:latest, quay.io/odpi/egeria:${{ env.VERSION }}, quay.io/odpi/egeria:latest
          context: ./open-metadata-resources/open-metadata-deployment/docker/egeria
          platforms: linux/amd64,linux/arm64
      # Publish container images(egeria-configure) to quay.io and docker.io
      - name: Build and push(egeria-configure) to quay.io and docker.io
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: odpi/egeria-configure:${{ env.VERSION }}, odpi/egeria-configure:latest, quay.io/odpi/egeria-configure:${{ env.VERSION }}, quay.io/odpi/egeria-configure:latest
          context: ./open-metadata-resources/open-metadata-deployment/docker/configure
          platforms: linux/amd64,linux/arm64
      # Mostly for verification - not published to the release itself for now
      - name: Upload assemblies
        uses: actions/upload-artifact@v3
        with:
          name: Assemblies
          path: open-metadata-distribution/open-metadata-assemblies/target/*.gz
