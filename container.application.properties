# SPDX-License-Identifier: Apache-2.0
# Copyright Contributors to the ODPi Egeria project.

# ========================================================================================================
# The application.properties file is used to configure the OMAG Server Platform which is implemented as
# a spring boot application.

###############################################
### Default port for the OMAG Server Platform
################################################
server.port=9443

###############################################
### Set up the configuration document store the OMAG Server Platform
### The values below will set up the clear text config document store (default)
### Change the class name to change the implementation of the configuration document store
################################################
platform.configstore.provider=org.odpi.openmetadata.adapters.adminservices.configurationstore.file.FileBasedServerConfigStoreProvider
platform.configstore.endpoint=data/servers/{0}/config/{0}.config

###############################################
### Set up the platform metadata security connector that provides authorization
### for platform administration, server operations and diagnostic calls.
### By default, there is no platform metadata security connector.
### The values below are for a sample platform metadata security connector based off of Coco Pharmaceutical persona
###############################################
platform.security.provider=org.odpi.openmetadata.metadatasecurity.samples.CocoPharmaSecretsSecurityProvider
platform.security.name=Coco Pharmaceuticals Platform
platform.security.secrets.provider=org.odpi.openmetadata.adapters.connectors.secretsstore.yaml.YAMLSecretsStoreProvider
platform.security.secrets.location=loading-bay/secrets/demo-user-directory.omsecrets
platform.security.secrets.collection=userDirectory

###############################################
### Set up the default configuration document for any new OMAG Server configurations.
###############################################
#platform.default.config.document=\
#  {\
#    "class": "OMAGServerConfig",\
#    "organizationName": "myOrg",\
#    "maxPageSize": 1200,\
#    "eventBusConfig": \
#        {\
#            "class": "EventBusConfig",\
#            "topicURLRoot": "egeria.omag",\
#            "configurationProperties":\
#             {\
#                "producer": {"bootstrap.servers": "~{kafkaEndpoint}~"},\
#                "consumer": {"bootstrap.servers": "~{kafkaEndpoint}~"}\
#             }\
#        }\
#  }

################################################
### Placeholder variables are added to field values in the configuration document
### when the server is being configured using double curly braces.  They are replaced by
### the values specified in platform.placeholder.variables each time the server starts up.
###
### The "kafkaEndpoint" value is the Apache Kafka endpoint, and it is used in the active-metadata-store
### sample configuration.  If your Apache Kafka broker is listening on a different endpoint
### and you want to use active-metadata-store, change this variable to your Apache Kafka's address.
################################################
platform.placeholder.variables=\
  {\
    "kafkaEndpoint" : "host.docker.internal:9192",\
    "egeriaEndpoint" : "https://host.docker.internal:9443",\
    "postgreSQLDatabaseURL" : "jdbc:postgresql://host.docker.internal:5442/egeria",\
    "secretsStore" : "loading-bay/secrets/default.omsecrets",\
    "postgreSQLServerCollectionName" : "PostgreSQL Server:LocalPostgreSQL1"\
  }

################################################
### startup servers configuration
################################################
#userId used to start up the list of configured servers default is 'system'
startup.user=system
# Comma separated names of servers to be started.  The server names should be unquoted.
startup.server.list=active-metadata-store,engine-host,integration-daemon,view-server,simple-metadata-store

################################################
### SSL security.
# The keystore determines the information sent out by the server to identify itself.
# The truststore is where the certificates of trusted servers the platform is calling are located.
# (Note SSL certificate checking is performed on client-side only.)
################################################
server.ssl.key-store=keystore.p12
server.ssl.key-store-password=egeria
server.ssl.keyStoreType=PKCS12
server.ssl.keyAlias=egeriaserverchassis

server.ssl.trust-store=truststore.p12
server.ssl.trust-store-password=egeria

# WARNING! setting 'strict.ssl=false' allows java clients to open https connections without checking the validity of
# certificates from the servers it is calling.
# Alternate you can import self-signed certificates into java truststore or set up a truststore only for this app
# by adding the store into server.ssl.trust-store parameter
strict.ssl=false


################################################
# User security
################################################

# Authentication source
authentication.source=platform
# Authentication mode
authentication.mode=token

################################################
### Additional demo users configuration for when authentication.source=demo
### This file is located in the resources folder of the user-authn module and built into its runtime jar
################################################
spring.config.import=classpath:demo-users.yml

################################################
### Comma separated list of header names to extract from incoming HTTP requests and add to thread local.
### The default value is null and adds no headers.
### Setting the list to * means all headers are captured.
### Otherwise, list the header name in use.
################################################
authn.header.name.list=

################################################
### CORS
################################################
# Comma-separated list of origins.
# Example configuration below is for setting up local development environment where egeria-ui is hosted on one of the two urls.
# cors.allowed-origins=http://localhost,http://localhost:8081
cors.allowed-origins=*

################################################
# landing page (/api/public/app/info)
################################################
app.description=Have a question? || Get in touch via our Slack community https://slack.lfai.foundation/ @@What is Open Metadata? || Find out more on our website https://egeria-project.org/ @@Have more cool ideas? || Feel free to let us know your ideas so we can make it better.
app.title=Egeria Open Metadata | Find the right data with governance

################################################
### Which java packages should be scanned to locate the Spring resource definitions that define the REST APIs?
################################################
scan.packages=org.odpi.openmetadata.*

################################################
### Logging
################################################
logging.level.root=OFF
logging.level.org.springframework=ERROR
logging.level.org.springframework.boot.web.embedded.tomcat=INFO
logging.level.org.odpi.openmetadata.platformchassis.springboot=INFO
# tracing SQL calls
#logging.level.org.odpi.openmetadata.adapters.connectors.resource.jdbc=DEBUG
# tracing REST calls
#logging.level.org.odpi.openmetadata.commonservices.ffdc.RESTCallLogger=DEBUG

################################################
### Swagger Docs
################################################
springdoc.version='@springdoc.version@'
springdoc.api-docs.enabled=true
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.displayRequestDuration=true
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.operationsSorter=alpha
springdoc.swagger-ui.docExpansion=none

################################################
### Spring Boot Actuator
################################################
# Endpoints web configuration
#management.endpoints.web.exposure.include=*
management.health.cassandra.enabled=false
management.health.redis.enabled=false
management.health.ldap.enabled=false