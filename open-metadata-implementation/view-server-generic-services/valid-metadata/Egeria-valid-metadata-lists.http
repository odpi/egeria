# Egeria-valid-metadata-lists

@baseURL=https://localhost:9443
@viewServer=view-server

###
# =====================================================================================================================
# Manage the authentication token.  Run this request to create/refresh the token.

# @name Token (RequestBody)
POST {{baseURL}}/api/token
Content-Type: application/json

{
  "userId" : "peterprofile",
  "password" : "secret"
}

> {% client.global.set("token", response.body); %}

###
# =====================================================================================================================
# Setting up 4 valid values for the category property: "clinical-trial", "manufacturing-improvement",
# "security-assessment", "incident-investigation"
#
# Further Information: https://egeria-project.org/services/omvs/valid-metadata/overview/

###
# @name setUpValidMetadataValue - clinical-trial
#
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/setup-value/category
Authorization: Bearer {{token}}
Content-Type: application/json

{                                       
  "displayName": "Clinical Trial",
  "description": "Element supporting one or more clinical trials.",
  "preferredValue": "clinical-trial",
  "dataType": "string",
  "isCaseSensitive": false
}

###
# @name setUpValidMetadataValue - manufacturing-improvement
#
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/setup-value/category
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "displayName": "Manufacturing Improvement",
  "description": "Element supporting one or more manufacturing improvements.",
  "preferredValue": "manufacturing-improvement",
  "dataType": "string",
  "isCaseSensitive": false
}

###
# @name setUpValidMetadataValue - security-assessment
#
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/setup-value/category
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "displayName": "Security Assessment",
  "description": "Element supporting one or more security assessments.",
  "preferredValue": "security-assessment",
  "dataType": "string",
  "isCaseSensitive": false
}

###
# @name setUpValidMetadataValue - security-assessment
#
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/setup-value/category
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "displayName": "Security Assessment",
  "description": "Element supporting one or more security assessments.",
  "preferredValue": "security-assessment",
  "dataType": "string",
  "isCaseSensitive": false
}

###
# =====================================================================================================================

###
# @name setUpValidMetadataMapName
# Create or update the valid value for a name that can be stored in a particular open metadata property name.
# This property is of type map from name to string.
# The mapName is stored in the preferredValue property of validMetadataValue.
# If the typeName is null, this valid value applies to properties of this name from any open metadata type.
# If a valid value is already set up for this property (with overlapping effective dates) then the valid value is updated.
#
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/setup-map-name/{{propertyName}}?typeName={{typeName}}
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "displayName": "",
  "description": "",
  "preferredValue": "put mapName value here",
  "dataType": "",
  "isCaseSensitive": false,
  "isDeprecated" : false
}


###
# @name setUpValidMetadataMapValue
# Create or update the valid value for a name that can be stored in a particular open metadata property name.
# This property is of type map from name to string.
# The valid value is stored in the preferredValue property of validMetadataValue.
# If the typeName is null, this valid value applies to properties of this name from any open metadata type.
# If a valid value is already set up for this property (with overlapping effective dates) then the valid value is updated.
#
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/setup-map-value/{{propertyName}}/{{mapName}}?typeName={{typeName}}
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "displayName": "",
  "description": "",
  "preferredValue": "put map value here",
  "dataType": "",
  "isCaseSensitive": false
}


###
# @name clearValidMetadataValue
# Remove a valid value for a property.
#
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/clear-value/{{propertyName}}?typeName={{typeName}}&preferredValue={{preferredValue}}
Authorization: Bearer {{token}}
Content-Type: application/json


###
# @name clearValidMetadataMapName
# Remove a valid map name value for a property.  The match is done on mapName name.
#
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/clear-map-name/{{propertyName}}?typeName={{typeName}}&mapName={{mapName}}
Authorization: Bearer {{token}}
Content-Type: application/json


###
# @name clearValidMetadataMapValue
# Remove a valid map name value for a property.  The match is done on preferred name.
#
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/clear-map-value/{{propertyName}}/{{mapName}}?typeName={{typeName}}&preferredValue={{preferredValue}}
Authorization: Bearer {{token}}
Content-Type: application/json


###
# @name validateMetadataValue
# Validate whether the value found in an open metadata property is valid.
#
GET {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/validate-value/{{propertyName}}?typeName={{typeName}}&actualValue={{actualValue}}
Authorization: Bearer {{token}}
Content-Type: application/json


###
# @name validateMetadataMapName
# Validate whether the name found in an open metadata map property is valid.
#
GET {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/validate-map-name/{{propertyName}}?typeName={{typeName}}&mapName={{mapName}}
Authorization: Bearer {{token}}
Content-Type: application/json


###
# @name validateMetadataMapValue
# Validate whether the value found in an open metadata map property is valid.
#
GET {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/validate-map-value/{{propertyName}}/{{mapName}}?typeName={{typeName}}&actualValue={{actualValue}}
Authorization: Bearer {{token}}
Content-Type: application/json


###
# @name getValidMetadataValue
# Retrieve details of a specific valid value for a property.
#
GET {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/get-value/{{propertyName}}?typeName={{typeName}}&preferredValue={{preferredValue}}
Authorization: Bearer {{token}}
Content-Type: application/json


###
# @name getValidMetadataMapName
# Retrieve details of a specific valid name for a map property.
#
GET {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/get-map-name/{{propertyName}}?typeName={{typeName}}&mapName={{mapName}}
Authorization: Bearer {{token}}
Content-Type: application/json


###
# @name getValidMetadataMapValue
# Retrieve details of a specific valid value for a map name.
#
GET {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/get-map-value/{{propertyName}}/{{mapName}}?typeName={{typeName}}&preferredValue={{preferredValue}}
Authorization: Bearer {{token}}
Content-Type: application/json


###
# @name getValidMetadataValues
# Retrieve all the valid values for the requested property.
#
GET {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/get-valid-metadata-values/{{propertyName}}?typeName={{typeName}}&startFrom=0&pageSize=0
Authorization: Bearer {{token}}
Content-Type: application/json


###
# @name getConsistentMetadataValues
# Retrieve all the consistent valid values for the requested property.
#
GET {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/{{propertyName}}/consistent-metadata-values?typeName={{typeName}}&mapName={{mapName}}&preferredValue={{preferredValue}}&startFrom=0&pageSize=0
Authorization: Bearer {{token}}
Content-Type: application/json


###

@typeName1=
@propertyName1=
@mapName1=
@preferredValue1=

@typeName2=
@propertyName2=
@mapName2=
@preferredValue2=

###
# @name setConsistentMetadataValues
# Set up consistent metadata values relationship between the two property values.
#
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/{{propertyName1}}/consistent-metadata-values/{{propertyName2}}?typeName1={{typeName1}}&mapName1={{mapName1}}&preferredValue1={{preferredValue1}}&?typeName2={{typeName2}}&mapName2={{mapName2}}&preferredValue2={{preferredValue2}}
Authorization: Bearer {{token}}
Content-Type: application/json

###
# =====================================================================================================================
###

# @name getAllTypes
# Returns the list of different types of metadata organized into two groups.  The first are the
# attribute type definitions (AttributeTypeDefs).  These provide types for attributes in full
# type definitions.  Full type definitions (TypeDefs) describe types for entities, relationships
# and classifications.
#
GET {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/open-metadata-types
Authorization: Bearer {{token}}
Content-Type: application/json

####
# @name getEntityDefs
# Returns all the entity type definitions.
GET {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/open-metadata-types/entity-defs
Authorization: Bearer {{token}}
Content-Type: application/json

####
# @name getRelationshipDefs
# Returns all the relationship type definitions.
GET {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/open-metadata-types/relationship-defs
Authorization: Bearer {{token}}
Content-Type: application/json

####
# @name getClassificationDefs
# Returns all the classification type definitions.
GET {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/open-metadata-types/classification-defs
Authorization: Bearer {{token}}
Content-Type: application/json

###

@standard=
@organization=
@identifier=

####
# @name getSubTypes
# Returns all the TypeDefs for a specific subtype.  If a null result is returned it means the
# type has no subtypes.
#
GET {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/open-metadata-types/sub-types/{{typeName}}
Authorization: Bearer {{token}}
Content-Type: application/json

####
# @name getValidRelationshipTypes
# Returns all the TypeDefs for relationships that can be attached to the requested entity type.
#
GET {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/open-metadata-types/{{typeName}}/attached-relationships
Authorization: Bearer {{token}}
Content-Type: application/json

####
# @name getValidClassificationTypes
# Returns all the TypeDefs for classifications that can be attached to the requested entity type.
#
GET {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/open-metadata-types/{{typeName}}/attached-classifications
Authorization: Bearer {{token}}
Content-Type: application/json

###
# @name getTypeDefByName
# Return the TypeDef identified by the unique name.
GET {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/open-metadata-types/name/{{typeName}}
Authorization: Bearer {{token}}
Content-Type: application/json

###
# =====================================================================================================================
# Specification properties - Note: The request body varies depending on the type of property.

@specificationPropertyGUID=add guid here
@elementGUID=add guid here

###
# @name getSpecificationPropertyTypes
# Return the list of specification property types.

GET {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/specification-properties/type-names
Authorization: Bearer {{token}}
Content-Type: application/json

###
# @name setUpSpecificationProperty (placeholderProperty)
# Create a placeholderProperty specification property and attach it to an element.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/elements/{elementGUID}/specification-properties
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "PlaceholderProperty",
  "name": "placeholder property name",
  "description": "placeholder property description",
  "otherPropertyValues": {
    "property1" : "propertyValue1",
    "property2" : "propertyValue2"
  }
}


###
# @name setUpSpecificationProperty (replacementAttribute)
# Create a replacementAttribute specification property and attach it to an element.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/elements/{elementGUID}/specification-properties
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "ReplacementAttribute",
  "name": "replacement attribute name",
  "description": "replacement attribute description",
  "datatype": "data type of the attribute, eg string",
  "example": "this is an example - often it is the default value for an optional replacement attribute.",
  "required": false,
  "otherPropertyValues": {
    "property1" : "propertyValue1",
    "property2" : "propertyValue2"
  }
}


###
# @name setUpSpecificationProperty (replacementAttribute)
# Create a replacementAttribute specification property and attach it to an element.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/elements/{elementGUID}/specification-properties
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "ReplacementAttribute",
  "name": "replacement attribute name",
  "description": "replacement attribute description",
  "datatype": "data type of the attribute, eg string",
  "example": "this is an example - often it is the default value for an optional replacement attribute.",
  "required": false,
  "otherPropertyValues": {
    "property1" : "propertyValue1",
    "property2" : "propertyValue2"
  }
}


###
# @name setUpSpecificationProperty (supportedTemplate)
# Create a supportedTemplate specification property and attach it to an element.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/elements/{elementGUID}/specification-properties
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "SupportedTemplate",
  "name": "template name",
  "description": "template description",
  "openMetadataTypeName": "open metadata type of the element produced by the template",
  "required": false,
  "otherPropertyValues": {
    "property1" : "propertyValue1",
    "property2" : "propertyValue2"
  }
}

###
# @name setUpSpecificationProperty (supportedRequestType)
# Create a supportedRequestType specification property and attach it to an element.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/elements/{elementGUID}/specification-properties
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "SupportedRequestType",
  "name": "request type name",
  "description": "request type description",
  "otherPropertyValues": {
    "property1" : "propertyValue1",
    "property2" : "propertyValue2"
  }
}

###
# @name setUpSpecificationProperty (supportedRequestParameter)
# Create a supportedRequestParameter specification property and attach it to an element.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/elements/{elementGUID}/specification-properties
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "SupportedRequestParameter",
  "name": "request parameter name",
  "description": "request parameter description",
  "datatype": "data type of the parameter, eg string",
  "example": "this is an example - often it is the default value for an optional request parameter.",
  "required": false,
  "otherPropertyValues": {
    "property1" : "propertyValue1",
    "property2" : "propertyValue2"
  }
}

###
# @name setUpSpecificationProperty (supportedActionTarget)
# Create a supportedActionTarget specification property and attach it to an element.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/elements/{elementGUID}/specification-properties
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "SupportedActionTarget",
  "name": "action target name",
  "description": "action target description",
  "openMetadataTypeName" : "add open metadata type name of the action target element here",
  "deployedImplementationType" : "add deployed implementation type here",
  "required" : true,
  "otherPropertyValues": {
    "property1" : "propertyValue1",
    "property2" : "propertyValue2"
  }
}

###
# @name setUpSpecificationProperty (supportedAnalysisStep)
# Create a supportedActionTarget specification property and attach it to an element.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/elements/{elementGUID}/specification-properties
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "SupportedAnalysisStep",
  "name": "analysis step name",
  "description": "analysis step description",
  "otherPropertyValues": {
    "property1" : "propertyValue1",
    "property2" : "propertyValue2"
  }
}


###
# @name setUpSpecificationProperty (supportedConfigurationProperty)
# Create a supportedActionTarget specification property and attach it to an element.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/elements/{elementGUID}/specification-properties
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "SupportedConfigurationProperty",
  "name": "configuration property name",
  "description": "configuration property description",
  "datatype": "data type of the property, eg string",
  "example": "this is an example - often it is the default value for an optional configuration property",
  "required": false,
  "otherPropertyValues": {
    "property1" : "propertyValue1",
    "property2" : "propertyValue2"
  }
}

###
# @name setUpSpecificationProperty (producedGuard)
# Create a producedGuard specification property and attach it to an element.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/elements/{elementGUID}/specification-properties
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "ProducedGuard",
  "name": "guard name",
  "description": "guard description",
  "completionStatus" : "INVALID",
  "otherPropertyValues": {
    "property1" : "propertyValue1",
    "property2" : "propertyValue2"
  }
}

###
# @name setUpSpecificationProperty (producedRequestParameter)
# Create a producedRequestParameter specification property and attach it to an element.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/elements/{elementGUID}/specification-properties
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "ProducedRequestParameter",
  "name": "request parameter name",
  "description": "request parameter description",
  "datatype": "data type of the parameter, eg string",
  "example": "this is an example - often it is the default value for an optional request parameter.",
  "required": false,
  "otherPropertyValues": {
    "property1" : "propertyValue1",
    "property2" : "propertyValue2"
  }
}


###
# @name setUpSpecificationProperty (producedRequestParameter)
# Create a producedRequestParameter specification property and attach it to an element.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/elements/{elementGUID}/specification-properties
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "ProducedRequestParameter",
  "name": "request parameter name",
  "description": "request parameter description",
  "datatype": "data type of the parameter, eg string",
  "example": "this is an example - often it is the default value for an optional request parameter.",
  "required": false,
  "otherPropertyValues": {
    "property1" : "propertyValue1",
    "property2" : "propertyValue2"
  }
}

###
# @name setUpSpecificationProperty (producedActionTarget)
# Create a producedActionTarget specification property and attach it to an element.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/elements/{elementGUID}/specification-properties
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "ProducedActionTarget",
  "name": "action target name",
  "description": "action target description",
  "openMetadataTypeName" : "add open metadata type name of the action target element here",
  "deployedImplementationType" : "add deployed implementation type here",
  "required" : true,
  "otherPropertyValues": {
    "property1" : "propertyValue1",
    "property2" : "propertyValue2"
  }
}


###
# @name setUpSpecificationProperty (producedAnnotationType)
# Create a producedActionTarget specification property and attach it to an element.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/elements/{elementGUID}/specification-properties
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "ProducedAnnotationType",
  "name": "annotation type name",
  "description": "annotation type description",
  "openMetadataTypeName" : "add open metadata type used for the annotation here",
  "analysisStepName" : "add name of analysis step where this annotation type is produced here",
  "explanation" : "add explanation of the processing or results stored in the annotation here",
  "expression" : "add description of any calculation here",
  "otherPropertyValues": {
    "property1" : "propertyValue1",
    "property2" : "propertyValue2"
  }
}


###
# @name deleteSpecificationProperty
# Removes a specification property added to the element.  This deletes the link to the specification property and the specification property itself.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/specification-properties/{specificationPropertyGUID}/delete
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "DeleteElementRequestBody",
  "cascadeDelete" : false,
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}

###
# @name findSpecificationProperty
# Return the list of specification properties containing the supplied string.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/specification-properties/by-search-string
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "SearchStringRequestBody",
  "searchString" : "Add value here",
  "startsWith" : false,
  "endsWith" : false,
  "ignoreCase" : true,
  "startFrom" : 0,
  "pageSize": 10,
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "limitResultsByStatus" : ["ACTIVE"],
  "sequencingOrder" : "PROPERTY_ASCENDING",
  "sequencingProperty" : "qualifiedName"
}

###
# @name getSpecificationPropertyByType
#  Return the list of specification properties containing the supplied type.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/specification-properties/by-type?specificationPropertyType=PRODUCED_GUARDS
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "ResultsRequestBody",
  "startFrom" : 0,
  "pageSize": 10,
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "limitResultsByStatus" : ["ACTIVE"],
  "sequencingOrder" : "PROPERTY_ASCENDING",
  "sequencingProperty" : "qualifiedName"
}


###
# @name getSpecificationPropertyByName
#  Return the list of specification properties containing the supplied name.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/specification-properties/by-name
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "FilterRequestBody",
  "filter" : "Add value here",
  "startFrom" : 0,
  "pageSize": 10,
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "limitResultsByStatus" : ["ACTIVE"],
  "sequencingOrder" : "PROPERTY_ASCENDING",
  "sequencingProperty" : "qualifiedName"
}


###
# @name getSpecificationPropertyByGUID
# Return the requested specificationProperty.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/valid-metadata/specification-properties/{specificationPropertyGUID}/retrieve
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "GetRequestBody",
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}

###
