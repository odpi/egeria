# Egeria-governance-officer-view-service

@baseURL=https://localhost:9443
@viewServer=view-server

###
# =====================================================================================================================
# Manage the authentication token.  Run this request to create/refresh the token.

# @name Token (RequestBody)
POST {{baseURL}}/api/token
Content-Type: application/json

{
  "userId" : "peterprofile",
  "password" : "secret"
}

> {% client.global.set("token", response.body); %}


###
# =====================================================================================================================
# Work with Governance Definitions
# https://egeria-project.org/concepts/governance-definition

@governanceDefinitionGUID=add guid here

###
# @name createGovernanceDefinition (with parent)
# Create an anchored governance definition linked to a parent.  It may be of class:
## * BusinessImperativeProperties
## * RegulationArticleProperties
## * ThreatProperties
## * GovernancePrincipleProperties
## * GovernanceObligationProperties
## * GovernanceApproachProperties
## * GovernanceProcessingPurposeProperties
# The class replaces "GovernanceDefinitionProperties" in the "class" property under "properties"
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "NewElementRequestBody",
  "anchorGUID" : "add guid here",
  "isOwnAnchor": false,
  "parentGUID": "add guid here",
  "parentRelationshipTypeName": "add type name here",
  "parentRelationshipProperties": {
    "class": "RelationshipElementProperties",
    "propertyValueMap" : {
      "description" : {
        "class": "PrimitiveTypePropertyValue",
        "typeName": "string",
        "primitiveValue" : "New description"
      }
    }
  },
  "parentAtEnd1": false,
  "properties": {
    "class" : "GovernanceDefinitionProperties",
    "domainIdentifier": 0,
    "qualifiedName": "add unique name here",
    "displayName": "add short name here",
    "summary": "add summary here",
    "description": "add description here",
    "scope": "add scope of effect for this definition",
    "importance": "add importance for this definition",
    "implications": [],
    "outcomes": [],
    "results": [],
    "additionalProperties": {
      "property1" : "propertyValue1",
      "property2" : "propertyValue2"
    },
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  },
  "initialStatus": "ACTIVE",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}

###
# @name createGovernanceStrategy (with parent)
# Create an anchored governance definition linked to a parent of type GovernanceStrategy
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "NewElementRequestBody",
  "anchorGUID" : "add guid here",
  "isOwnAnchor": false,
  "parentGUID": "add guid here",
  "parentRelationshipTypeName": "add type name here",
  "parentRelationshipProperties": {
    "class": "RelationshipElementProperties",
    "propertyValueMap" : {
      "description" : {
        "class": "PrimitiveTypePropertyValue",
        "typeName": "string",
        "primitiveValue" : "New description"
      }
    }
  },
  "parentAtEnd1": false,
  "properties": {
    "class" : "GovernanceStrategyProperties",
    "domainIdentifier": 0,
    "qualifiedName": "add unique name here",
    "displayName": "add short name here",
    "summary": "add summary here",
    "description": "add description here",
    "scope": "add scope of effect for this definition",
    "importance": "add importance for this definition",
    "businessImperatives" : [],
    "implications": [],
    "outcomes": [],
    "results": [],
    "additionalProperties": {
      "property1" : "propertyValue1",
      "property2" : "propertyValue2"
    },
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  },
  "initialStatus": "ACTIVE",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}

###
# @name createRegulation (with parent)
# Create an anchored governance definition linked to a parent of type Regulation
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "NewElementRequestBody",
  "anchorGUID" : "add guid here",
  "isOwnAnchor": false,
  "parentGUID": "add guid here",
  "parentRelationshipTypeName": "add type name here",
  "parentRelationshipProperties": {
    "class": "RelationshipElementProperties",
    "propertyValueMap" : {
      "description" : {
        "class": "PrimitiveTypePropertyValue",
        "typeName": "string",
        "primitiveValue" : "New description"
      }
    }
  },
  "parentAtEnd1": false,
  "properties": {
    "class" : "RegulationProperties",
    "domainIdentifier": 0,
    "qualifiedName": "add unique name here",
    "displayName": "add short name here",
    "summary": "add summary here",
    "description": "add description here",
    "scope": "add scope of effect for this definition",
    "importance": "add importance for this definition",
    "jurisdiction" : "",
    "implications": [],
    "outcomes": [],
    "results": [],
    "additionalProperties": {
      "property1" : "propertyValue1",
      "property2" : "propertyValue2"
    },
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  },
  "initialStatus": "ACTIVE",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}


###
# @name createGovernanceControl (with parent)
# Create a governance control definition. It may be of class:
## * GovernanceRuleProperties
## * ServiceLevelObjectiveProperties
## * GovernanceProcessProperties
## * GoveranceResponsibilityProperties
## * GovernanceProcedureProperties
## * SecurityAccessControlProperties
# The class places "GovernanceControlProperties" in the "class" property.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "NewElementRequestBody",
  "anchorGUID" : "add guid here",
  "isOwnAnchor": false,
  "parentGUID": "add guid here",
  "parentRelationshipTypeName": "add type name here",
  "parentRelationshipProperties": {
    "class": "RelationshipElementProperties",
    "propertyValueMap" : {
      "description" : {
        "class": "PrimitiveTypePropertyValue",
        "typeName": "string",
        "primitiveValue" : "New description"
      }
    }
  },
  "parentAtEnd1": false,
  "properties": {
    "class" : "GovernanceControlProperties",
    "typeName" : "enter the type of the governance definition",
    "domainIdentifier": 0,
    "qualifiedName": "add unique name here",
    "displayName": "add short name here",
    "summary": "add summary here",
    "description": "add description here",
    "scope": "add scope of effect for this definition",
    "importance": "add importance for this definition",
    "implementationDescription" : "Describe how this control will be implemented",
    "implications": [],
    "outcomes": [],
    "results": [],
    "additionalProperties": {
      "property1" : "propertyValue1",
      "property2" : "propertyValue2"
    },
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  },
  "initialStatus": "ACTIVE",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}

###
# @name createSecurityGroup (with parent)
# Create an anchored governance definition linked to a parent of type SecurityGroup
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "NewElementRequestBody",
  "anchorGUID" : "add guid here",
  "isOwnAnchor": false,
  "parentGUID": "add guid here",
  "parentRelationshipTypeName": "add type name here",
  "parentRelationshipProperties": {
    "class": "RelationshipElementProperties",
    "propertyValueMap" : {
      "description" : {
        "class": "PrimitiveTypePropertyValue",
        "typeName": "string",
        "primitiveValue" : "New description"
      }
    }
  },
  "parentAtEnd1": false,
  "properties": {
    "class" : "SecurityGroupProperties",
    "domainIdentifier": 0,
    "distinguishedName" : "",
    "qualifiedName": "add unique name here",
    "displayName": "add short name here",
    "summary": "add summary here",
    "description": "add description here",
    "scope": "add scope of effect for this definition",
    "importance": "add importance for this definition",
    "implementationDescription" : "Describe how this control will be implemented",
    "implications": [],
    "outcomes": [],
    "results": [],
    "additionalProperties": {
      "property1" : "propertyValue1",
      "property2" : "propertyValue2"
    },
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  },
  "initialStatus": "ACTIVE",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}

###
# @name createNamingStandardRule (with parent)
# Create an anchored governance definition linked to a parent of type NamingStandardRule
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "NewElementRequestBody",
  "anchorGUID" : "add guid here",
  "isOwnAnchor": false,
  "parentGUID": "add guid here",
  "parentRelationshipTypeName": "add type name here",
  "parentRelationshipProperties": {
    "class": "RelationshipElementProperties",
    "propertyValueMap" : {
      "description" : {
        "class": "PrimitiveTypePropertyValue",
        "typeName": "string",
        "primitiveValue" : "New description"
      }
    }
  },
  "parentAtEnd1": false,
  "properties": {
    "class" : "NamingStandardRuleProperties",
    "domainIdentifier": 0,
    "qualifiedName": "add unique name here",
    "displayName": "add short name here",
    "summary": "add summary here",
    "description": "add description here",
    "scope": "add scope of effect for this definition",
    "importance": "add importance for this definition",
    "implications": [],
    "implementationDescription" : "Describe how this control will be implemented",
    "namePatterns" : [],
    "outcomes": [],
    "results": [],
    "additionalProperties": {
      "property1" : "propertyValue1",
      "property2" : "propertyValue2"
    },
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  },
  "initialStatus": "ACTIVE",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}

###
# @name createCertificationType (with parent)
# Create an anchored governance definition of type CertificationType, linked to a parent.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "NewElementRequestBody",
  "anchorGUID" : "add guid here",
  "isOwnAnchor": false,
  "parentGUID": "add guid here",
  "parentRelationshipTypeName": "add type name here",
  "parentRelationshipProperties": {
    "class": "RelationshipElementProperties",
    "propertyValueMap" : {
      "description" : {
        "class": "PrimitiveTypePropertyValue",
        "typeName": "string",
        "primitiveValue" : "New description"
      }
    }
  },
  "parentAtEnd1": false,
  "properties": {
    "class" : "CertificationTypeProperties",
    "domainIdentifier": 0,
    "qualifiedName": "add unique name here",
    "displayName": "add short name here",
    "summary": "add summary here",
    "description": "add description here",
    "scope": "add scope of effect for this definition",
    "importance": "add importance for this definition",
    "details" : "",
    "implications": [],
    "outcomes": [],
    "results": [],
    "additionalProperties": {
      "property1" : "propertyValue1",
      "property2" : "propertyValue2"
    },
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  },
  "initialStatus": "ACTIVE",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}

###
# @name createLicenseType (with parent)
# Create an anchored governance definition of type LicenseType, linked to a parent.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "NewElementRequestBody",
  "anchorGUID" : "add guid here",
  "isOwnAnchor": false,
  "parentGUID": "add guid here",
  "parentRelationshipTypeName": "add type name here",
  "parentRelationshipProperties": {
    "class": "RelationshipElementProperties",
    "propertyValueMap" : {
      "description" : {
        "class": "PrimitiveTypePropertyValue",
        "typeName": "string",
        "primitiveValue" : "New description"
      }
    }
  },
  "parentAtEnd1": false,
  "properties": {
    "class" : "LicenseTypeProperties",
    "domainIdentifier": 0,
    "qualifiedName": "add unique name here",
    "displayName": "add short name here",
    "summary": "add summary here",
    "description": "add description here",
    "scope": "add scope of effect for this definition",
    "usage": "add usage for this definition",
    "importance": "add importance for this definition",
    "details" : "",
    "implications": [],
    "outcomes": [],
    "results": [],
    "additionalProperties": {
      "property1" : "propertyValue1",
      "property2" : "propertyValue2"
    },
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  },
  "initialStatus": "ACTIVE",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}


###
# @name createGovernanceDefinitionFromTemplate
# Create a new metadata element to represent a governance definition using an existing metadata element as a template.  The template defines additional classifications and relationships that should be added to the new element.",
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions/from-template
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "TemplateRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "anchorGUID" : "add guid here",
  "isOwnAnchor": false,
  "parentGUID": "add guid here",
  "parentRelationshipTypeName": "add type name here",
  "parentRelationshipProperties": {
    "class": "RelationshipElementProperties",
    "propertyValueMap" : {
      "description" : {
        "class": "PrimitiveTypePropertyValue",
        "typeName": "string",
        "primitiveValue" : "New description"
      }
    }
  },
  "parentAtEnd1": false,
  "templateGUID": "add guid here",
  "replacementProperties": {
    "class": "ElementProperties",
    "propertyValueMap" : {
      "description" : {
        "class": "PrimitiveTypePropertyValue",
        "typeName": "string",
        "primitiveValue" : "New description"
      }
    }
  },
  "placeholderPropertyValues":  {
    "placeholder1" : "propertyValue1",
    "placeholder2" : "propertyValue2"
  }
}



###
# @name updateGovernanceDefinition
# Update the properties of a governance definition.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions/{{governanceDefinitionGUID}}/update
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "UpdateElementRequestBody",
  "properties": {
    "class" : "GovernanceDefinitionProperties",
    "qualifiedName": "add unique name here",
    "displayName": "add short name here",
    "description": "add description here",
    "namespace": "add namespace for this structure",
    "versionIdentifier": "add version for this structure",
    "additionalProperties": {
      "property1" : "propertyValue1",
      "property2" : "propertyValue2"
    },
    "extendedProperties": {
      "property1" : "propertyValue1",
      "property2" : "propertyValue2"
    },
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  },
  "mergeUpdate": true,
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}


###
# @name updateGovernanceDefinitionStatus
# Update the status of a governance definition.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/metadata-elements/{{governanceDefinitionGUID}}/update-status
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "UpdateStatusRequestBody",
  "newStatus": "ACTIVE",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}

###

@governanceDefinitionOneGUID=add guid here
@governanceDefinitionTwoGUID=add guid here
@relationshipTypeName=add type name here

###
# @name linkPeerDefinitions
# Attach two peer governance definitions. Request body is optional.
# The relationshipTypeNme can be:
## * GovernanceDriverLink between governance drivers (GovernanceStrategy, BusinessImperitive, Regulation, RegulationArticle, Threat).
## * GovernancePolicyLink between governance policies (GovernancePrinciple, GovernanceObligation, GovernanceApproach).
## * GovernanceControlLink between governance controls (GovernanceRule, GovernanceProcess, GovernanceResponsibility, GovernanceProcedure, SecurityAccessControl, SecurityGroup).
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions/{{governanceDefinitionOneGUID}}/peer-definitions/{{relationshipTypeName}}/{{governanceDefinitionTwoGUID}}/attach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "NewRelationshipRequestBody",
  "properties": {
    "class": "PeerDefinitionProperties",
    "description": "",
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  },
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}


###

# @name detachPeerDefinitions
# Detach a governance definition from one of its peers. Request body is optional.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions/{{governanceDefinitionOneGUID}}/peer-definitions/{{relationshipTypeName}}/{{governanceDefinitionTwoGUID}}/detach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "DeleteRelationshipRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}


###
# @name attachSupportingDefinition
# Attach a supporting governance definition. Request body is optional.
# The relationshipTypeNme can be:
## * GovernanceResponse between governance drivers (GovernanceStrategy, BusinessImperitive, Regulation, RegulationArticle, Threat) and governance policies (GovernancePrinciple, GovernanceObligation, GovernanceApproach).
## * GovernanceMechanism between governance policies (GovernancePrinciple, GovernanceObligation, GovernanceApproach) and governance controls (GovernanceRule, GovernanceProcess, GovernanceResponsibility, GovernanceProcedure, SecurityAccessControl, SecurityGroup).
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions/{{governanceDefinitionOneGUID}}/supporting-definitions/{{relationshipTypeName}}/{{governanceDefinitionTwoGUID}}/attach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "NewRelationshipRequestBody",
  "properties": {
    "class": "SupportingDefinitionProperties",
    "rationale": "",
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  },
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}


###

# @name detachSupportingDefinition
# Detach a governance definition from a supporting governance definition. Request body is optional.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions/{{governanceDefinitionOneGUID}}/supporting-definitions/{{relationshipTypeName}}/{{governanceDefinitionTwoGUID}}/detach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "DeleteRelationshipRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}


###
# @name deleteGovernanceDefinition
# Delete a governance definition. Request body is optional.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions/{{governanceDefinitionGUID}}/delete
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "DeleteElementRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}


###
# @name findAllGovernanceDefinitions
# Retrieve the list of governance definition metadata elements that contain the search string.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions/by-search-string
Authorization: Bearer {{token}}
Content-Type: application/json


###
# @name findAllGovernanceDefinitions - with full request body
# Retrieve the list of governance definition metadata elements that contain the search string.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions/by-search-string
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "SearchStringRequestBody",
  "startsWith" : false,
  "endsWith" : false,
  "ignoreCase" : true,
  "startFrom" : 0,
  "pageSize": 0,
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "limitResultsByStatus" : ["ACTIVE"],
  "sequencingOrder" : "PROPERTY_ASCENDING",
  "sequencingProperty" : "qualifiedName"
}


###
# @name findGovernanceDefinitions
# Retrieve the list of governance definition metadata elements that contain the search string.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions/by-search-string
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "SearchStringRequestBody",
  "searchString": "xxx",
  "startsWith" : false,
  "endsWith" : false,
  "ignoreCase" : true,
  "startFrom" : 0,
  "pageSize": 0
}


###
# @name findGovernanceDefinitions - with full request body
# Retrieve the list of governance definition metadata elements that contain the search string.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions/by-search-string
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "SearchStringRequestBody",
  "searchString": "xxx",
  "startsWith" : false,
  "endsWith" : false,
  "ignoreCase" : true,
  "startFrom" : 0,
  "pageSize": 0,
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "limitResultsByStatus" : ["ACTIVE"],
  "sequencingOrder" : "PROPERTY_ASCENDING",
  "sequencingProperty" : "qualifiedName"
}

###

# @name getGovernanceDefinitionsByName
# Returns the list of governance definitions with a particular name.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions/by-name
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "filter" : "Add name here",
  "startFrom": 0,
  "pageSize": 10
}


###

# @name getGovernanceDefinitionsByName - with full request body
# Returns the list of governance definitions with a particular name.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions/by-name
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "FilterRequestBody",
  "filter" : "Add name here",
  "startFrom": 0,
  "pageSize": 10,
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "limitResultsByStatus" : ["ACTIVE"],
  "sequencingOrder" : "PROPERTY_ASCENDING",
  "sequencingProperty" : "qualifiedName"
}


###
# @name getGovernanceDefinitionByGUID
# Return the properties of a specific governance definition.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions/{{governanceDefinitionGUID}}/retrieve
Authorization: Bearer {{token}}
Content-Type: application/json

###
# @name getGovernanceDefinitionByGUID - with request body
# Return the properties of a specific governance definition.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions/{{governanceDefinitionGUID}}/retrieve
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "GetRequestBody",
  "metadataElementTypeName": "GovernancePolicy",
  "metadataElementSubtypeNames": [],
  "skipRelationships": [],
  "includeOnlyRelationships": [],
  "relationshipsPageSize": 100,
  "skipClassifiedElements": [],
  "includeOnlyClassifiedElements": [],
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}


###
# =====================================================================================================================
# A governance action type runs a single engine action.
#


###
# @name getAllGovernanceActionTypes
# Retrieve the list of governance action type metadata elements that contain the search string.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions/by-search-string
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "SearchStringRequestBody",
  "metadataElementTypeName": "GovernanceActionType"
}

###
# @name findGovernanceActionTypes
# Retrieve the list of governance action type metadata elements that contain the search string.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions/by-search-string
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "SearchStringRequestBody",
  "metadataElementTypeName": "GovernanceActionType",
  "searchString": "xxx",
  "startsWith" : false,
  "endsWith" : false,
  "ignoreCase" : true,
  "startFrom" : 0,
  "pageSize": 0,
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "limitResultsByStatus" : ["ACTIVE"],
  "sequencingOrder" : "PROPERTY_ASCENDING",
  "sequencingProperty" : "qualifiedName"
}


###
# @name getGovernanceActionTypesByName
# Retrieve the list of governance action type metadata elements with a matching qualified or display name.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions/by-name
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "filter" : "AssetSurvey:survey-kafka-server",
  "metadataElementTypeName": "GovernanceActionType",
  "startFrom" : 0,
  "pageSize": 0
}

###

@governanceActionTypeGUID=add guid here

###
# @name getGovernanceActionTypeByGUID
# Retrieve the governance action type metadata element with the supplied unique identifier.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions/{{governanceActionTypeGUID}}/retrieve
Authorization: Bearer {{token}}


###
# @name getGovernanceActionTypeByGUID (Survey Folder)
# Retrieve the governance action type metadata element with the supplied unique identifier.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions/2f988d28-8fb6-4e11-83a3-63b9ae6ef031/retrieve
Authorization: Bearer {{token}}


###
# =====================================================================================================================
# A governance action process describes a well-defined series of steps that gets something done.

# This is the unique identifier of the governance action process
@processGUID = guid


###
# @name findGovernanceActionProcesses
# Retrieve the list of governance action process metadata elements that contain the search string.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-action-processes/by-search-string
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "SearchStringRequestBody",
  "metadataElementTypeName": "GovernanceActionProcess",
  "searchString": "xxx",
  "startsWith" : false,
  "endsWith" : false,
  "ignoreCase" : true,
  "startFrom" : 0,
  "pageSize": 0,
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "limitResultsByStatus" : ["ACTIVE"],
  "sequencingOrder" : "PROPERTY_ASCENDING",
  "sequencingProperty" : "qualifiedName"
}


###
# @name getAllGovernanceActionProcesses
# Retrieve the list of governance action process metadata elements that contain the search string.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions/by-search-string
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "SearchStringRequestBody",
  "metadataElementTypeName": "GovernanceActionProcess"
}

###
# @name getGovernanceActionProcessesByName
# Retrieve the list of governance action process metadata elements with a matching qualified or display name.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions/by-name
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "FilterRequestBody",
  "metadataElementTypeName": "GovernanceActionProcess"
}


###
# @name getGovernanceActionProcessesByName
# Retrieve the list of governance action process metadata elements with a matching qualified or display name.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions/by-name
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "FilterRequestBody",
  "metadataElementTypeName": "GovernanceActionProcess",
  "filter": "xxx",
  "startFrom" : 0,
  "pageSize": 0,
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "limitResultsByStatus" : ["ACTIVE"],
  "sequencingOrder" : "PROPERTY_ASCENDING",
  "sequencingProperty" : "qualifiedName"
}


###
# @name getGovernanceActionProcessesByName
# Retrieve the list of governance action process metadata elements with a matching qualified or display name.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions/by-name
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "FilterRequestBody",
  "metadataElementTypeName": "GovernanceActionProcess",
  "filter": "GovernanceActionProcess::Valid Value Sets List::Create Subscription::EVALUATION-SUBSCRIPTION",
  "startFrom" : 0,
  "pageSize": 0
}


###
# @name getGovernanceActionProcessByGUID
# Retrieve the governance action process metadata element with the supplied unique identifier.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions/{{processGUID}}/retrieve
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "GetRequestBody",
  "metadataElementTypeName": "GovernanceActionProcess"
}


###
# @name getGovernanceActionProcessByGUID (Daily Process)
# Retrieve the governance action process metadata element with the supplied unique identifier.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-definitions/dde1e255-6d0c-4589-b4a6-17e7d01db5ab/retrieve
Authorization: Bearer {{token}}


###
# @name getGovernanceActionProcessGraph
# Retrieve the governance action process metadata element with the supplied unique identifier
# along with the flow definition describing its implementation.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-action-processes/{{processGUID}}/graph
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "ResultsRequestBody",
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "limitResultsByStatus" : ["ACTIVE"],
  "sequencingOrder" : "PROPERTY_ASCENDING",
  "sequencingProperty" : "qualifiedName"
}

###
# @name getGovernanceActionProcessGraph (Daily Process)
# Retrieve the governance action process metadata element with the supplied unique identifier
# along with the flow definition describing its implementation.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-action-processes/dde1e255-6d0c-4589-b4a6-17e7d01db5ab/graph
Authorization: Bearer {{token}}

###
# @name getGovernanceActionProcessGraph (Onboarding Data Process)
# Retrieve the governance action process metadata element with the supplied unique identifier
# along with the flow definition describing its implementation.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-action-processes/508d3878-8eae-47e5-8507-ee936f33b418/graph
Authorization: Bearer {{token}}


###

@elementGUID=add guid here
@definitionGUID=add guid here

###
# @name addGovernanceDefinitionToElement
# Link a governance definition to an element using the GovernedBy relationship.
#
# Governance Definitions: https://egeria-project.org/types/4/0401-Governance-Definitions/

POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/classification-manager/elements/{{elementGUID}}/governed-by/definition/{{definitionGUID}}/attach
Authorization: Bearer {{token}}
Content-Type: application/json

{
   "class" : "NewRelationshipRequestBody",
   "properties" : {
     "class" : "GovernedByProperties",
     "label" : "add label here",
     "description" : "add description here"
   },
   "externalSourceGUID": "Add guid here",
   "externalSourceName": "Add qualified name here",
   "forLineage": false,
   "forDuplicateProcessing": false,
   "effectiveTime" : "{{$isoTimestamp}}"
}


###
# @name removeGovernanceDefinitionFromElement
# Remove the GovernedBy relationship between a governance definition and an element.
#
# Governance Definition: https://egeria-project.org/types/4/0401-Governance-Definitions/

POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/classification-manager/elements/{{elementGUID}}/governed-by/definition/{{definitionGUID}}/detach
Authorization: Bearer {{token}}
Content-Type: application/json

{
   "class" : "MetadataSourceRequestBody",
   "externalSourceGUID": "Add guid here",
   "externalSourceName": "Add qualified name here",
   "forLineage": false,
   "forDuplicateProcessing": false,
   "effectiveTime" : "{{$isoTimestamp}}"
}

###

###

@designDescriptionGUID=add guid here
@implementationGUID=add guid here
@implementationResourceGUID=add guid here

###
# @name linkDesignToImplementation
# Attach a design object such as a solution component or governance definition to its implementation via the ImplementedBy relationship. Request body is optional.
# https://egeria-project.org/types/7/0737-Solution-Implementation/
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/designs/{{designDescriptionGUID}}/implementations/{{implementationGUID}}/attach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "NewRelationshipRequestBody",
  "properties": {
    "class": "ImplementedByProperties",
    "designStep": "",
    "role": "",
    "transformation": "",
    "description": "",
    "iscQualifiedName": "",
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  },
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}


###

# @name detachDesignFromImplementation
# Detach a design object such as a solution component or governance definition from its implementation. Request body is optional.
# https://egeria-project.org/types/7/0737-Solution-Implementation/
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/designs/{{designDescriptionGUID}}/implementations/{{implementationGUID}}/detach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "DeleteRelationshipRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}


###
# @name linkImplementationResource
# Attach a design object such as a solution component or governance definition to one of its implementation resource via the ImplementationResource relationship. Request body is optional.
# https://egeria-project.org/types/7/0737-Solution-Implementation/
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/designs/{{designDescriptionGUID}}/implementation-resources/{{implementationResourceGUID}}/attach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "NewRelationshipRequestBody",
  "properties": {
    "class": "ImplementationResourceProperties",
    "description": "",
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  },
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}


###

# @name detachImplementationResource
# Detach a design object such as a solution component or governance definition from one of its implementation resources. Request body is optional.
# https://egeria-project.org/types/7/0737-Solution-Implementation/
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/designs/{{designDescriptionGUID}}/implementation-resources/{{implementationResourceGUID}}/detach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "DeleteRelationshipRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}


###

@governanceMetricGUID=add guid here
@dataAssetGUID=add guid here

###
# @name linkGovernanceResults
# Attach a governance metric to a data asset that describes where its measurements are kept. Request body is optional.
# https://egeria-project.org/concepts/governance-definition/
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-metrics/{{governanceMetricGUID}}/measurements/{{dataAssetGUID}}/attach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "NewRelationshipRequestBody",
  "properties": {
    "class": "GovernanceResultsProperties",
    "description": "",
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  },
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}

###
# @name detachGovernanceResults
# Detach an governance metric from its measurements data set. Request body is optional.
# https://egeria-project.org/concepts/governance-definition/
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-metrics/{{governanceMetricGUID}}/measurements/{{dataAssetGUID}}/detach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "DeleteRelationshipRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}

###








