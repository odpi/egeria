# Egeria-lineage-linker-view-service
# The Lineage Linker OMVS provides APIs for supporting the creation and editing of schema types,
#schema attributes and user identities.

@baseURL=https://localhost:9443
@viewServer=view-server

###
# =====================================================================================================================
# Manage the authentication token.  Run this request to create/refresh the token.

# @name Token (RequestBody)
POST {{baseURL}}/api/token
Content-Type: application/json

{
  "userId" : "peterprofile",
  "password" : "secret"
}

> {% client.global.set("token", response.body); %}


###
# =====================================================================================================================
# Work with lineage
# https://egeria-project.org/features/lineage-management/overview

@elementOneGUID=add guid here
@elementTwoGUID=add guid here
@relationshipTypeName=add guid here


###
# @name linkLineage (DataFlow)
# Create a lineage relationship between two elements that indicates that data is flowing from one element to another.
#
# param elementOneGUID unique identifier of the element at end one
# param elementTwoGUID unique identifier of the element at end two
# param relationshipTypeName lineage relationship name
# param requestBody the properties of the relationship#
# Returns unique identifier of the newly created relationship or
#  InvalidParameterException  one of the parameters is invalid.
#  PropertyServerException    there is a problem retrieving information from the property server(s).
#  UserNotAuthorizedException the requesting user is not authorized to issue this request.
#
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/lineage-linker/from-elements/{{elementOneGUID}}/via/{{relationshipTypeName}}/to-elements/{{elementTwoGUID}}/attach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "NewRelationshipRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "anchorScopeGUID" : "add guid here",
  "makeAnchor": false,
  "properties": {
    "class" : "DataFlowProperties",
    "typeName" : "enter the type of the relationship",
    "iscQualifiedName": "add qualifiedName of information supply chain here",
    "label": "add label here",
    "description": "add description here",
    "formula": "add formula here",
    "formulaType": "add type here",
    "extendedProperties": {
      "property1" : "propertyValue1",
      "property2" : "propertyValue2"
    },
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  }
}


###
# @name linkLineage (ControlFlow)
# Create a lineage relationship between two elements that indicates that data is flowing from one element to another.
#
# param elementOneGUID unique identifier of the element at end one
# param elementTwoGUID unique identifier of the element at end two
# param relationshipTypeName lineage relationship name
# param requestBody the properties of the relationship#
# Returns unique identifier of the newly created relationship or
#  InvalidParameterException  one of the parameters is invalid.
#  PropertyServerException    there is a problem retrieving information from the property server(s).
#  UserNotAuthorizedException the requesting user is not authorized to issue this request.
#
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/lineage-linker/elements/{{elementOneGUID}}/{{relationshipTypeName}}/{{elementTwoGUID}}/attach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "NewRelationshipRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "anchorScopeGUID" : "add guid here",
  "makeAnchor": false,
  "properties": {
    "class" : "ControlFlowProperties",
    "typeName" : "enter the type of the relationship",
    "iscQualifiedName": "add qualifiedName of information supply chain here",
    "label": "add label here",
    "description": "add description here",
    "guard": "add guard here",
    "mandatoryGuard": true,
    "extendedProperties": {
      "property1" : "propertyValue1",
      "property2" : "propertyValue2"
    },
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  }
}


###
# @name linkLineage (ProcessCall)
# Create a lineage relationship between two elements that indicates that data is flowing from one element to another.
#
# param elementOneGUID unique identifier of the element at end one
# param elementTwoGUID unique identifier of the element at end two
# param relationshipTypeName lineage relationship name
# param requestBody the properties of the relationship#
# Returns unique identifier of the newly created relationship or
#  InvalidParameterException  one of the parameters is invalid.
#  PropertyServerException    there is a problem retrieving information from the property server(s).
#  UserNotAuthorizedException the requesting user is not authorized to issue this request.
#
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/lineage-linker/elements/{{elementOneGUID}}/{{relationshipTypeName}}/{{elementTwoGUID}}/attach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "NewRelationshipRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "anchorScopeGUID" : "add guid here",
  "makeAnchor": false,
  "properties": {
    "class" : "ProcessCallProperties",
    "typeName" : "enter the type of the relationship",
    "iscQualifiedName": "add qualifiedName of information supply chain here",
    "label": "add label here",
    "description": "add description here",
    "formula": "add formula here",
    "formulaType": "add type here",
    "extendedProperties": {
      "property1" : "propertyValue1",
      "property2" : "propertyValue2"
    },
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  }
}


###
# @name linkLineage (LineageMapping)
# Create a lineage relationship between two elements that indicates that data is flowing from one element to another.
#
# param elementOneGUID unique identifier of the element at end one
# param elementTwoGUID unique identifier of the element at end two
# param relationshipTypeName lineage relationship name
# param requestBody the properties of the relationship#
# Returns unique identifier of the newly created relationship or
#  InvalidParameterException  one of the parameters is invalid.
#  PropertyServerException    there is a problem retrieving information from the property server(s).
#  UserNotAuthorizedException the requesting user is not authorized to issue this request.
#
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/lineage-linker/elements/{{elementOneGUID}}/{{relationshipTypeName}}/{{elementTwoGUID}}/attach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "NewRelationshipRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "anchorScopeGUID" : "add guid here",
  "makeAnchor": false,
  "properties": {
    "class" : "LineageMappingProperties",
    "typeName" : "enter the type of the relationship",
    "iscQualifiedName": "add qualifiedName of information supply chain here",
    "label": "add label here",
    "description": "add description here",
    "extendedProperties": {
      "property1" : "propertyValue1",
      "property2" : "propertyValue2"
    },
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  }
}


###
# @name linkLineage (DataMapping)
# Create a lineage relationship between two elements that indicates that data is flowing from one element to another.
#
# param elementOneGUID unique identifier of the element at end one
# param elementTwoGUID unique identifier of the element at end two
# param relationshipTypeName lineage relationship name
# param requestBody the properties of the relationship#
# Returns unique identifier of the newly created relationship or
#  InvalidParameterException  one of the parameters is invalid.
#  PropertyServerException    there is a problem retrieving information from the property server(s).
#  UserNotAuthorizedException the requesting user is not authorized to issue this request.
#
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/lineage-linker/elements/{{elementOneGUID}}/{{relationshipTypeName}}/{{elementTwoGUID}}/attach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "NewRelationshipRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "anchorScopeGUID" : "add guid here",
  "makeAnchor": false,
  "properties": {
    "class" : "DataMappingProperties",
    "typeName" : "enter the type of the relationship",
    "iscQualifiedName": "add qualifiedName of information supply chain here",
    "label": "add label here",
    "description": "add description here",
    "formula": "add formula here",
    "formulaType": "add type here",
    "queryId": "add id here",
    "query": "add query here",
    "queryType": "add type here",
    "extendedProperties": {
      "property1" : "propertyValue1",
      "property2" : "propertyValue2"
    },
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  }
}



###
# @name linkLineage (UltimateSource)
# Create a lineage relationship between two elements that indicates that data is flowing from one element to another.
#
# param elementOneGUID unique identifier of the element at end one
# param elementTwoGUID unique identifier of the element at end two
# param relationshipTypeName lineage relationship name
# param requestBody the properties of the relationship#
# Returns unique identifier of the newly created relationship or
#  InvalidParameterException  one of the parameters is invalid.
#  PropertyServerException    there is a problem retrieving information from the property server(s).
#  UserNotAuthorizedException the requesting user is not authorized to issue this request.
#
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/lineage-linker/elements/{{elementOneGUID}}/{{relationshipTypeName}}/{{elementTwoGUID}}/attach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "NewRelationshipRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "anchorScopeGUID" : "add guid here",
  "makeAnchor": false,
  "properties": {
    "class" : "UltimateSourceProperties",
    "typeName" : "enter the type of the relationship",
    "iscQualifiedName": "add qualifiedName of information supply chain here",
    "label": "add label here",
    "description": "add description here",
    "extendedProperties": {
      "property1" : "propertyValue1",
      "property2" : "propertyValue2"
    },
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  }
}




###
# @name linkLineage (UtlimateDestination)
# Create a lineage relationship between two elements that indicates that data is flowing from one element to another.
#
# param elementOneGUID unique identifier of the element at end one
# param elementTwoGUID unique identifier of the element at end two
# param relationshipTypeName lineage relationship name
# param requestBody the properties of the relationship#
# Returns unique identifier of the newly created relationship or
#  InvalidParameterException  one of the parameters is invalid.
#  PropertyServerException    there is a problem retrieving information from the property server(s).
#  UserNotAuthorizedException the requesting user is not authorized to issue this request.
#
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/lineage-linker/elements/{{elementOneGUID}}/{{relationshipTypeName}}/{{elementTwoGUID}}/attach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "NewRelationshipRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "anchorScopeGUID" : "add guid here",
  "makeAnchor": false,
  "properties": {
    "class" : "UltimateDestinationProperties",
    "typeName" : "enter the type of the relationship",
    "iscQualifiedName": "add qualifiedName of information supply chain here",
    "label": "add label here",
    "description": "add description here",
    "extendedProperties": {
      "property1" : "propertyValue1",
      "property2" : "propertyValue2"
    },
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  }
}

