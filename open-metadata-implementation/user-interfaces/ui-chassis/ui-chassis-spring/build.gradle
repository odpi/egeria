/*
 * SPDX-License-Identifier: Apache-2.0
 * Copyright Contributors to the ODPi Egeria project.
 */

buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin")
        classpath("org.springdoc.openapi-gradle-plugin:org.springdoc.openapi-gradle-plugin.gradle.plugin")
    }
}

plugins {
    id 'io.freefair.lombok'
    id 'org.springframework.boot'
    id 'org.springdoc.openapi-gradle-plugin' version("1.6.0")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-test'
    implementation 'org.springframework.security:spring-security-ldap'
    implementation 'org.springframework.security:spring-security-oauth2-jose'
    implementation 'com.nimbusds:nimbus-jose-jwt'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.projectlombok:lombok'
    implementation 'org.springframework.security:spring-security-crypto'
    implementation 'io.lettuce:lettuce-core'
    implementation project(':open-metadata-implementation:access-services:asset-catalog:asset-catalog-client')
    runtimeOnly project(':open-metadata-implementation:access-services:subject-area:subject-area-client')
    runtimeOnly 'ch.qos.logback:logback-classic'
    implementation project(':open-metadata-implementation:adapters:authentication-plugins:http-helper')
    implementation project(':open-metadata-implementation:repository-services:repository-services-apis')
    implementation project(':open-metadata-implementation:repository-services:repository-services-client')
    implementation project(':open-metadata-implementation:frameworks:open-connector-framework')
    implementation 'org.springframework.boot:spring-boot-autoconfigure'
    implementation 'org.springframework:spring-webmvc'
    implementation 'org.springframework:spring-context'
    implementation 'org.springframework.security:spring-security-config'
    implementation 'org.springframework.security:spring-security-core'
    implementation 'org.springframework:spring-web'
    implementation 'org.apache.tomcat.embed:tomcat-embed-core'
    implementation 'org.springframework.boot:spring-boot'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.ldap:spring-ldap-core'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    runtimeOnly 'jakarta.persistence:jakarta.persistence-api'
    implementation 'org.springframework:spring-beans'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind'
    runtimeOnly 'javax.xml.bind:jaxb-api'
    compileOnly 'com.fasterxml.jackson.core:jackson-annotations'
    implementation 'org.slf4j:slf4j-api'
    implementation 'org.springframework:spring-core'
    implementation project(':open-metadata-implementation:access-services:asset-catalog:asset-catalog-api')
    implementation 'org.springframework.security:spring-security-web'
    runtimeOnly project(':open-metadata-implementation:access-services:subject-area:subject-area-api')
    runtimeOnly 'com.fasterxml.jackson.core:jackson-core'
    implementation project(':open-metadata-implementation:governance-servers:open-lineage-services:open-lineage-services-client')
    implementation project(':open-metadata-implementation:governance-servers:open-lineage-services:open-lineage-services-api')
    implementation project(':open-metadata-implementation:common-services:ffdc-services')
    implementation 'org.apache.commons:commons-collections4'
    testImplementation 'commons-io:commons-io'
    implementation project(':open-metadata-implementation:frameworks:audit-log-framework')
    implementation project(':open-metadata-implementation:access-services:glossary-view:glossary-view-client')
    implementation project(':open-metadata-implementation:access-services:glossary-view:glossary-view-api')
    testCompileOnly project(':open-metadata-implementation:framework-services:ocf-metadata-management:ocf-metadata-client')
    compileOnly project(':open-metadata-implementation:framework-services:ocf-metadata-management:ocf-metadata-client')
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.mockito:mockito-junit-jupiter'
    testImplementation 'org.mockito:mockito-inline'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'junit:junit'
    implementation project(':open-metadata-implementation:admin-services:admin-services-api')
    implementation project(':open-metadata-implementation:view-services:tex-view:tex-view-server')
    runtimeOnly project(':open-metadata-implementation:view-services:tex-view:tex-view-spring')
    implementation project(':open-metadata-implementation:view-services:rex-view:rex-view-server')
    runtimeOnly project(':open-metadata-implementation:view-services:rex-view:rex-view-spring')
    implementation project(':open-metadata-implementation:view-services:dino-view:dino-view-server')
    runtimeOnly project(':open-metadata-implementation:view-services:dino-view:dino-view-spring')
    implementation project(':open-metadata-implementation:admin-services:admin-services-registration')
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui'
    runtimeOnly 'io.swagger.core.v3:swagger-annotations-jakarta'
}

description = 'UI Server Platform Chassis for Spring'

bootJar {
    manifest {
//        attributes 'Main-Class': 'org.springframework.boot.loader.PropertiesLauncher'
        mainClass = 'org.odpi.openmetadata.userinterface.uichassis.springboot.EgeriaUIPlatform'
    }
}

java {
    withJavadocJar()
}


test {
    useJUnitPlatform()
}

// See https://stackoverflow.com/questions/61197984/bootjar-mavenjar-artifact-wasnt-produced-by-this-build
// Remove the regular (plain) jar & replace with the SpringBoot version
configurations {
    [apiElements, runtimeElements].each {
        it.outgoing.artifacts.removeIf {
            it.buildDependencies.getDependencies(null).contains(jar)
        }
        it.outgoing.artifact(bootJar)
    }
}
