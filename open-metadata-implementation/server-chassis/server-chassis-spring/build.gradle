/*
 * SPDX-License-Identifier: Apache-2.0
 * Copyright Contributors to the ODPi Egeria project.
 */

plugins {
    id 'org.springframework.boot'
    id "io.freefair.lombok"
}


dependencies {

    implementation 'org.springframework:spring-core'
    implementation 'org.springframework:spring-beans'
    implementation 'org.springframework:spring-context'
    implementation 'org.springframework:spring-web'
    implementation 'org.springframework.boot:spring-boot'
    implementation 'org.springframework.boot:spring-boot-autoconfigure'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'
    implementation 'org.slf4j:slf4j-api'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.core:jackson-annotations'
    implementation 'jakarta.servlet:jakarta.servlet-api'
    implementation 'org.projectlombok:lombok'
    implementation 'org.yaml:snakeyaml'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'
    implementation 'com.google.guava:guava'
    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    runtimeOnly 'ch.qos.logback:logback-classic'
    runtimeOnly 'org.hibernate:hibernate-validator'
    compileOnly 'io.swagger.core.v3:swagger-annotations-jakarta'
    runtimeOnly 'com.fasterxml.jackson.core:jackson-core'

    compileOnly project(':open-metadata-implementation:common-services:ffdc-services')
    implementation project(':open-metadata-implementation:adapters:authentication-plugins:http-helper')
    implementation project(':open-metadata-implementation:admin-services:admin-services-api')
    implementation project(':open-metadata-implementation:server-operations:server-operations-api')
    implementation project(':open-metadata-implementation:server-operations:server-operations-server')
    runtimeOnly project(':open-metadata-implementation:server-operations:server-operations-spring')

    if (!project.hasProperty("adminChassisOnly")) {
        runtimeOnly project(':open-metadata-implementation:view-services:server-author-view:server-author-view-spring')
        runtimeOnly project(':open-metadata-implementation:view-services:glossary-author-view:glossary-author-view-spring')
        runtimeOnly project(':open-metadata-implementation:view-services:glossary-browser:glossary-browser-spring')
        runtimeOnly project(':open-metadata-implementation:view-services:glossary-workflow:glossary-workflow-spring')
        runtimeOnly project(':open-metadata-implementation:view-services:my-profile:my-profile-spring')
        runtimeOnly project(':open-metadata-implementation:view-services:asset-catalog:asset-catalog-spring')
        runtimeOnly project(':open-metadata-implementation:view-services:rex-view:rex-view-spring')
        runtimeOnly project(':open-metadata-implementation:view-services:tex-view:tex-view-spring')
        runtimeOnly project(':open-metadata-implementation:view-services:dino-view:dino-view-spring')
        runtimeOnly project(':open-metadata-implementation:access-services:security-officer:security-officer-spring')
        runtimeOnly project(':open-metadata-implementation:access-services:security-manager:security-manager-spring')
        runtimeOnly project(':open-metadata-implementation:access-services:data-manager:data-manager-spring')
        runtimeOnly project(':open-metadata-implementation:access-services:glossary-view:glossary-view-spring')
        runtimeOnly project(':open-metadata-implementation:access-services:asset-lineage:asset-lineage-spring')
        runtimeOnly project(':open-metadata-implementation:access-services:data-engine:data-engine-spring')
        runtimeOnly project(':open-metadata-implementation:access-services:subject-area:subject-area-spring')
        runtimeOnly project(':open-metadata-implementation:access-services:asset-catalog:omas-asset-catalog-spring')
        runtimeOnly project(':open-metadata-implementation:access-services:governance-program:governance-program-spring')
        runtimeOnly project(':open-metadata-implementation:access-services:governance-engine:governance-engine-spring')
        runtimeOnly project(':open-metadata-implementation:access-services:discovery-engine:discovery-engine-spring')
        runtimeOnly project(':open-metadata-implementation:access-services:stewardship-action:stewardship-action-spring')
        runtimeOnly project(':open-metadata-implementation:access-services:community-profile:community-profile-spring')
        runtimeOnly project(':open-metadata-implementation:access-services:design-model:design-model-spring')
        runtimeOnly project(':open-metadata-implementation:access-services:data-privacy:data-privacy-spring')
        runtimeOnly project(':open-metadata-implementation:access-services:it-infrastructure:it-infrastructure-spring')
        runtimeOnly project(':open-metadata-implementation:access-services:project-management:project-management-spring')
        runtimeOnly project(':open-metadata-implementation:access-services:dev-ops:dev-ops-spring')
        runtimeOnly project(':open-metadata-implementation:access-services:software-developer:software-developer-spring')
        runtimeOnly project(':open-metadata-implementation:access-services:digital-architecture:digital-architecture-spring')
        runtimeOnly project(':open-metadata-implementation:access-services:digital-service:digital-service-spring')
        runtimeOnly project(':open-metadata-implementation:access-services:data-science:data-science-spring')
        runtimeOnly project(':open-metadata-implementation:access-services:asset-consumer:asset-consumer-spring')
        runtimeOnly project(':open-metadata-implementation:access-services:asset-manager:asset-manager-spring')
        runtimeOnly project(':open-metadata-implementation:access-services:asset-owner:asset-owner-spring')
        runtimeOnly project(':open-metadata-implementation:engine-services:asset-analysis:asset-analysis-spring')
        runtimeOnly project(':open-metadata-implementation:engine-services:survey-action:survey-action-spring')
        runtimeOnly project(':open-metadata-implementation:engine-services:repository-governance:repository-governance-spring')
        runtimeOnly project(':open-metadata-implementation:engine-services:governance-action:governance-action-spring')
        runtimeOnly project(':open-metadata-implementation:integration-services:security-integrator:security-integrator-spring')
        runtimeOnly project(':open-metadata-implementation:integration-services:organization-integrator:organization-integrator-spring')
        runtimeOnly project(':open-metadata-implementation:integration-services:infrastructure-integrator:infrastructure-integrator-spring')
        runtimeOnly project(':open-metadata-implementation:integration-services:lineage-integrator:lineage-integrator-spring')
        runtimeOnly project(':open-metadata-implementation:integration-services:files-integrator:files-integrator-spring')
        runtimeOnly project(':open-metadata-implementation:integration-services:display-integrator:display-integrator-spring')
        runtimeOnly project(':open-metadata-implementation:integration-services:database-integrator:database-integrator-spring')
        runtimeOnly project(':open-metadata-implementation:integration-services:analytics-integrator:analytics-integrator-spring')
        runtimeOnly project(':open-metadata-implementation:integration-services:api-integrator:api-integrator-spring')
        runtimeOnly project(':open-metadata-implementation:integration-services:catalog-integrator:catalog-integrator-spring')
        runtimeOnly project(':open-metadata-implementation:integration-services:search-integrator:search-integrator-spring')
        runtimeOnly project(':open-metadata-implementation:integration-services:topic-integrator:topic-integrator-spring')
        runtimeOnly project(':open-metadata-implementation:repository-services:repository-services-spring')
        runtimeOnly project(':open-metadata-conformance-suite:open-metadata-conformance-suite-spring')
        runtimeOnly project(':open-metadata-implementation:framework-services:ocf-metadata-management:ocf-metadata-spring')
        runtimeOnly project(':open-metadata-implementation:framework-services:gaf-metadata-management:gaf-metadata-spring')
        runtimeOnly project(':open-metadata-implementation:framework-services:oif-metadata-management:oif-metadata-spring')
        runtimeOnly project(':open-metadata-implementation:governance-servers:data-engine-proxy-services:data-engine-proxy-services-spring')
        runtimeOnly project(':open-metadata-implementation:governance-servers:integration-daemon-services:integration-daemon-services-spring')
        runtimeOnly project(':open-metadata-implementation:governance-servers:engine-host-services:engine-host-services-spring')
        runtimeOnly project(':open-metadata-implementation:governance-servers:open-lineage-services:open-lineage-services-spring')
    }

    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.springframework.boot:spring-boot-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework:spring-test'

}

description = 'OMAG Server Chassis for Spring'

bootJar {
    manifest {
        attributes 'Main-Class': 'org.springframework.boot.loader.PropertiesLauncher'
    }
}

java {
    withJavadocJar()
}

test {
    useJUnitPlatform()
}

// See https://stackoverflow.com/questions/61197984/bootjar-mavenjar-artifact-wasnt-produced-by-this-build
// Ensure the SpringBoot jar is included -- we leave the 'plain' jar in-situ too, for composing alternate chassis
configurations {
    [apiElements, runtimeElements].each {
        it.outgoing.artifact(bootJar)
    }
}

// Assuming the plugin has been applied
loggingCapabilities {
    // Configuration goes here
    enforceLogback()
}
