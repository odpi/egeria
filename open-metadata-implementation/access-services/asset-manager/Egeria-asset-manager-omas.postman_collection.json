{
	"info": {
		"_postman_id": "58ad6077-4f9b-4a86-b056-9e8154a42918",
		"name": "Egeria-asset-manager-omas",
		"description": "This collection provides illustrations of REST API calls to the Asset Manager OMAS.\n\nThe APIs include three enumerations:\n\n* *keyPattern* describes the pattern used for the identifier (how it is generated and managed). These are the values it can take, with the default (and most used) being `LOCAL_KEY`:  \n\n| Enumeration   | Value | Name             | Description                                                                                                   |\n|---------------|-------|------------------|---------------------------------------------------------------------------------------------------------------|\n| LOCAL_KEY     | 0     | \"Local Key\"      | Unique key allocated and used within the scope of a single system.                                            |\n| RECYCLED_KEY  | 1     | \"Recycled Key\"   | Key allocated and used within the scope of a single system that is periodically reused for different records. |\n| NATURAL_KEY   | 2     | \"Natural Key\"    | Key derived from an attribute of the entity, such as email address, passport number.                          |\n| MIRROR_KEY    | 3     | \"Mirror Key\"     | Key value copied from another system.                                                                         |\n| AGGREGATE_KEY | 4     | \"Aggregate Key\"  | Key formed by combining keys from multiple systems.                                                           |\n| CALLERS_KEY   | 5     | \"Caller's Key\"   | Key from another system can bey used if system name provided.                                                 |\n| STABLE_KEY    | 6     | \"Stable Key\"     | Key value will remain active even if records are merged.                                                      |\n| OTHER         | 99    | \"Other\"          | Another key pattern.                                                                                          |\n\n* *permittedSynchronization* defines the direction of flow of metadata.\n\n| Enumeration      | Value | Name             | Description                                                                                                                                                                                                                                                                                 |\n|------------------|-------|------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| BOTH_DIRECTIONS  | 0     | \"Both Directions\" | Metadata exchange is permitted in both directions.  Synchronization is halted on a specific element if potentially clashing updates have occurred both in the third party technology and open metadata.  Such conflicts are logged on the audit log and resolved through manual stewardship. |\n| TO_THIRD_PARTY   | 1     | \"To Third Party\" | The third party technology is logically downstream of open metadata.  This means the open metadata ecosystem is the originator and owner of the metadata being synchronized. Any updates detected in the third technology are overridden by the latest open metadata values.                |\n| FROM_THIRD_PARTY | 2     | \"From Third Party\" | The third party technology is logically upstream (the originator and owner of the metadata).  Any updates made in open metadata are not passed to the third party technology and the third party technology is requested to refresh the open metadata version.                              |\n| OTHER            | 99    | \"Other\"          | Another type of synchronization rule - see description property.                                                                                                                                                                                                                            |\n\n* *dataItemSortOrder* defines the order of data items stored in an attribute.\n\n\n| Enumeration | Value | Name           | Description                                                                       |\n|-------------|-------|----------------|--------------------------------------------------------------------------------------------------|\n| UNKNOWN     | 0     | \"<Unknown>\"    | \"The sort order is not specified. |\n| ASCENDING   | 1     | \"Ascending\"    | \"The attribute instances are organized so that the smallest/lowest value is first and the rest of the instances follow in ascending order. |\n| DESCENDING  | 2     | \"Descending\"   | The attribute instances are organized so that the largest/highest value is first and the rest of the instances follow in descending order. |\n| UNSORTED    | 3     | \"Unsorted\"     | \"The instances of the schema attribute may appear in any order. |",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28623075"
	},
	"item": [
		{
			"name": "Asset Managers",
			"item": [
				{
					"name": "Create an element to describe the Asset Manager",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"class\" : \"AssetManagerProperties\",\n\t\"qualifiedName\" : \"{{externalSourceName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/asset-managers",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"asset-managers"
							]
						},
						"description": "Create a SoftwareServerCapability entity to represent the Asset Manager."
					},
					"response": []
				},
				{
					"name": "Retrieve the GUID for the Asset Manager based on its name",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/asset-managers/by-name/{{externalSourceName}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"asset-managers",
								"by-name",
								"{{externalSourceName}}"
							]
						},
						"description": "This call retrieves the asset manager's GUID."
					},
					"response": []
				}
			],
			"description": "Asset Managers describe the source of the metadata.  Create an asset manager to represent your technology so that you can associate your external identifiers with the entities that you create in Egeria."
		},
		{
			"name": "External Identifiers",
			"item": [
				{
					"name": "Add an external identifier to an element",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n    \"class\" : \"MetadataCorrelationProperties\",\n    \"assetManagerGUID\" : \"{{externalSourceGUID}}\",\n    \"assetManagerName\" : \"{{externalSourceName}}\",\n    \"synchronizationDirection\" : \"BOTH_DIRECTIONS\",\n    \"synchronizationDescription\" : \"Description of \",\n    \"externalIdentifier\" : \"Unique key for element from external asset manager\",\n    \"externalIdentifierName\" : \"Name used to describe the unique key in external asset manager\",\n    \"externalIdentifierUsage\" : \"How should the external identifier be used?\",\n    \"externalIdentifierSource\" : \"{{externalSourceName}}\",\n    \"keyPattern\" : \"LOCAL_KEY\",\n    \"mappingProperties\" : {\n        \"mappingPropertyName1\" : \"propertyValue1\",\n        \"mappingPropertyName2\" : \"propertyValue2\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/asset-managers/elements/{{typeName}}/{{guid}}/external-identifiers/add",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"asset-managers",
								"elements",
								"{{typeName}}",
								"{{guid}}",
								"external-identifiers",
								"add"
							]
						},
						"description": "Create an association between an existing open metadata element and an external identifier that comes from a specific asset manager"
					},
					"response": []
				},
				{
					"name": "Update an external identifier attached to an element",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"class\" : \"MetadataCorrelationProperties\",\n    \"assetManagerGUID\" : \"{{externalSourceGUID}}\",\n    \"assetManagerName\" : \"{{externalSourceName}}\",\n    \"synchronizationDirection\" : \"BOTH_DIRECTIONS\",\n    \"synchronizationDescription\" : \"Description of \",\n    \"externalIdentifier\" : \"Unique key for element from external asset manager\",\n    \"externalIdentifierName\" : \"Name used to describe the unique key in external asset manager\",\n    \"externalIdentifierUsage\" : \"How should the external identifier be used?\",\n    \"externalIdentifierSource\" : \"{{externalSourceName}}\",\n    \"keyPattern\" : \"LOCAL_KEY\",\n    \"mappingProperties\" : {\n        \"mappingPropertyName1\" : \"propertyValue1\",\n        \"mappingPropertyName2\" : \"propertyValue2\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/asset-managers/elements/{{typeName}}/{{guid}}/external-identifiers/update",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"asset-managers",
								"elements",
								"{{typeName}}",
								"{{guid}}",
								"external-identifiers",
								"update"
							]
						},
						"description": "Update the properties for an external identifier that comes from a specific asset manager."
					},
					"response": []
				},
				{
					"name": "Remove an external identifier attached to an element",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"class\" : \"MetadataCorrelationProperties\",\n    \"assetManagerGUID\" : \"{{externalSourceGUID}}\",\n    \"assetManagerName\" : \"{{externalSourceName}}\",\n    \"synchronizationDirection\" : \"BOTH_DIRECTIONS\",\n    \"synchronizationDescription\" : \"Description of \",\n    \"externalIdentifier\" : \"Unique key for element from external asset manager\",\n    \"externalIdentifierName\" : \"Name used to describe the unique key in external asset manager\",\n    \"externalIdentifierUsage\" : \"How should the external identifier be used?\",\n    \"externalIdentifierSource\" : \"{{externalSourceName}}\",\n    \"keyPattern\" : \"LOCAL_KEY\",\n    \"mappingProperties\" : {\n        \"mappingPropertyName1\" : \"propertyValue1\",\n        \"mappingPropertyName2\" : \"propertyValue2\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/asset-managers/elements/{{typeName}}/{{guid}}/external-identifiers/remove",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"asset-managers",
								"elements",
								"{{typeName}}",
								"{{guid}}",
								"external-identifiers",
								"remove"
							]
						},
						"description": "Remove an external identifier that comes from a specific asset manager."
					},
					"response": []
				},
				{
					"name": "Get metadata elements linked to an external identifier",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"class\" : \"MetadataCorrelationProperties\",\n    \"assetManagerGUID\" : \"{{externalSourceGUID}}\",\n    \"assetManagerName\" : \"{{externalSourceName}}\",\n    \"externalIdentifier\" : \"Unique key for element from external asset manager\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/asset-managers/external-identifiers/open-metadata-elements?startFrom=0&pageSize=100",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"asset-managers",
								"external-identifiers",
								"open-metadata-elements"
							],
							"query": [
								{
									"key": "startFrom",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "100"
								}
							]
						},
						"description": "Retrieve all of the metadata elements associated with an external identifier that comes from a specific asset manager."
					},
					"response": []
				}
			],
			"description": "External Identifiers allow an asset manager to store information about its equivalent unique identifiers with an open metadata entity.  See [Managing external identifiers](https://egeria-project.org/features/external-identifiers/overview/)."
		},
		{
			"name": "Data Assets",
			"item": [
				{
					"name": "Create a Data Set",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"class\" : \"DataAssetRequestBody\",\n    \"elementProperties\" : \n    {\n        \"class\" : \"DataAssetProperties\",\n        \"typeName\" : \"DataSet\",\n        \"qualifiedName\" : \"unique name of the asset from an open metadata perspective - required field\",\n        \"technicalName\" : \"name used by technology\",\n        \"technicalDescription\" : \"description extracted from technology\",\n        \"displayName\" : \"display name for business users\",\n        \"summary\" : \"short description for business users\",\n        \"description\" : \"full description for business users\",\n        \"abbreviation\" : \"abbreviation used by the business\",\n        \"usage\" : \"use of this asset by the org\",\n        \"isReferenceAsset\" : false,\n        \"additionalProperties\" : {\n            \"propertyName1\" : \"propertyValue1\",\n            \"propertyName2\" : \"propertyValue2\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/data-assets?assetManagerIsHome=false",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"data-assets"
							],
							"query": [
								{
									"key": "assetManagerIsHome",
									"value": "false",
									"description": "Should the element be updateable only by the asset manager?"
								}
							]
						},
						"description": "Create a data asset. This could be a data set (such as a database schema or information view) or an API.\n\nSave the guid returned into the dataAssetGUID variable.\n\nLink to asset types: [https://egeria-project.org/concepts/asset/#open-metadata-types](https://egeria-project.org/concepts/asset/#open-metadata-types)"
					},
					"response": []
				},
				{
					"name": "Create an External Data Asset",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"class\" : \"DataAssetRequestBody\",\n\t\"metadataCorrelationProperties\" : {\n        \"class\" : \"MetadataCorrelationProperties\",\n        \"assetManagerGUID\" : \"{{externalSourceGUID}}\",\n        \"assetManagerName\" : \"{{externalSourceName}}\",\n        \"synchronizationDirection\" : \"BOTH_DIRECTIONS\",\n        \"synchronizationDescription\" : \"Description of \",\n        \"externalIdentifier\" : \"Unique key for element from external asset manager\",\n        \"externalIdentifierName\" : \"Name used to describe the unique key in external asset manager\",\n        \"externalIdentifierUsage\" : \"How should the external identifier be used?\",\n        \"externalIdentifierSource\" : \"{{externalSourceName}}\",\n        \"keyPattern\" : \"LOCAL_KEY\",\n        \"mappingProperties\" : {\n            \"mappingPropertyName1\" : \"propertyValue1\",\n            \"mappingPropertyName2\" : \"propertyValue2\"\n        }\n    },\n    \"elementProperties\" : \n    {\n        \"class\" : \"DataAssetProperties\",\n        \"typeName\" : \"asset type name goes here - (default is Asset)\",\n        \"qualifiedName\" : \"unique name of the asset from an open metadata perspective - required field\",\n        \"technicalName\" : \"name used by technology\",\n        \"technicalDescription\" : \"description extracted from technology\",\n        \"displayName\" : \"display name for business users\",\n        \"summary\" : \"short description for business users\",\n        \"description\" : \"full description for business users\",\n        \"abbreviation\" : \"abbreviation used by the business\",\n        \"usage\" : \"use of this asset by the org\",\n        \"isReferenceAsset\" : false,\n        \"additionalProperties\" : {\n            \"propertyName1\" : \"propertyValue1\",\n            \"propertyName2\" : \"propertyValue2\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/data-assets?assetManagerIsHome={{useExternalSourceProvenance}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"data-assets"
							],
							"query": [
								{
									"key": "assetManagerIsHome",
									"value": "{{useExternalSourceProvenance}}",
									"description": "Should the element be updateable only by the asset manager?"
								}
							]
						},
						"description": "Create a data asset. This could be a data set (such as a database schema or information view) or an API.  There is an additional variation for data stores that allows a number of additional properties.\n\nIf assetManagerIsHome is true, the assetManagerGUID must be set in the request body.\n\nLink to asset types: [https://egeria-project.org/concepts/asset/#open-metadata-types](https://egeria-project.org/concepts/asset/#open-metadata-types)"
					},
					"response": []
				},
				{
					"name": "Create an external Data Store",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"class\" : \"DataAssetRequestBody\",\n\t\"metadataCorrelationProperties\" : {\n        \"class\" : \"MetadataCorrelationProperties\",\n        \"assetManagerGUID\" : \"{{externalSourceGUID}}\",\n        \"assetManagerName\" : \"{{externalSourceName}}\",\n        \"synchronizationDirection\" : \"BOTH_DIRECTIONS\",\n        \"synchronizationDescription\" : \"Description of \",\n        \"externalIdentifier\" : \"Unique key for element from external asset manager\",\n        \"externalIdentifierName\" : \"Name used to describe the unique key in external asset manager\",\n        \"externalIdentifierUsage\" : \"How should the external identifier be used?\",\n        \"externalIdentifierSource\" : \"{{externalSourceName}}\",\n        \"keyPattern\" : \"LOCAL_KEY\",\n        \"mappingProperties\" : {\n            \"mappingPropertyName1\" : \"propertyValue1\",\n            \"mappingPropertyName2\" : \"propertyValue2\"\n        }\n    },\n    \"elementProperties\" : \n    {\n        \"class\" : \"DataStoreProperties\",\n        \"typeName\" : \"asset type name goes here - (default is Asset)\",\n        \"qualifiedName\" : \"unique name of the asset from an open metadata perspective - required field\",\n        \"technicalName\" : \"name used by technology\",\n        \"technicalDescription\" : \"description extracted from technology\",\n        \"displayName\" : \"display name for business users\",\n        \"summary\" : \"short description for business users\",\n        \"description\" : \"full description for business users\",\n        \"abbreviation\" : \"abbreviation used by the business\",\n        \"usage\" : \"use of this asset by the org\",\n        \"isReferenceAsset\" : false,\n        \"pathName\" : \"path to store\",\n        \"createTime\" : \"date/time\",\n        \"modifiedTime\" : \"date/time\",\n        \"encodingType\" : \"Details of encoding used in store\",\n        \"encodingLanguage\" : \"Natural language used for text strings\",\n        \"encodingDescription\" : \"Description of anything a user needs to know about the encoding\",\n        \"encodingProperties\" : {\n            \"encodingProperty1\" : \"propertyValue1\",\n            \"encodingProperty2\" : \"propertyValue2\"\n        },\n        \"additionalProperties\" : {\n            \"propertyName1\" : \"propertyValue1\",\n            \"propertyName2\" : \"propertyValue2\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/data-assets?assetManagerIsHome={{useExternalSourceProvenance}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"data-assets"
							],
							"query": [
								{
									"key": "assetManagerIsHome",
									"value": "{{useExternalSourceProvenance}}",
									"description": "Should the element be updateable only by the asset manager?"
								}
							]
						},
						"description": "Create a data store asset.  This is a specialization of the data asset and includes some additional properties about the physical storage it uses.\n\nIf assetManagerIsHome is true, the assetManagerGUID must be set in the request body.\n\nLink to asset types: https://egeria-project.org/concepts/asset/#open-metadata-types"
					},
					"response": []
				}
			]
		},
		{
			"name": "Schema",
			"item": [
				{
					"name": "Create a Schema Type",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"class\" : \"SchemaTypeRequestBody\",\n\t\"metadataCorrelationProperties\" : {\n        \"class\" : \"MetadataCorrelationProperties\",\n        \"assetManagerGUID\" : \"{{externalSourceGUID}}\",\n        \"assetManagerName\" : \"{{externalSourceName}}\",\n        \"synchronizationDirection\" : \"BOTH_DIRECTIONS\",\n        \"synchronizationDescription\" : \"Description of \",\n        \"externalIdentifier\" : \"Unique key for element from external asset manager\",\n        \"externalIdentifierName\" : \"Name used to describe the unique key in external asset manager\",\n        \"externalIdentifierUsage\" : \"How should the external identifier be used?\",\n        \"externalIdentifierSource\" : \"{{externalSourceName}}\",\n        \"keyPattern\" : \"LOCAL_KEY\",\n        \"mappingProperties\" : {\n            \"mappingPropertyName1\" : \"propertyValue1\",\n            \"mappingPropertyName2\" : \"propertyValue2\"\n        }\n    },\n    \"elementProperties\" : \n    {\n        \"class\" : \"SchemaTypeProperties\",\n        \"typeName\" : \"schema type name goes here - (default is SchemaType)\",\n        \"qualifiedName\" : \"unique name of the schema type from an open metadata perspective - required field\",\n        \"technicalName\" : \"name used by technology\",\n        \"technicalDescription\" : \"description extracted from technology\",\n        \"displayName\" : \"display name for business users\",\n        \"summary\" : \"short description for business users\",\n        \"description\" : \"full description for business users\",\n        \"abbreviation\" : \"abbreviation used by the business\",\n        \"usage\" : \"use of this asset by the org\",\n        \"isDeprecated\" : false,\n        \"versionNumber\" : \"name of the version eg 3.1\",\n        \"author\" : \"name\",\n        \"encodingStandard\" : \"special encoding used for the data structured by this schema element\",\n        \"namespace\" : \"namespace name\",\n        \"formula\" : \"formula if derived\",\n        \"queries\" : [{\n            \"class\" : \"QueryTargetProperties\",\n            \"queryId\" : \"identifier used in the formula\",\n            \"query\" : \"query to retrieve values from source\",\n            \"queryTargetGUID\" : \"unique identifier of the asset called by for the query\"\n        }],\n        \"additionalProperties\" : {\n            \"propertyName1\" : \"propertyValue1\",\n            \"propertyName2\" : \"propertyValue2\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/schema-types?assetManagerIsHome={{useExternalSourceProvenance}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"schema-types"
							],
							"query": [
								{
									"key": "assetManagerIsHome",
									"value": "{{useExternalSourceProvenance}}",
									"description": "Should the element be updateable only by the asset manager?"
								}
							]
						},
						"description": "Create a schema type. This is typically the root of the schema that is attached to an Data Asset, Port or Process.\n\nThe typeName for this root schema type should be compatible to the type of asset it belongs to.\n\nIf assetManagerIsHome is true, the assetManagerGUID must be set in the request body."
					},
					"response": []
				},
				{
					"name": "Link Schema Type to Data Asset, Port or Process",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"class\" : \"AssetManagerIdentifiersRequestBody\",\n\t \"assetManagerGUID\" : \"{{externalSourceGUID}}\",\n\t \"assetManagerName\" : \"{{externalSourceName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/parents/{{parentElementGUID}}/{{parentElementTypeName}}/schema-types/{{guid}}?assetManagerIsHome={{useExternalSourceProvenance}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"parents",
								"{{parentElementGUID}}",
								"{{parentElementTypeName}}",
								"schema-types",
								"{{guid}}"
							],
							"query": [
								{
									"key": "assetManagerIsHome",
									"value": "{{useExternalSourceProvenance}}",
									"description": "Should the element be updateable only by the asset manager?"
								}
							]
						},
						"description": "Link a schema type to an Data Asset, Port or Process.\n\nThe typeName for this root schema type should be compatible to the type of asset it belongs to.\n\nIf assetManagerIsHome is true, the assetManagerGUID must be set in the request body."
					},
					"response": []
				},
				{
					"name": "Remove Schema Type from Data Asset, Port or Process",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"class\" : \"AssetManagerIdentifiersRequestBody\",\n\t \"assetManagerGUID\" : \"{{externalSourceGUID}}\",\n\t \"assetManagerName\" : \"{{externalSourceName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/parents/{{parentElementGUID}}/{{parentElementTypeName}}/schema-types/{{guid}}/remove?assetManagerIsHome={{useExternalSourceProvenance}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"parents",
								"{{parentElementGUID}}",
								"{{parentElementTypeName}}",
								"schema-types",
								"{{guid}}",
								"remove"
							],
							"query": [
								{
									"key": "assetManagerIsHome",
									"value": "{{useExternalSourceProvenance}}",
									"description": "Should the element be updateable only by the asset manager?"
								}
							]
						},
						"description": "Link a schema type to an Data Asset, Port or Process.\n\nThe typeName for this root schema type should be compatible to the type of asset it belongs to.\n\nIf assetManagerIsHome is true, the assetManagerGUID must be set in the request body."
					},
					"response": []
				},
				{
					"name": "Create a Schema Attribute",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"class\" : \"SchemaAttributeRequestBody\",\n\t\"metadataCorrelationProperties\" : {\n        \"class\" : \"MetadataCorrelationProperties\",\n        \"assetManagerGUID\" : \"{{externalSourceGUID}}\",\n        \"assetManagerName\" : \"{{externalSourceName}}\",\n        \"synchronizationDirection\" : \"BOTH_DIRECTIONS\",\n        \"synchronizationDescription\" : \"Description of \",\n        \"externalIdentifier\" : \"Unique key for element from external asset manager\",\n        \"externalIdentifierName\" : \"Name used to describe the unique key in external asset manager\",\n        \"externalIdentifierUsage\" : \"How should the external identifier be used?\",\n        \"externalIdentifierSource\" : \"{{externalSourceName}}\",\n        \"keyPattern\" : \"LOCAL_KEY\",\n        \"mappingProperties\" : {\n            \"mappingPropertyName1\" : \"propertyValue1\",\n            \"mappingPropertyName2\" : \"propertyValue2\"\n        }\n    },\n    \"elementProperties\" : \n    {\n        \"class\" : \"SchemaAttributeProperties\",\n        \"typeName\" : \"schema attribute name goes here - (default is SchemaType)\",\n        \"qualifiedName\" : \"unique name of the schema attribute from an open metadata perspective - required field\",\n        \"technicalName\" : \"name used by technology\",\n        \"technicalDescription\" : \"description extracted from technology\",\n        \"displayName\" : \"display name for business users\",\n        \"summary\" : \"short description for business users\",\n        \"description\" : \"full description for business users\",\n        \"abbreviation\" : \"abbreviation used by the business\",\n        \"usage\" : \"use of this asset by the org\",\n        \"isDeprecated\" : false,\n        \"elementPosition\" : 0,\n        \"minCardinality\" : 0,\n        \"maxCardinality\" : 0,\n        \"allowsDuplicateValues\" : false,\n        \"orderedValues\" : false,\n        \"defaultValueOverride\" : \"\",\n        \"sortOrder\" : \"UNSORTED\",\n        \"minimumLength\" : 0,\n        \"length\" : 0,\n        \"precision\" : 0,\n        \"isNullable\" : false,\n        \"nativeJavaClass\" : \"classname\",\n        \"aliases\" : [ \"alias1\" , \"alias2\"],\n        \"schemaType\" : {\n            \"class\" : \"SchemaTypeProperties\",\n            \"typeName\" : \"schema type name goes here - (default is SchemaType)\",\n            \"qualifiedName\" : \"unique name of the schema type from an open metadata perspective - required field\",\n            \"technicalName\" : \"name used by technology\",\n            \"technicalDescription\" : \"description extracted from technology\",\n            \"displayName\" : \"display name for business users\",\n            \"summary\" : \"short description for business users\",\n            \"description\" : \"full description for business users\",\n            \"abbreviation\" : \"abbreviation used by the business\",\n            \"usage\" : \"use of this asset by the org\",\n            \"isDeprecated\" : false,\n            \"versionNumber\" : \"name of the version eg 3.1\",\n            \"author\" : \"name\",\n            \"encodingStandard\" : \"special encoding used for the data structured by this schema element\",\n            \"namespace\" : \"namespace name\",\n            \"dataType\" : \"data type used in the data source\",\n            \"defaultValue\" : \"default value of the data\",\n            \"formula\" : \"formula if derived\",\n            \"queries\" : [{\n                \"class\" : \"QueryTargetProperties\",\n                \"queryId\" : \"identifier used in the formula\",\n                \"query\" : \"query to retrieve values from source\",\n                \"queryTargetGUID\" : \"unique identifier of the asset called by for the query\"\n            }],\n            \"additionalProperties\" : {\n                \"propertyName1\" : \"propertyValue1\",\n                \"propertyName2\" : \"propertyValue2\"\n        }},\n        \"additionalProperties\" : {\n            \"propertyName1\" : \"propertyValue1\",\n            \"propertyName2\" : \"propertyValue2\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/schema-elements/{{parentSchemaElementGUID}}/schema-attributes?assetManagerIsHome={{useExternalSourceProvenance}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"schema-elements",
								"{{parentSchemaElementGUID}}",
								"schema-attributes"
							],
							"query": [
								{
									"key": "assetManagerIsHome",
									"value": "{{useExternalSourceProvenance}}",
									"description": "Should the element be updateable only by the asset manager?"
								}
							]
						},
						"description": "Create a schema attribute and link it to a parent schema element. This is typically the root of the schema that is attached to a Data Asset, Port or Process or a parent schema attribute.\n\nIf assetManagerIsHome is true, the assetManagerGUID must be set in the request body."
					},
					"response": []
				}
			],
			"description": "Schema describe the shape of data.  This could be the tables and columns in a database, the structure of an XML document or AVRO object, or the columns in a CSV file.\n\nMore detail about schema: [https://egeria-project.org/concepts/schema/](https://egeria-project.org/concepts/schema/)"
		},
		{
			"name": "Linking Data Assets to Glossary Terms",
			"item": [
				{
					"name": "Link a data asset to a glossary term",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"class\" : \"RelationshipRequestBody\",\n    \"properties\" : {\n        \"class\" : \"SemanticAssignmentProperties\",\n        \"status\" : \"VALIDATED\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/elements/{{assetGUID}}/semantic-assignment/terms/{{glossaryTermGUID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"elements",
								"{{assetGUID}}",
								"semantic-assignment",
								"terms",
								"{{glossaryTermGUID}}"
							]
						},
						"description": "This links the term to the data asset."
					},
					"response": []
				},
				{
					"name": "Retrieve the data assets associated with a glossary term",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-consumer/users/{{user}}/assets/by-meaning/{{glossaryTermGUID}}?startFrom=0&pageSize=0",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-consumer",
								"users",
								"{{user}}",
								"assets",
								"by-meaning",
								"{{glossaryTermGUID}}"
							],
							"query": [
								{
									"key": "startFrom",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "0"
								}
							]
						},
						"description": "This retrieves all of the data assets linked to the glossary term."
					},
					"response": []
				}
			]
		},
		{
			"name": "Glossaries",
			"item": [
				{
					"name": "Create a glossary",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"class\" : \"ReferenceableRequestBody\",\n\t\"elementProperties\" : \n\t\t{\n\t\t\t\"class\" : \"GlossaryProperties\",\n\t\t\t\"qualifiedName\" : \"MyGlossary\",\n\t\t\t\"displayName\" : \"My Glossary\",\n\t\t\t\"description\" : \"This is an example glossary\"\n\t\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/glossaries",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"glossaries"
							]
						},
						"description": "Create a SoftwareServerCapability entity to represent the Asset Manager."
					},
					"response": []
				},
				{
					"name": "Retrieve a glossary by GUID",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"class\" : \"AssetManagerIdentifiersRequestBody\",\n\t \"assetManagerGUID\" : \"{{externalSourceGUID}}\",\n\t \"assetManagerName\" : \"{{externalSourceName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/glossaries/{{glossaryGUID}}/retrieve",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"glossaries",
								"{{glossaryGUID}}",
								"retrieve"
							]
						},
						"description": "This call retrieves the asset manager's GUID."
					},
					"response": []
				},
				{
					"name": "Retrieve a glossary By Name",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"class\" : \"NameRequestBody\",\n    \"name\" : \"Glossary: Abu Dhabi Glossary\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/glossaries/by-name",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"glossaries",
								"by-name"
							]
						},
						"description": "This call retrieves the details of the Abu Dhabi glossary and checks the adGlossaryGUID is set up properly."
					},
					"response": []
				},
				{
					"name": "Find all glossaries",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"class\" : \"SearchStringRequestBody\",\n\t \"searchString\" : \".*\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/glossaries/by-search-string?startFrom=0&pageSize=0",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"glossaries",
								"by-search-string"
							],
							"query": [
								{
									"key": "startFrom",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "0"
								}
							]
						},
						"description": "This call retrieves the details of the Abu Dhabi glossary and checks the adGlossaryGUID is set up properly."
					},
					"response": []
				},
				{
					"name": "Delete a glossary",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\t\n\t\"class\" : \"MetadataCorrelationProperties\",\n\t\"assetManagerGUID\" : \"{{assetManagerGUID}}\",\n\t\"assetManagerName\" : \"{{assetManagerName}}\",\n\t\"externalIdentifier\" : \"extGlossary\",\n\t\"keyPattern\" : \"LOCAL_KEY\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/glossaries/{{glossaryGUID}}/remove",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"glossaries",
								"{{glossaryGUID}}",
								"remove"
							]
						},
						"description": "Remove a glossary from the repository."
					},
					"response": []
				},
				{
					"name": "Create a category",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"class\" : \"ReferenceableRequestBody\",\n\t\"elementProperties\" : \n\t\t{\n\t\t\t\"class\" : \"GlossaryCategoryProperties\",\n\t\t\t\"qualifiedName\" : \"GlossaryCategory: myCategory1\",\n\t\t\t\"displayName\" : \"MyCategory 1\",\n\t\t\t\"description\" : \"This is category 1 for my glossary.\"\n\t\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/glossaries/{{glossaryGUID}}/categories",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"glossaries",
								"{{glossaryGUID}}",
								"categories"
							]
						},
						"description": "Save the returned guid in the domain1GUID variable."
					},
					"response": []
				},
				{
					"name": "Retrieve ALL the categories for my glossary",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/glossaries/{{glossaryGUID}}/categories/retrieve?startFrom=0&pageSize=0",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"glossaries",
								"{{glossaryGUID}}",
								"categories",
								"retrieve"
							],
							"query": [
								{
									"key": "startFrom",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "0"
								}
							]
						},
						"description": "This call retrieves the details of the Abu Dhabi glossary and checks the adGlossaryGUID is set up properly."
					},
					"response": []
				},
				{
					"name": "Create a controlled glossary term in a glossary",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"class\" : \"ReferenceableRequestBody\",\n\t\"elementProperties\" : \n\t\t{\n\t\t\t\"class\" : \"GlossaryTermProperties\",\n\t\t\t\"qualifiedName\" : \"GlossaryTerm: term name : {{$isoTimestamp}}\",\n\t\t\t\"displayName\" : \"term name\",\n            \"summary\" : \"This is the short description.\",\n\t\t\t\"description\" : \"This is the long description of the term.\",\n            \"abbreviation\" : \"GT\",\n            \"examples\" : \"Add examples and descriptions here.\",\n            \"usage\" : \"This is how the concept described by the glossary term is used.\",\n            \"publishVersionIdentifier\" : \"V1.0\",\n            \"additionalProperties\" :\n            {\n               \"propertyName1\" : \"xxxx\",\n               \"propertyName2\" : \"xxxx\" \n            }\n\t\t},\n    \"initialStatus\" : \"DRAFT\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/glossaries/{{glossaryGUID}}/terms/new-controlled",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"glossaries",
								"{{glossaryGUID}}",
								"terms",
								"new-controlled"
							]
						},
						"description": "Add the returned guid as orgGlossaryTerm1GUID variable."
					},
					"response": []
				},
				{
					"name": "Create a copy of a glossary term",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"class\" : \"GlossaryTemplateRequestBody\",\n\t\"elementProperties\" : \n\t\t{\n\t\t\t\"class\" : \"TemplateProperties\",\n\t\t\t\"qualifiedName\" : \"GlossaryTerm: term name : {{$isoTimestamp}}\",\n\t\t\t\"displayName\" : \"term name\",\n            \"versionIdentifier\" : \"V1.0\"\n\t\t},\n    \"glossaryTermStatus\" : \"PROPOSED\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/glossaries/{{glossaryGUID}}/terms/from-template/{{glossaryTermGUID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"glossaries",
								"{{glossaryGUID}}",
								"terms",
								"from-template",
								"{{glossaryTermGUID}}"
							]
						},
						"description": "Add the returned guid as adGlossaryTerm1GUID variable."
					},
					"response": []
				},
				{
					"name": "Add the data field values classification to the glossary term",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"class\" : \"ClassificationRequestBody\",\n\t\"properties\" : \n\t\t{\n\t\t\t\"class\" : \"DataFieldValuesProperties\",\n\t\t\t\"defaultValue\" : \"Add default value here\",\n            \"sampleValues\" : [ \"Sample Value 1\", \"Sample Value 2\"],\n            \"dataPattern\" : [\"add data pattern here\"],\n            \"namePattern\" : [\"add column pattern here\"]\n\t\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/glossaries/terms/{{glossaryTermGUID}}/is-data-field",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"glossaries",
								"terms",
								"{{glossaryTermGUID}}",
								"is-data-field"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add the confidentiality classification to the glossary term",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"class\" : \"ClassificationRequestBody\",\n\t\"properties\" : \n\t\t{\n\t\t\t\"class\" : \"GovernanceClassificationProperties\",\n\t\t\t\"levelIdentifier\" : 1\n\t\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/elements/{{glossaryTermGUID}}/confidentiality",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"elements",
								"{{glossaryTermGUID}}",
								"confidentiality"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add the subject area classification to the glossary term",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"class\" : \"ClassificationRequestBody\",\n\t\"properties\" : \n\t\t{\n\t\t\t\"class\" : \"SubjectAreaMemberProperties\",\n\t\t\t\"subjectAreaName\" : \"Healthcare\"\n\t\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/elements/{{glossaryTermGUID}}/subject-area-member",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"elements",
								"{{glossaryTermGUID}}",
								"subject-area-member"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a glossary term in a glossary",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"class\" : \"ReferenceableRequestBody\",\n\t\"elementProperties\" : \n\t\t{\n\t\t\t\"class\" : \"GlossaryTermProperties\",\n\t\t\t\"description\" : \"This is the long description of the term. And this is some more text.\"\n\t\t},\n        \"updateDescription\" : \"Final updates based on in-house review comments.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/glossaries/terms/{{glossaryTermGUID}}/update?isMergeUpdate=true",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"glossaries",
								"terms",
								"{{glossaryTermGUID}}",
								"update"
							],
							"query": [
								{
									"key": "isMergeUpdate",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a glossary term's version identfier",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"class\" : \"ReferenceableRequestBody\",\n\t\"elementProperties\" : \n\t\t{\n\t\t\t\"class\" : \"GlossaryTermProperties\",\n            \"publishVersionIdentifier\" : \"V1.1\"\n\t\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/glossaries/terms/{{glossaryTermGUID}}/update?isMergeUpdate=true",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"glossaries",
								"terms",
								"{{glossaryTermGUID}}",
								"update"
							],
							"query": [
								{
									"key": "isMergeUpdate",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a glossary term to a cateogry",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"class\" : \"RelationshipRequestBody\",\n    \"properties\" : {\n        \"class\" : \"GlossaryTermCategorization\"\n     }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/glossaries/categories/{{glossaryCategoryGUID}}/terms/{{glossaryTermGUID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"glossaries",
								"categories",
								"{{glossaryCategoryGUID}}",
								"terms",
								"{{glossaryTermGUID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove a glossary term from a category",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/glossaries/categories/{{glossaryCategoryGUID}}/terms/{{glossaryTermGUID}}/remove",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"glossaries",
								"categories",
								"{{glossaryCategoryGUID}}",
								"terms",
								"{{glossaryTermGUID}}",
								"remove"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change the status of a glossary term in a glossary",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"class\" : \"GlossaryTermStatusRequestBody\",\n    \"glossaryTermStatus\" : \"ACTIVE\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/glossaries/terms/{{glossaryTermGUID}}/status",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"glossaries",
								"terms",
								"{{glossaryTermGUID}}",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Undo an update to the glossary term",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/glossaries/terms/{{glossaryTermGUID}}/undo",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"glossaries",
								"terms",
								"{{glossaryTermGUID}}",
								"undo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve ALL the glossary terms in a glossary",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/glossaries/{{glossaryGUID}}/terms/retrieve?startFrom=0&pageSize=0",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"glossaries",
								"{{glossaryGUID}}",
								"terms",
								"retrieve"
							],
							"query": [
								{
									"key": "startFrom",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve ALL the glossary terms in a category",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/glossaries/categories/{{glossaryCategoryGUID}}/terms/retrieve?startFrom=0&pageSize=0",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"glossaries",
								"categories",
								"{{glossaryCategoryGUID}}",
								"terms",
								"retrieve"
							],
							"query": [
								{
									"key": "startFrom",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a glossary term 's relationships",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/glossaries/terms/{{glossaryTermGUID}}/related-terms?startFrom=0&pageSize=0",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"glossaries",
								"terms",
								"{{glossaryTermGUID}}",
								"related-terms"
							],
							"query": [
								{
									"key": "startFrom",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "0"
								}
							]
						},
						"description": "This call retrieves details of the glossary terms linked to this glossary term.  Notice the original org 1 glossary term is linked via the \"SourcedFrom\" relationship.."
					},
					"response": []
				},
				{
					"name": "Retrieve the DRAFT glossary terms from a glossary",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"class\" : \"GlossarySearchStringRequestBody\",\n    \"searchString\" : \".*\",\n    \"glossaryGUID\" : \"{{glossaryGUID}}\",\n    \"limitResultsByStatus\" : [\"DRAFT\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/glossaries/terms/by-search-string?startFrom=0&pageSize=0",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"glossaries",
								"terms",
								"by-search-string"
							],
							"query": [
								{
									"key": "startFrom",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve the ACTIVE and PREPARED glossary terms from a glossary",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"class\" : \"GlossarySearchStringRequestBody\",\n    \"searchString\" : \".*\",\n    \"glossaryGUID\" : \"{{glossaryGUID}}\",\n    \"limitResultsByStatus\" : [\"ACTIVE\", \"PREPARED\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/glossaries/terms/by-search-string?startFrom=0&pageSize=0",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"glossaries",
								"terms",
								"by-search-string"
							],
							"query": [
								{
									"key": "startFrom",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a glossary term by GUID",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/glossaries/terms/{{glossaryTermGUID}}/retrieve",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"glossaries",
								"terms",
								"{{glossaryTermGUID}}",
								"retrieve"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve the versions of the glossary term",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/glossaries/terms/{{glossaryTermGUID}}/history?startFrom=0&pageSize=0",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"glossaries",
								"terms",
								"{{glossaryTermGUID}}",
								"history"
							],
							"query": [
								{
									"key": "startFrom",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve the revision log for a glossary term",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/elements/{{glossaryTermGUID}}/note-logs/retrieve?startFrom=0&pageSize=0",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"elements",
								"{{glossaryTermGUID}}",
								"note-logs",
								"retrieve"
							],
							"query": [
								{
									"key": "startFrom",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "0"
								}
							]
						},
						"description": "Add the returned guid as orgGlossaryTerm1_RevisionLogGUID variable."
					},
					"response": []
				},
				{
					"name": "Retrieve the revision history for a glossary term",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/note-logs/{{glossaryTerm_RevisionLogGUID}}/notes/retrieve?startFrom=0&pageSize=0",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"note-logs",
								"{{glossaryTerm_RevisionLogGUID}}",
								"notes",
								"retrieve"
							],
							"query": [
								{
									"key": "startFrom",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "0"
								}
							]
						},
						"description": "This revision history is created automatically.  The text is supplied on the update request.  If no text is supplied, the value \"None\" is show."
					},
					"response": []
				},
				{
					"name": "Search for term by version identifier",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"class\" : \"FindRequestBody\",\n    \"metadataElementTypeName\" : \"GlossaryTerm\",\n    \"searchProperties\" : {\n        \"class\" : \"SearchProperties\",\n        \"conditions\" : [{\n            \"class\" : \"PropertyCondition\",\n            \"property\" : \"publishVersionIdentifier\",\n            \"operator\" : \"EQ\",\n            \"value\" : {\n                \"class\" : \"PrimitiveTypePropertyValue\",\n                \"primitiveTypeCategory\" : \"OM_PRIMITIVE_TYPE_STRING\",\n                \"primitiveValue\" : \"V1.0\",\n                \"typeName\" : \"string\"\n                }\n        }],\n        \"matchCriteria\" : \"ALL\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/framework-services/asset-manager/open-metadata-store/users/{{user}}/metadata-elements/by-search-specification?startFrom=0&pageSize=0&forLineage=false&forDuplicateProcessing=false&effectiveTime=0",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"framework-services",
								"asset-manager",
								"open-metadata-store",
								"users",
								"{{user}}",
								"metadata-elements",
								"by-search-specification"
							],
							"query": [
								{
									"key": "startFrom",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "0"
								},
								{
									"key": "forLineage",
									"value": "false"
								},
								{
									"key": "forDuplicateProcessing",
									"value": "false"
								},
								{
									"key": "effectiveTime",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a. glossary term",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/glossaries/terms/{{glossaryTermGUID}}/remove",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"glossaries",
								"terms",
								"{{glossaryTermGUID}}",
								"remove"
							]
						},
						"description": "This call retrieves the details of the Abu Dhabi glossary and checks the adGlossaryGUID is set up properly."
					},
					"response": []
				}
			],
			"description": "A glossary is a collection of glossary terms used to describe the terminology and data elements used in an organization.  These can be organized using glossary categories."
		},
		{
			"name": "Processes",
			"item": [
				{
					"name": "Create Process",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"class\" : \"ProcessRequestBody\",\n    \"elementProperties\" : \n    {\n        \"class\" : \"ProcessProperties\",\n        \"qualifiedName\" : \"fred\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/servers/{{server}}/open-metadata/access-services/asset-manager/users/{{user}}/processes?assetManagerIsHome={{useExternalSourceProvenance}}&initialStatus=ACTIVE",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"servers",
								"{{server}}",
								"open-metadata",
								"access-services",
								"asset-manager",
								"users",
								"{{user}}",
								"processes"
							],
							"query": [
								{
									"key": "assetManagerIsHome",
									"value": "{{useExternalSourceProvenance}}",
									"description": "Should the element be updateable only by the asset manager?"
								},
								{
									"key": "initialStatus",
									"value": "ACTIVE"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Processes are catalogued to allow lineage graphs to be created in open metadata."
		},
		{
			"name": "Connector Types",
			"item": [
				{
					"name": "Update a connector type",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}