{
	"info": {
		"_postman_id": "489e39b7-720b-4c6e-9a0d-0dcbfebde4ad",
		"name": "Data Engine - Topics lineage examples",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1.INSTANCE",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "demo",
							"type": "string"
						},
						{
							"key": "password",
							"value": "demo",
							"type": "string"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{base-url}}/open-metadata/admin-services/users/{{user-id}}/servers/{{server-id}}/instance",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"open-metadata",
						"admin-services",
						"users",
						"{{user-id}}",
						"servers",
						"{{server-id}}",
						"instance"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.1 Register external tool",
			"protocolProfileBehavior": {
				"strictSSL": false,
				"disableUrlEncoding": true,
				"followRedirects": false
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"dataEngine\":\n    {\n        \"qualifiedName\": \"(organization)=Company::(project)=ExternalDataPlatform\",\n        \"displayName\": \"ExternalDataEngine\",\n        \"description\": \"Requesting to register external data engine capability\",\n        \"engineType\": \"DataEngine\",\n        \"engineVersion\": \"1\",\n        \"enginePatchLevel\": \"1\",\n        \"vendor\": \"Company\",\n        \"version\": \"1\",\n        \"source\": \"source\"\n    }\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/registration",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"registration"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.2  Create first topic high level",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\",\n    \"topic\": {\n        \"qualifiedName\": \"(topic)=first-topic-high-level\",\n        \"displayName\": \"first-topic-high-level\",\n        \"topicType\": \"topic-type\",\n        \"description\": \"topic description\",\n        \"otherOriginValues\": {\n            \"prop\": \"oherOrigin\"\n        },\n        \"owner\": \"owner\",\n        \"ownerType\": \"USER_ID\",\n        \"zoneMembership\": [\n            \"ZONE_1\"\n        ],\n        \"additionalProperties\": {\n            \"key1\": \"value1\",\n            \"key2\": \"value2\"\n        },\n        \"eventTypes\": [\n            {\n                \"qualifiedName\": \"(topic)=first-topic-high-level::(eventType)=first-event-high-level\",\n                \"displayName\": \"first-event-high-level\",\n                \"author\": \"author\",\n                \"usage\": \"usage\",\n                \"encodingStandard\": \"encoding\",\n                \"versionNumber\": \"versionNumber\",\n                \"isDeprecated\": false,\n                \"description\": \"event type description\",\n                \"eventSchemaAttributes\": [\n                    {\n                        \"qualifiedName\": \"(topic)=first-topic-high-level::(eventType)=first-event-high-level::(eventAttribute)=first-event-attribute\",\n                        \"displayName\": \"first-event-attribute\",\n                        \"minCardinality\": 1,\n                        \"maxCardinality\": 1,\n                        \"isDeprecated\": false,\n                        \"isNullable\": false,\n                        \"allowsDuplicateValues\": true,\n                        \"position\": 1,\n                        \"dataType\": \"INTEGER\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/topics",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"topics"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.3  Create second topic high level",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\",\n    \"topic\": {\n        \"qualifiedName\": \"(topic)=second-topic-high-level\",\n        \"displayName\": \"second-topic-high-level\",\n        \"topicType\": \"topic-type\",\n        \"description\": \"topic description\",\n        \"otherOriginValues\": {\n            \"prop\": \"oherOrigin\"\n        },\n        \"owner\": \"owner\",\n        \"ownerType\": \"USER_ID\",\n        \"zoneMembership\": [\n            \"ZONE_1\"\n        ],\n        \"additionalProperties\": {\n            \"key1\": \"value1\",\n            \"key2\": \"value2\"\n        }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/topics",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"topics"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.4  Create first topic low level",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\",\n    \"topic\": {\n        \"qualifiedName\": \"(topic)=first-topic-low-level\",\n        \"displayName\": \"first-topic-low-level\",\n        \"topicType\": \"topic-type\",\n        \"description\": \"topic description\",\n        \"otherOriginValues\": {\n            \"prop\": \"oherOrigin\"\n        },\n        \"owner\": \"owner\",\n        \"ownerType\": \"USER_ID\",\n        \"zoneMembership\": [\n            \"ZONE_1\"\n        ],\n        \"additionalProperties\": {\n            \"key1\": \"value1\",\n            \"key2\": \"value2\"\n        },\n        \"eventTypes\": [\n            {\n                \"qualifiedName\": \"(topic)=first-topic-low-level::(eventType)=first-event-low-level\",\n                \"displayName\": \"first-event-low-level\",\n                \"author\": \"author\",\n                \"usage\": \"usage\",\n                \"encodingStandard\": \"encoding\",\n                \"versionNumber\": \"versionNumber\",\n                \"isDeprecated\": false,\n                \"description\": \"event type description\",\n                \"eventSchemaAttributes\": [\n                    {\n                        \"qualifiedName\": \"(topic)=first-topic-low-level::(eventType)=first-event-low-level::(eventAttribute)=first-event-attribute\",\n                        \"displayName\": \"first-event-attribute\",\n                        \"minCardinality\": 1,\n                        \"maxCardinality\": 1,\n                        \"isDeprecated\": false,\n                        \"isNullable\": false,\n                        \"allowsDuplicateValues\": true,\n                        \"position\": 1,\n                        \"dataType\": \"INTEGER\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/topics",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"topics"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.5  Create second topic low level",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\",\n    \"topic\": {\n        \"qualifiedName\": \"(topic)=second-topic-low-level\",\n        \"displayName\": \"second-topic-low-level\",\n        \"topicType\": \"topic-type\",\n        \"description\": \"topic description\",\n        \"otherOriginValues\": {\n            \"prop\": \"oherOrigin\"\n        },\n        \"owner\": \"owner\",\n        \"ownerType\": \"USER_ID\",\n        \"zoneMembership\": [\n            \"ZONE_1\"\n        ],\n        \"additionalProperties\": {\n            \"key1\": \"value1\",\n            \"key2\": \"value2\"\n        },\n        \"eventTypes\": [\n            {\n                \"qualifiedName\": \"(topic)=second-topic-low-level::(eventType)=second-event-low-level\",\n                \"displayName\": \"second-event-low-level\",\n                \"author\": \"author\",\n                \"usage\": \"usage\",\n                \"encodingStandard\": \"encoding\",\n                \"versionNumber\": \"versionNumber\",\n                \"isDeprecated\": false,\n                \"description\": \"event type description\",\n                \"eventSchemaAttributes\": [\n                    {\n                        \"qualifiedName\": \"(topic)=second-topic-low-level::(eventType)=second-event-low-level::(eventAttribute)=second-event-attribute\",\n                        \"displayName\": \"second-event-attribute\",\n                        \"minCardinality\": 1,\n                        \"maxCardinality\": 1,\n                        \"isDeprecated\": false,\n                        \"isNullable\": false,\n                        \"allowsDuplicateValues\": true,\n                        \"position\": 1,\n                        \"dataType\": \"INTEGER\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/topics",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"topics"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.1 Create high level process",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"process\": {\n        \"headerVersion\": 0,\n        \"qualifiedName\": \"(process)=high-level-process\",\n        \"displayName\": \"high-level-process\",\n        \"description\": \"\",\n        \"owner\": \"Egeria Open Metadata\",\n        \"name\": \"flow1\"\n        },\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/processes",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"processes"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.2 Add data flows high level",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"dataFlows\": [\n        {\n            \"dataSupplier\": \"(topic)=first-topic-high-level\",\n            \"dataConsumer\": \"(process)=high-level-process\"\n        },\n        {\n            \"dataSupplier\": \"(process)=high-level-process\",\n            \"dataConsumer\": \"(topic)=second-topic-high-level\"\n        }\n    ],\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/data-flows",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"data-flows"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.3 Create low level process",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "demo",
							"type": "string"
						},
						{
							"key": "password",
							"value": "demo",
							"type": "string"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"process\": {\n        \"qualifiedName\": \"(process)=low-level-parent-process::(process)=low-level-process\",\n        \"displayName\": \"low-level-process\",\n        \"name\": \"low-level-process\",\n        \"description\": \"low-level-process is (sub)process that describes the low level implementation activities performed by a platform or tool.\",\n        \"owner\": \"Platform User\",\n        \"portImplementations\": [\n            {\n                \"displayName\": \"InputPort\",\n                \"qualifiedName\": \"(process)=low-level-parent-process::(process)=low-level-process::(port)=InputPort\",\n                \"updateSemantic\": \"REPLACE\",\n                \"type\": \"INPUT_PORT\",\n                \"schema\": {\n                    \"displayName\": \"InputPortSchema\",\n                    \"qualifiedName\": \"(process)=low-level-parent-process::(process)=low-level-process::(port)=InputPort::(schema)=InputPortSchema\",\n                    \"author\": \"Platform User\",\n                    \"columns\": [\n                        {\n                            \"qualifiedName\": \"(process)=low-level-parent-process::(process)=low-level-process::(port)=InputPort::(schema)=InputPortSchema::(attribute)=event-schema-attribute\",\n                            \"displayName\": \"Last\",\n                            \"minCardinality\": 0,\n                            \"maxCardinality\": 0,\n                            \"allowsDuplicateValues\": false,\n                            \"orderedValues\": false,\n                            \"position\": 0,\n                            \"dataType\": \"VARCHAR\"\n                        }\n                    ]\n                }\n            },\n            {\n                \"displayName\": \"OutputPort\",\n                \"qualifiedName\": \"(process)=low-level-parent-process::(process)=low-level-process::(port)=OutputPort\",\n                \"updateSemantic\": \"REPLACE\",\n                \"type\": \"OUTPUT_PORT\",\n                \"schema\": {\n                    \"displayName\": \"OutputPortSchema\",\n                    \"qualifiedName\": \"(process)=CopySchemaAttributesFlow::(process)=CopySchemaAttributes::(port)=OutputPortSchema\",\n                    \"author\": \"Platform User\",\n                    \"columns\": [\n                        {\n                            \"qualifiedName\": \"(process)=low-level-parent-process::(process)=low-level-process::(port)=OutputPort::(schema)=OutputPortSchema::(attribute)=event-schema-attribute\",\n                            \"displayName\": \"LNAME\",\n                            \"minCardinality\": 0,\n                            \"maxCardinality\": 0,\n                            \"allowsDuplicateValues\": false,\n                            \"orderedValues\": false,\n                            \"position\": 0\n                        }\n                    ]\n                }\n            }\n        ],\n        \"updateSemantic\": \"REPLACE\"\n    },\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\"\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/processes",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"processes"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.4 Add data flows low level",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"dataFlows\": [\n        {\n            \"dataSupplier\": \"(topic)=first-topic-low-level::(eventType)=first-event-low-level::(eventAttribute)=first-event-attribute\",\n            \"dataConsumer\": \"(process)=low-level-parent-process::(process)=low-level-process::(port)=InputPort::(schema)=InputPortSchema::(attribute)=event-schema-attribute\"\n        },\n        {\n            \"dataSupplier\": \"(process)=low-level-parent-process::(process)=low-level-process::(port)=InputPort::(schema)=InputPortSchema::(attribute)=event-schema-attribute\",\n            \"dataConsumer\": \"(process)=low-level-parent-process::(process)=low-level-process::(port)=OutputPort::(schema)=OutputPortSchema::(attribute)=event-schema-attribute\"\n        },\n        {\n            \"dataSupplier\": \"(process)=low-level-parent-process::(process)=low-level-process::(port)=OutputPort::(schema)=OutputPortSchema::(attribute)=event-schema-attribute\",\n            \"dataConsumer\": \"(topic)=second-topic-low-level::(eventType)=second-event-low-level::(eventAttribute)=second-event-attribute\"\n        }\n    ],\n    \"externalSourceName\": \"(organization)=Company::(project)=ExternalDataPlatform\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/data-flows",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"data-flows"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.5 Create low level parent process",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "demo",
							"type": "string"
						},
						{
							"key": "password",
							"value": "demo",
							"type": "string"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"process\": {\n        \"qualifiedName\": \"(process)=low-level-parent-process\",\n        \"displayName\": \"low-level-parent-process\",\n        \"name\": \"low-level-parent-process\",\n        \"description\": \"low-level-process describes high level process input and output and mappings between (sub)processes (if any).\",\n        \"owner\": \"Platform User\",\n        \"portAliases\": [\n            {\n                \"displayName\": \"ReadInputPortAlias\",\n                \"qualifiedName\": \"(process)=low-level-parent-process::(port)=ReadInputPortAlias\",\n                \"updateSemantic\": \"REPLACE\",\n                \"delegatesTo\": \"(process)=low-level-parent-process::(process)=low-level-process::(port)=InputPort\",\n                \"type\": \"INPUT_PORT\"\n            },\n            {\n                \"displayName\": \"WriteOutputPortAlias\",\n                \"qualifiedName\": \"(process)=low-level-process::(port)=WriteOutpuPortAlias\",\n                \"updateSemantic\": \"REPLACE\",\n                \"delegatesTo\": \"(process)=low-level-parent-process::(process)=low-level-process::(port)=OutputPort\",\n                \"type\": \"OUTPUT_PORT\"\n            }\n        ],\n        \"dataFlows\": [],\n        \"updateSemantic\": \"REPLACE\"\n    },\n    \"externalSourceName\": \"(organization)=ING::(project)=ExternalDataPlatform\"\n}"
				},
				"url": {
					"raw": "{{base-url}}/servers/{{server-id}}/open-metadata/access-services/data-engine/users/{{user-id}}/processes",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"servers",
						"{{server-id}}",
						"open-metadata",
						"access-services",
						"data-engine",
						"users",
						"{{user-id}}",
						"processes"
					]
				}
			},
			"response": []
		}
	]
}