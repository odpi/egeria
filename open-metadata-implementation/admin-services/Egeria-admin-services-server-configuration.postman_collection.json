{
	"info": {
		"_postman_id": "01b3f712-8bbb-474b-ad42-ab66fff58f9a",
		"name": "Egeria-admin-services-server-configuration",
		"description": "Requests for configuring an OMAG Server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Working with a server's complete configuration document",
			"item": [
				{
					"name": "Get server configuration document",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/configuration",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"open-metadata",
								"admin-services",
								"users",
								"{{user}}",
								"servers",
								"{{server}}",
								"configuration"
							]
						},
						"description": "Retrieve the configuration document for the named server."
					},
					"response": []
				},
				{
					"name": "Get server type classification",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/server-type-classification",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"open-metadata",
								"admin-services",
								"users",
								"{{user}}",
								"servers",
								"{{server}}",
								"server-type-classification"
							]
						},
						"description": "Retrieve the classification that describes, based on the configuration values in the configuration document, what type of OMAG Server this is."
					},
					"response": []
				},
				{
					"name": "Set server configuration document",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"class\": \"OMAGServerConfigResponse\",\n    \"relatedHTTPCode\": 200,\n    \"omagserverConfig\": {\n        \"class\": \"OMAGServerConfig\",\n        \"versionId\": \"V2.0\",\n        \"localServerId\": \"1083dba3-bbf8-44f0-a16f-ff842a9a03f0\",\n        \"localServerName\": \"{{server}}\",\n        \"localServerType\": \"Open Metadata and Governance Server\",\n        \"localServerURL\": \"https://localhost:9443\",\n        \"localServerUserId\": \"OMAGServer\",\n        \"maxPageSize\": 1000\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/configuration",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"open-metadata",
								"admin-services",
								"users",
								"{{user}}",
								"servers",
								"{{server}}",
								"configuration"
							]
						},
						"description": "Set the configuration document passed in the request body for the named server."
					},
					"response": []
				},
				{
					"name": "Delete server configuration document",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/configuration",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"open-metadata",
								"admin-services",
								"users",
								"{{user}}",
								"servers",
								"{{server}}",
								"configuration"
							]
						},
						"description": "Removes the configuration document for the named server."
					},
					"response": []
				},
				{
					"name": "Deploy server configuration document",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"class\": \"URLRequestBody\",\n    \"urlRoot\": \"{{baseURL}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/configuration/deploy",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"open-metadata",
								"admin-services",
								"users",
								"{{user}}",
								"servers",
								"{{server}}",
								"configuration",
								"deploy"
							]
						},
						"description": "Send the configuration document for the named server to the named OMAG Server Platform.  This is used to push the server configuraiton to the platform where it will run."
					},
					"response": []
				}
			],
			"description": "These rest calls allow you to work with the configuration document."
		},
		{
			"name": "Configuring OMAG Servers",
			"item": [
				{
					"name": "Basic configuration for all types of OMAG Servers",
					"item": [
						{
							"name": "Set local server type name",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/server-type?typeName=OMAG Server",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"server-type"
									],
									"query": [
										{
											"key": "typeName",
											"value": "OMAG Server"
										}
									]
								},
								"description": "Set up a descriptive type name for your server.  This is used in messages and events - you can choose any value you like."
							},
							"response": []
						},
						{
							"name": "Set organization name",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/organization-name?name={{organization_name}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"organization-name"
									],
									"query": [
										{
											"key": "name",
											"value": "{{organization_name}}"
										}
									]
								},
								"description": "Set up the name of the organization that owns this server."
							},
							"response": []
						},
						{
							"name": "Set local server user Id",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/server-user-id?id={{server-user}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"server-user-id"
									],
									"query": [
										{
											"key": "id",
											"value": "{{server-user}}"
										}
									]
								},
								"description": "Set up the user Id that this server should use on open metadata requests when it is processing events (and consequently there is no end user id to use)."
							},
							"response": []
						},
						{
							"name": "Set local server user password",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/server-user-password?password={{server-password}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"server-user-password"
									],
									"query": [
										{
											"key": "password",
											"value": "{{server-password}}"
										}
									]
								},
								"description": "Set up the password that this server should use on open metadata requests when it is processing events (and consequently there is no end user id to use)."
							},
							"response": []
						},
						{
							"name": "Set max page size",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/max-page-size?limit={{max_page_size}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"max-page-size"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{max_page_size}}"
										}
									]
								},
								"description": "Set up the maximum number of results that can be returned on an open metadata request."
							},
							"response": []
						},
						{
							"name": "Get Server Security Connection",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/security/connection",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"security",
										"connection"
									]
								},
								"description": "Retrieve the Connection object used to create the connector that verifies the authorization of users calling the platform and admin services."
							},
							"response": []
						},
						{
							"name": "Set Server Security Connection",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"class\": \"Connection\",\n    \"connectorType\": {\n        \"class\": \"ConnectorType\",\n        \"connectorProviderClassName\": \"org.odpi.openmetadata.metadatasecurity.samples.CocoPharmaServerSecurityProvider\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/security/connection",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"security",
										"connection"
									]
								},
								"description": "Set up the connection for the server security connector.  This connector verifies the authorization of any user calling the server's services.  This call is preconfigured to set up the sample server security connector.  This allows only the Coco Pharmaceuticals employees to issue calls to the server.\n\n\nOnce you have set up this security connector in your OMAG Server, the default user `me` in the `Egeria` environment will no longer be authorized to issue REST calls to the server (try some of the requests that were \"working\" earlier to verify this).  To switch the user to one that the OMAG Server will accept, click on the eye symbol (top right), then click on `edit` and change the current value of `user` to `erinoverview`."
							},
							"response": []
						},
						{
							"name": "Delete Server Security Connection",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/security/connection",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"security",
										"connection"
									]
								},
								"description": "Remove the currently configured Server Security Connection.  This means that no security checks will be performed by the OMAG Server when it is processing inbound REST API calls."
							},
							"response": []
						},
						{
							"name": "Get configured audit log destinations",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/audit-log-destinations",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"audit-log-destinations"
									]
								},
								"description": "Retrieve the list of audit log destinations configured for a server."
							},
							"response": []
						},
						{
							"name": "Set default audit log destination",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/audit-log-destinations/default",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"audit-log-destinations",
										"default"
									]
								},
								"description": "Set up the server so that it is using the default audit log setting which is to output to the console only."
							},
							"response": []
						},
						{
							"name": "Add file audit log destination",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/audit-log-destinations/files",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"audit-log-destinations",
										"files"
									]
								},
								"description": "Add the file audit log destination to the server's configuration document.  The list of severities that are sent to this destination are passed on the request body.  An empty list means all severities.\n\nThe server may have multiple audit log destinations configured.  Typically each destination has a different subset of the severities configured."
							},
							"response": []
						},
						{
							"name": "Add topic audit log destination",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/audit-log-destinations/event-topic",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"audit-log-destinations",
										"event-topic"
									]
								},
								"description": "Add the event topic audit log destination to the server's configuration document.  The list of severities that are sent to this destination are passed on the request body.  An empty list means all severities.\n\nThe server may have multiple audit log destinations configured.  Typically each destination has a different subset of the severities configured."
							},
							"response": []
						},
						{
							"name": "Add console audit log destination",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/audit-log-destinations/console",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"audit-log-destinations",
										"console"
									]
								},
								"description": "Add the console audit log destination to the server's configuration document.  The list of severities that are sent to this destination are passed on the request body.  An empty list means all severities.\n\nThe server may have multiple audit log destinations configured.  Typically each destination has a different subset of the severities configured."
							},
							"response": []
						},
						{
							"name": "Add audit log destination connection",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/audit-log-destinations/connection",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"audit-log-destinations",
										"connection"
									]
								},
								"description": "Add a connection for an audit log destination to the server's configuration document.  This connection typically creates an audit log destination connector written by a thrid party.\n\nThe server may have multiple audit log destinations configured.  Typically each destination has a different subset of the severities configured."
							},
							"response": []
						},
						{
							"name": "Delete configured audit log destinations",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/audit-log-destinations",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"audit-log-destinations"
									]
								},
								"description": "Delete the list of audit log destinations configured for a server."
							},
							"response": []
						},
						{
							"name": "Set up event bus to send/receive events to other technologies Copy",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"producer\":\n{\n\"bootstrap.servers\":\"{{kafkaep}}\"\n},\n\"consumer\":\n{\n\"bootstrap.servers\":\"{{kafkaep}}\"\n}\n}"
								},
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/event-bus",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"event-bus"
									]
								},
								"description": "Set up the common properties needed to call your event bus.  The eventBusParams variable support the setting of the topic root and connector provider class name (if not using Kafka).  Additional properties are passed in the request body."
							},
							"response": []
						}
					],
					"description": "This folder has the configuration commands that are common for all types of OMAG Server.\n\nThis is the link to their documentation: https://odpi.github.io/egeria-docs/guides/admin/servers/"
				},
				{
					"name": "Configuration for Cohort Members",
					"item": [
						{
							"name": "Configuring defaults for the Cohort Members",
							"item": [
								{
									"name": "Set local server URL root",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"class\": \"URLRequestBody\",\n    \"urlRoot\": \"{{baseURL}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/server-url-root-for-caller",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"open-metadata",
												"admin-services",
												"users",
												"{{user}}",
												"servers",
												"{{server}}",
												"server-url-root-for-caller"
											]
										},
										"description": "Update the URL root that other servers that are also members any open metadata repository cohort that the server belongs to should use to make calls to this local server. This value is sent when the server registers with the cohort.  If the server is not going to join a cohort then this value is not needed.\n\nThis value should be set to the URL of the OMAG Server Platform where the server will run.  If the server is deployed to many servers in an HA cluster configuration, it should be set to a DNS name that will disperse requests across the server cluster."
									},
									"response": []
								},
								{
									"name": "Get event bus defaults",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"producer\": {\n        \"bootstrap.servers\": \"{{kafkaep}}\"\n    },\n    \"consumer\":{\n        \"bootstrap.servers\": \"{{kafkaep}}\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/event-bus",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"open-metadata",
												"admin-services",
												"users",
												"{{user}}",
												"servers",
												"{{server}}",
												"event-bus"
											]
										},
										"description": "Retrieve the common properties needed to call your event bus.\nThese defaults will be incorporated into any future configuration that includes an event bus topic."
									},
									"response": []
								},
								{
									"name": "Set up event bus defaults",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"producer\": {\n        \"bootstrap.servers\": \"{{kafkaep}}\"\n    },\n    \"consumer\":{\n        \"bootstrap.servers\": \"{{kafkaep}}\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/event-bus",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"open-metadata",
												"admin-services",
												"users",
												"{{user}}",
												"servers",
												"{{server}}",
												"event-bus"
											]
										},
										"description": "Set up the common properties needed to call your event bus.  These properties are passed in the request body.\nThis request just sets up the defaults that will be incorporated into any future configuration that includes an event bus topic."
									},
									"response": []
								},
								{
									"name": "Delete event bus defaults",
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"producer\": {\n        \"bootstrap.servers\": \"{{kafkaep}}\"\n    },\n    \"consumer\":{\n        \"bootstrap.servers\": \"{{kafkaep}}\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/event-bus",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"open-metadata",
												"admin-services",
												"users",
												"{{user}}",
												"servers",
												"{{server}}",
												"event-bus"
											]
										},
										"description": "Remove the event bus details from the server's configuration document."
									},
									"response": []
								}
							],
							"description": "These values need to be set up first when configuring a cohort member.  These are the links to the documentation: https://odpi.github.io/egeria-docs/guides/admin/servers/"
						},
						{
							"name": "Configuration for Metadata Access Points",
							"item": [
								{
									"name": "Configuration for Metadata Servers",
									"item": [
										{
											"name": "Enable the in-memory repository",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/local-repository/mode/in-memory-repository",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"open-metadata",
														"admin-services",
														"users",
														"{{user}}",
														"servers",
														"{{server}}",
														"local-repository",
														"mode",
														"in-memory-repository"
													]
												},
												"description": "Set up the local reposiotry to use the in-memory implementation."
											},
											"response": []
										},
										{
											"name": "Enable the graph repository",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/local-repository/mode/local-graph-repository",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"open-metadata",
														"admin-services",
														"users",
														"{{user}}",
														"servers",
														"{{server}}",
														"local-repository",
														"mode",
														"local-graph-repository"
													]
												},
												"description": "Set the local reposiotry to use the JanusGraph implementation.  It will store your repository in a file under the home of your OMAG Server Platform."
											},
											"response": []
										},
										{
											"name": "Get local metadata collection id",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/local-repository/metadata-collection-id",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"open-metadata",
														"admin-services",
														"users",
														"{{user}}",
														"servers",
														"{{server}}",
														"local-repository",
														"metadata-collection-id"
													]
												},
												"description": "Return the unique identifer for the collection of metadata that originates from this metadata server.  This identifier is automatically generated when the metadata server is first configured.  Its value should not change over the lifetime of the server event if the configuration is rebuilt."
											},
											"response": []
										},
										{
											"name": "Set local metadata collection name",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/local-repository/metadata-collection-name/{{mc_name}}",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"open-metadata",
														"admin-services",
														"users",
														"{{user}}",
														"servers",
														"{{server}}",
														"local-repository",
														"metadata-collection-name",
														"{{mc_name}}"
													]
												},
												"description": "Set up a human friendly name for the collection of metadata that originates from this metadata server. This name is used in events and messages to help people diagnose problems in the cohort."
											},
											"response": []
										},
										{
											"name": "Remove local repository",
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/local-repository",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"open-metadata",
														"admin-services",
														"users",
														"{{user}}",
														"servers",
														"{{server}}",
														"local-repository"
													]
												},
												"description": "Remove all configuration for the local repository."
											},
											"response": []
										},
										{
											"name": "Add open metadata archive to server start",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "content-packs/OpenConnectorsArchive.json"
												},
												"url": {
													"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/open-metadata-archives/file",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"open-metadata",
														"admin-services",
														"users",
														"{{user}}",
														"servers",
														"{{server}}",
														"open-metadata-archives",
														"file"
													]
												},
												"description": "Add the file name for an open Metadata Archive that should be loaded each time the server starts."
											},
											"response": []
										},
										{
											"name": "Remove open metadata archive start up list",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/open-metadata-archives",
													"host": [
														"{{baseURL}}"
													],
													"path": [
														"open-metadata",
														"admin-services",
														"users",
														"{{user}}",
														"servers",
														"{{server}}",
														"open-metadata-archives"
													]
												},
												"description": "Add the file name for an open Metadata Archive that should be loaded each time the server starts."
											},
											"response": []
										}
									],
									"description": "These are the specialized requests for metadata servers."
								},
								{
									"name": "Get registered access services",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/open-metadata/platform-services/users/{{user}}/server-platform/registered-services/access-services",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"open-metadata",
												"platform-services",
												"users",
												"{{user}}",
												"server-platform",
												"registered-services",
												"access-services"
											]
										},
										"description": "This call is used return a list of registered Open Metadata Access Services for the platform."
									},
									"response": []
								},
								{
									"name": "Get names of configured access services",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/access-services",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"open-metadata",
												"admin-services",
												"users",
												"{{user}}",
												"servers",
												"{{server}}",
												"access-services"
											]
										},
										"description": "This call is used return the list of Open Metadata Access Services that are configured for this server."
									},
									"response": []
								},
								{
									"name": "Get the configuration for all of the access services",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/access-services/configuration",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"open-metadata",
												"admin-services",
												"users",
												"{{user}}",
												"servers",
												"{{server}}",
												"access-services",
												"configuration"
											]
										},
										"description": "Retrieve the configuration information for all of the Open Metadata Access Services (OMASs) configured for this server."
									},
									"response": []
								},
								{
									"name": "Get the configuration for a specific access service",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/access-services/{{access_service}}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"open-metadata",
												"admin-services",
												"users",
												"{{user}}",
												"servers",
												"{{server}}",
												"access-services",
												"{{access_service}}"
											]
										},
										"description": "Retrieve the configuration information for a specific Open Metadata Access Services (OMAS) configured for this server."
									},
									"response": []
								},
								{
									"name": "Enable a specific access service",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/access-services/{{access_service}}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"open-metadata",
												"admin-services",
												"users",
												"{{user}}",
												"servers",
												"{{server}}",
												"access-services",
												"{{access_service}}"
											]
										},
										"description": "Turn on a specific registered Open Metadata Access Services (OMAS).\n\nChange the value of the {{access-service}} variable in the environment to be the URL version of the name.  Typically this is done by taking the access service name, dropping \"OMAS\", change to lower-case and link two words with a dash \"-\".  For example, Asset Owner OMAS, would have a url name of asset-owner."
									},
									"response": []
								},
								{
									"name": "Enable all of the access services",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/access-services",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"open-metadata",
												"admin-services",
												"users",
												"{{user}}",
												"servers",
												"{{server}}",
												"access-services"
											]
										},
										"description": "Turn on all of the registered Open Metadata Access Services (OMAS)"
									},
									"response": []
								},
								{
									"name": "Set up the access services using the supplied configuration",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/access-services/configuration",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"open-metadata",
												"admin-services",
												"users",
												"{{user}}",
												"servers",
												"{{server}}",
												"access-services",
												"configuration"
											]
										},
										"description": "Turn on all of the registered Open Metadata Access Services (OMAS)"
									},
									"response": []
								},
								{
									"name": "Set access service In Topic name",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "cp.stewardshipaction.intopic"
										},
										"url": {
											"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/access-services/{{access_service}}/topic-names/in-topic",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"open-metadata",
												"admin-services",
												"users",
												"{{user}}",
												"servers",
												"{{server}}",
												"access-services",
												"{{access_service}}",
												"topic-names",
												"in-topic"
											]
										},
										"description": "Set up the name of the topic that the requested access service should use for listening to inbound events.\nThe topic name is specified in the request body.  Click on the request body tab to change it."
									},
									"response": []
								},
								{
									"name": "Set access service Out Topic name",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "cp.stewardshipaction.outtopic"
										},
										"url": {
											"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/access-services/{{access_service}}/topic-names/out-topic",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"open-metadata",
												"admin-services",
												"users",
												"{{user}}",
												"servers",
												"{{server}}",
												"access-services",
												"{{access_service}}",
												"topic-names",
												"out-topic"
											]
										},
										"description": "Set up the name of the topic that the requested access service should use for sending outbound events.\nThe topic name is specified in the request body.  Click on the request body tab to change it."
									},
									"response": []
								},
								{
									"name": "Get all configured access services topics",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/access-services/topic-names",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"open-metadata",
												"admin-services",
												"users",
												"{{user}}",
												"servers",
												"{{server}}",
												"access-services",
												"topic-names"
											]
										},
										"description": "Return the list of configured access services for this server and for each entry, list the names of the topics configured for the specific access service (if any)."
									},
									"response": []
								},
								{
									"name": "Get configured topics for a specific access service",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/access-services/{{access_service}}/topic-names",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"open-metadata",
												"admin-services",
												"users",
												"{{user}}",
												"servers",
												"{{server}}",
												"access-services",
												"{{access_service}}",
												"topic-names"
											]
										},
										"description": "Return the list of topics configured for an access service.  If there are no topics configured then no list is returned."
									},
									"response": []
								},
								{
									"name": "Remove all of the access services",
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/access-services",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"open-metadata",
												"admin-services",
												"users",
												"{{user}}",
												"servers",
												"{{server}}",
												"access-services"
											]
										},
										"description": "Remove all of the Open Metadata Access Services from this server's configuration."
									},
									"response": []
								},
								{
									"name": "Remove a specific access service",
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/access-services/{{access_service}}",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"open-metadata",
												"admin-services",
												"users",
												"{{user}}",
												"servers",
												"{{server}}",
												"access-services",
												"{{access_service}}"
											]
										},
										"description": "Remove the requested Open Metadata Access Service from this server's configuration."
									},
									"response": []
								}
							],
							"description": "This folder contains the common services for metadata access points.  It has a nested folder spcifically for Metadata servers.",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Configuration for Repository Proxies",
							"item": [
								{
									"name": "Set repository proxy's local repository connection",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/local-repository/mode/repository-proxy/details?connectorProvider=org.odpi.openmetadata.adapters.igc.repositoryconnector.IGCOMRSRepositoryConnectorProvider             ",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"open-metadata",
												"admin-services",
												"users",
												"{{user}}",
												"servers",
												"{{server}}",
												"local-repository",
												"mode",
												"repository-proxy",
												"details"
											],
											"query": [
												{
													"key": "connectorProvider",
													"value": "org.odpi.openmetadata.adapters.igc.repositoryconnector.IGCOMRSRepositoryConnectorProvider             "
												}
											]
										},
										"description": "Query Current Configuration"
									},
									"response": []
								},
								{
									"name": "Set repository event mapper",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/local-repository/event-mapper-details?connectorProvider=org.odpi.openmetadata.adapters.igc.eventmapper.IGCEventMapperProvider&eventSource=infosphereEvent",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"open-metadata",
												"admin-services",
												"users",
												"{{user}}",
												"servers",
												"{{server}}",
												"local-repository",
												"event-mapper-details"
											],
											"query": [
												{
													"key": "connectorProvider",
													"value": "org.odpi.openmetadata.adapters.igc.eventmapper.IGCEventMapperProvider"
												},
												{
													"key": "eventSource",
													"value": "infosphereEvent"
												}
											]
										},
										"description": "Set the event mapper for the local repository.  This translates proprietary events onto OMRS calls."
									},
									"response": []
								},
								{
									"name": "Remove repository proxy's repository configuration",
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/local-repository",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"open-metadata",
												"admin-services",
												"users",
												"{{user}}",
												"servers",
												"{{server}}",
												"local-repository"
											]
										},
										"description": "Remove all configuration for the proxy repository."
									},
									"response": []
								}
							],
							"description": "This folder contains the specialized configuration for a repository proxy server.\nThis type of server it typically a cohort member and also needs the configuration values common to all types of server."
						},
						{
							"name": "Add cohort configuration",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/cohorts/{{cohort}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"cohorts",
										"{{cohort}}"
									]
								},
								"description": "Request registration to an Open Metadata Repository Cohort.  Make sure you have set up the event bus configuration defaults before making this request."
							},
							"response": []
						},
						{
							"name": "Add cohort configuration with topic structure",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/cohorts/{{cohort}}/topic-structure/DEDICATED_TOPICS",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"cohorts",
										"{{cohort}}",
										"topic-structure",
										"DEDICATED_TOPICS"
									]
								},
								"description": "Request registration to an Open Metadata Repository Cohort.  Make sure you have set up the event bus configuration defaults before making this request."
							},
							"response": []
						},
						{
							"name": "Get cohort configuration",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/cohorts/{{cohort}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"cohorts",
										"{{cohort}}"
									]
								},
								"description": "Retrieve the configuration used to connect to an Open Metadata Repository Cohort."
							},
							"response": []
						},
						{
							"name": "Override single cohort topic name",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "cp.cohort.cocoCohort",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/cohorts/{{cohort}}/topic-name-override",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"cohorts",
										"{{cohort}}",
										"topic-name-override"
									]
								},
								"description": "Set up the name of the topic that the server sould use to connect to the name Open Metadata Repository Cohort.  Obviously this value needs to be the same in all members of the cohort in order for them to be able to communicate."
							},
							"response": []
						},
						{
							"name": "Override registration cohort topic name",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "cp.cohort.{{cohort}}.registration",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/cohorts/{{cohort}}/topic-name-override/registration",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"cohorts",
										"{{cohort}}",
										"topic-name-override",
										"registration"
									]
								},
								"description": "Set up the name of the topic that the server sould use to connect to the name Open Metadata Repository Cohort.  Obviously this value needs to be the same in all members of the cohort in order for them to be able to communicate."
							},
							"response": []
						},
						{
							"name": "Override types cohort topic name",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "cp.cohort.{{cohort}}.types",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/cohorts/{{cohort}}/topic-name-override/types",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"cohorts",
										"{{cohort}}",
										"topic-name-override",
										"types"
									]
								},
								"description": "Set up the name of the topic that the server sould use to connect to the name Open Metadata Repository Cohort.  Obviously this value needs to be the same in all members of the cohort in order for them to be able to communicate."
							},
							"response": []
						},
						{
							"name": "Override instances cohort topic name",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "cp.cohort.{{cohort}}.instances",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/cohorts/{{cohort}}/topic-name-override/instances",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"cohorts",
										"{{cohort}}",
										"topic-name-override",
										"instances"
									]
								},
								"description": "Set up the name of the topic that the server sould use to connect to the name Open Metadata Repository Cohort.  Obviously this value needs to be the same in all members of the cohort in order for them to be able to communicate."
							},
							"response": []
						},
						{
							"name": "Get single cohort topic name",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/cohorts/{{cohort}}/topic-name",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"cohorts",
										"{{cohort}}",
										"topic-name"
									]
								},
								"description": "Return the name of the topic used by the requested cohort."
							},
							"response": []
						},
						{
							"name": "Get dedicated cohort topic names",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/cohorts/{{cohort}}/dedicated-topic-names",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"cohorts",
										"{{cohort}}",
										"dedicated-topic-names"
									]
								},
								"description": "Return the name of the topic used by the requested cohort."
							},
							"response": []
						},
						{
							"name": "Disable access to a cohort",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/cohorts/{{cohort}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"cohorts",
										"{{cohort}}"
									]
								},
								"description": "Unregister server from an Opern Metadata Repository Cohort."
							},
							"response": []
						}
					],
					"description": "The configuration requests are used to set up servers that will be members of an Open Metadata Repository Cohort.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Configuration for Engine Host Servers",
					"item": [
						{
							"name": "Get registered engine services",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/open-metadata/platform-services/users/{{user}}/server-platform/registered-services/engine-services",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"platform-services",
										"users",
										"{{user}}",
										"server-platform",
										"registered-services",
										"engine-services"
									]
								},
								"description": "This call is used return a list of registered Open Metadata Engine Services for the platform."
							},
							"response": []
						},
						{
							"name": "Get names of configured engine services",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/engine-services",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"engine-services"
									]
								},
								"description": "This call is used return the list of Open Metadata Engine Services that are configured for this server."
							},
							"response": []
						},
						{
							"name": "Get configuration of configured engine services",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/engine-services",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"engine-services"
									]
								},
								"description": "This call is used return the configuration values of the Open Metadata Engine Services configured for the server."
							},
							"response": []
						},
						{
							"name": "Get configuration of specific configured engine service",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/engine-services/asset-analysis/configuration",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"engine-services",
										"asset-analysis",
										"configuration"
									]
								},
								"description": "This call is used return the configuration values of the specific Open Metadata Engine Service configured for the server."
							},
							"response": []
						},
						{
							"name": "Configure engine host server with engine service",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"class\": \"EngineServiceRequestBody\",\n    \"omagserverPlatformRootURL\": \"{{baseURL}}\",\n    \"omagserverName\" : \"myMetadataServer\",\n    \"engines\" : [ { \"engineName \" : \"engine1\", \"engineUserId\" : \"engine1UserId\"},\n                  { \"engineName \" : \"engine2\", \"engineUserId\" : \"engine2UserId\"}]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/engine-services/asset-analysis",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"engine-services",
										"asset-analysis"
									]
								},
								"description": "Add details of the metadata server to call and the engines to run."
							},
							"response": []
						}
					],
					"description": "This folder includes the requests for configuring engine services in an Engine Host OMAG Server."
				},
				{
					"name": "Configuration for Integration Daemons",
					"item": [
						{
							"name": "Get registered integration services",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/open-metadata/platform-services/users/{{user}}/server-platform/registered-services/integration-services",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"platform-services",
										"users",
										"{{user}}",
										"server-platform",
										"registered-services",
										"integration-services"
									]
								},
								"description": "This call is used return a list of registered Open Metadata Integration Services for the platform."
							},
							"response": []
						},
						{
							"name": "Get names of configured integration services",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/integration-services",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"integration-services"
									]
								},
								"description": "This call is used return the list of Open Metadata Integration Services that are configured for this server."
							},
							"response": []
						},
						{
							"name": "Get configuration of configured integration services",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/integration-services",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"integration-services"
									]
								},
								"description": "This call is used return the configuration values of the Open Metadata Integration Services configured for the server."
							},
							"response": []
						},
						{
							"name": "Get configuration of specific configured integration service",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/engine-services/asset-analysis/configuration",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"engine-services",
										"asset-analysis",
										"configuration"
									]
								},
								"description": "This call is used return the configuration values of the specific Open Metadata Integration Service configured for the server."
							},
							"response": []
						},
						{
							"name": "Configure integration daemon server with an integration service",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"class\": \"IntegrationServiceRequestBody\",\n    \"omagserverPlatformRootURL\": \"{{baseURL}}\",\n    \"omagserverName\" : \"myMetadataServer\",\n    \"integrationConnectorConfigs\" : [ \n        {\n             \"class\": \"IntegrationConnectorConfig\",\n             \"connectorName\" : \"dbIntegrator\",             \n             \"connectorUserId\" : \"dbIntegratornpa\",         \n             \"connection\" : \n             { \n                 \"class\" : \"Connection\",\n                 \"connectorType\" : \n                 {\n                     \"class\" : \"ConnectorType\",\n                     \"connectorProviderClassName\" : \"connector provider class name\"\n                 }\n             },               \n             \"metadataSourceQualifiedName\" : \"myDBServer\",\n             \"refreshTimeInterval\" : \"60\", \n             \"usesBlockingCalls\" : \"false\",\n             \"permittedSynchronization\" : \"FROM_THIRD_PARTY\"\n        } ] \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/integration-services/database-integrator",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"integration-services",
										"database-integrator"
									]
								},
								"description": "Add details of the metadata server to call and the connectors to run."
							},
							"response": []
						}
					],
					"description": "An Integration Daemon is an OMAG Server that hosts integration services.  Each integration service hosts one or more integration connectors.\n\nThe Integration daemon is configured in two stages:\n* Add the audit log configuration\n* Add the list of Connections for the integration connectors for each of the integration services that are to run in the integration connector.\n\nDetails on configuring integration daemons can be found here: https://odpi.github.io/egeria-docs/guides/admin/servers/"
				},
				{
					"name": "Configuring View Servers",
					"item": [
						{
							"name": "Configure the REX View Services",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"class\":\"IntegrationViewServiceConfig\",\n    \"viewServiceAdminClass\":\"org.odpi.openmetadata.viewservices.rex.admin.RexViewAdmin\",\n    \"viewServiceFullName\":\"RepositoryExplorer\",\n    \"viewServiceOperationalStatus\":\"ENABLED\",\n    \"resourceEndpoints\" : [\n        {\n            \"class\"              : \"ResourceEndpointConfig\",\n            \"resourceCategory\"   : \"Platform\",\n            \"platformName\"       : \"myOMAGPlatform1\",\n            \"platformRootURL\"    : \"myPlatformRootURL1\",\n            \"description\"        : \"myOMAGPlatform1 description\"\n        },\n        {\n            \"class\"              : \"ResourceEndpointConfig\",\n            \"resourceCategory\"   : \"Platform\",\n            \"platformName\"       : \"myOMAGPlatform2\",\n            \"platformRootURL\"    : \"myPlatformRootURL2\",\n            \"description\"        : \"myOMAGPlatform2 description\"\n        },       \n        {\n            \"class\"              : \"ResourceEndpointConfig\",\n            \"resourceCategory\"   : \"Server\",\n            \"serverInstanceName\" : \"myServerInstanceName1\",\n            \"serverName\"         : \"myServerName1\",\n            \"platformName\"       : \"myOMAGPlatform1\",\n            \"description\"        : \"myServerName1 description \"\n        },\n        {\n            \"class\"              : \"ResourceEndpointConfig\",\n            \"resourceCategory\"   : \"Server\",\n            \"serverInstanceName\" : \"myServerInstanceName2\",\n            \"serverName\"         : \"myServerName2\",\n            \"platformName\"       : \"myOMAGPlatform1\",\n            \"description\"        : \"myServerName2 description \"\n        },\n        {\n            \"class\"              : \"ResourceEndpointConfig\",\n            \"resourceCategory\"   : \"Server\",\n            \"serverInstanceName\" : \"myServerInstanceName3\",\n            \"serverName\"         : \"myServerName3\",\n            \"platformName\"       : \"myOMAGPlatform2\",\n            \"description\"        : \"myServerName3 description \"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/view-services/rex",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"view-services",
										"rex"
									]
								},
								"description": "Requests information about the author of the server platform."
							},
							"response": []
						},
						{
							"name": "Configure the TEX View Services",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"class\":\"IntegrationViewServiceConfig\",\n    \"viewServiceAdminClass\":\"org.odpi.openmetadata.viewservices.rex.admin.TexViewAdmin\",\n    \"viewServiceFullName\":\"TypeExplorer\",\n    \"viewServiceOperationalStatus\":\"ENABLED\",\n    \"resourceEndpoints\" : [\n        {\n            \"class\"              : \"ResourceEndpointConfig\",\n            \"resourceCategory\"   : \"Platform\",\n            \"platformName\"       : \"myOMAGPlatform1\",\n            \"platformRootURL\"    : \"myPlatformRootURL1\",\n            \"description\"        : \"myOMAGPlatform1 description\"\n        },\n        {\n            \"class\"              : \"ResourceEndpointConfig\",\n            \"resourceCategory\"   : \"Platform\",\n            \"platformName\"       : \"myOMAGPlatform2\",\n            \"platformRootURL\"    : \"myPlatformRootURL2\",\n            \"description\"        : \"myOMAGPlatform2 description\"\n        },       \n        {\n            \"class\"              : \"ResourceEndpointConfig\",\n            \"resourceCategory\"   : \"Server\",\n            \"serverInstanceName\" : \"myServerInstanceName1\",\n            \"serverName\"         : \"myServerName1\",\n            \"platformName\"       : \"myOMAGPlatform1\",\n            \"description\"        : \"myServerName1 description \"\n        },\n        {\n            \"class\"              : \"ResourceEndpointConfig\",\n            \"resourceCategory\"   : \"Server\",\n            \"serverInstanceName\" : \"myServerInstanceName2\",\n            \"serverName\"         : \"myServerName2\",\n            \"platformName\"       : \"myOMAGPlatform1\",\n            \"description\"        : \"myServerName2 description \"\n        },\n        {\n            \"class\"              : \"ResourceEndpointConfig\",\n            \"resourceCategory\"   : \"Server\",\n            \"serverInstanceName\" : \"myServerInstanceName3\",\n            \"serverName\"         : \"myServerName3\",\n            \"platformName\"       : \"myOMAGPlatform2\",\n            \"description\"        : \"myServerName3 description \"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/view-services/tex",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"view-services",
										"tex"
									]
								},
								"description": "Requests information about the author of the server platform."
							},
							"response": []
						},
						{
							"name": "Configure the Dino View Services",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"class\":\"IntegrationViewServiceConfig\",\n    \"viewServiceAdminClass\":\"org.odpi.openmetadata.viewservices.dino.admin.DinoViewAdmin\",\n    \"viewServiceFullName\":\"Dino\",\n    \"viewServiceOperationalStatus\":\"ENABLED\",\n    \"resourceEndpoints\" : [\n        {\n            \"class\"              : \"ResourceEndpointConfig\",\n            \"resourceCategory\"   : \"Platform\",\n            \"platformName\"       : \"myOMAGPlatform1\",\n            \"platformRootURL\"    : \"myPlatformRootURL1\",\n            \"description\"        : \"myOMAGPlatform1 description\"\n        },\n        {\n            \"class\"              : \"ResourceEndpointConfig\",\n            \"resourceCategory\"   : \"Platform\",\n            \"platformName\"       : \"myOMAGPlatform2\",\n            \"platformRootURL\"    : \"myPlatformRootURL2\",\n            \"description\"        : \"myOMAGPlatform2 description\"\n        },       \n        {\n            \"class\"              : \"ResourceEndpointConfig\",\n            \"resourceCategory\"   : \"Server\",\n            \"serverInstanceName\" : \"myServerInstanceName1\",\n            \"serverName\"         : \"myServerName1\",\n            \"platformName\"       : \"myOMAGPlatform1\",\n            \"description\"        : \"myServerName1 description \"\n        },\n        {\n            \"class\"              : \"ResourceEndpointConfig\",\n            \"resourceCategory\"   : \"Server\",\n            \"serverInstanceName\" : \"myServerInstanceName2\",\n            \"serverName\"         : \"myServerName2\",\n            \"platformName\"       : \"myOMAGPlatform1\",\n            \"description\"        : \"myServerName2 description \"\n        },\n        {\n            \"class\"              : \"ResourceEndpointConfig\",\n            \"resourceCategory\"   : \"Server\",\n            \"serverInstanceName\" : \"myServerInstanceName3\",\n            \"serverName\"         : \"myServerName3\",\n            \"platformName\"       : \"myOMAGPlatform2\",\n            \"description\"        : \"myServerName3 description \"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/view-services/dino",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"view-services",
										"dino"
									]
								},
								"description": "Requests information about the author of the server platform."
							},
							"response": []
						},
						{
							"name": "Configure the Server Author View Services",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"class\":\"IntegrationViewServiceConfig\",\n    \"viewServiceAdminClass\":\"org.odpi.openmetadata.viewservices.serverauthor.admin.ServerAuthorViewAdmin\",\n    \"viewFullServiceName\":\"ServerAuthor\",\n    \"viewServiceOperationalStatus\":\"ENABLED\",\n    \"omagserverPlatformRootURL\":\"myPlatformRootURL1\",\n    \"resourceEndpoints\" : [\n        {\n            \"class\"              : \"ResourceEndpointConfig\",\n            \"resourceCategory\"   : \"Platform\",\n            \"platformName\"       : \"myOMAGPlatform1\",\n            \"platformRootURL\"    : \"myPlatformRootURL1\",\n            \"description\"        : \"myOMAGPlatform1 description\"\n        },\n        {\n            \"class\"              : \"ResourceEndpointConfig\",\n            \"resourceCategory\"   : \"Platform\",\n            \"platformName\"       : \"myOMAGPlatform2\",\n            \"platformRootURL\"    : \"myPlatformRootURL2\",\n            \"description\"        : \"myOMAGPlatform2 description\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/view-services/server-author",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"view-services",
										"server-author"
									]
								},
								"description": "Requests information about the author of the server platform."
							},
							"response": []
						},
						{
							"name": "Configure the Glossary Author View services",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "      { \n         \"class\":\"ViewServiceConfig\",\n         \"omagserverName\":\"myMetadataAccessPoint\",\n         \"omagserverPlatformRootURL\":\"myPlatformRootURL1\"\n      }"
								},
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/view-services/glossary-author",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"view-services",
										"glossary-author"
									]
								},
								"description": "Requests information about the author of the server platform."
							},
							"response": []
						},
						{
							"name": "Get registered view services",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/open-metadata/platform-services/users/{{user}}/server-platform/registered-services/view-services",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"platform-services",
										"users",
										"{{user}}",
										"server-platform",
										"registered-services",
										"view-services"
									]
								},
								"description": "This call is used return a list of registered Open Metadata View Services for the platform."
							},
							"response": []
						},
						{
							"name": "Get names of configured view services",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/open-metadata/admin-services/users/{{user}}/servers/{{server}}/view-services",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"open-metadata",
										"admin-services",
										"users",
										"{{user}}",
										"servers",
										"{{server}}",
										"view-services"
									]
								},
								"description": "This call is used return the list of Open Metadata View Services that are configured for this server."
							},
							"response": []
						}
					],
					"description": "This folder contains the requests used to configure view services in a view server."
				}
			],
			"description": "This folder groups all of the requests to configure the different types of OMAG Servers.  There is a folder for requests that are common to all types of OMAG Servers, and then aditional folders for specialized OMAG Servers."
		}
	]
}