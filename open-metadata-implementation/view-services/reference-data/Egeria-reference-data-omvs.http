# Egeria-reference-data-view-service

@baseURL=https://localhost:9443
@viewServer=view-server

###
# =====================================================================================================================
# Manage the authentication token.  Run this request to create/refresh the token.

# @name Token (RequestBody)
POST {{baseURL}}/api/token
Content-Type: application/json

{
  "userId" : "peterprofile",
  "password" : "secret"
}

> {% client.global.set("token", response.body); %}


###
# =====================================================================================================================
# Work with Valid Value Definitions
# https://egeria-project.org/concepts/valid-value-definition

@validValueDefinitionGUID=add guid here


###
# @name createValidValueDefinition
# Create a valid value definition.
#
# Request body provides             properties for the valid value definition.
#
# Returns unique identifier of the newly created element
#  InvalidParameterException  one of the parameters is invalid.
#  PropertyServerException    there is a problem retrieving information from the property server(s).
#  UserNotAuthorizedException the requesting user is not authorized to issue this request.
#
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/reference-data/valid-value-definitions
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "NewElementRequestBody",
  "anchorGUID" : "add guid here",
  "isOwnAnchor": false,
  "parentGUID": "add guid here",
  "parentRelationshipTypeName": "add type name here",
  "parentRelationshipProperties": {
    "class": "RelationshipElementProperties",
    "propertyValueMap" : {
      "description" : {
        "class": "PrimitiveTypePropertyValue",
        "typeName": "string",
        "primitiveValue" : "New description"
      }
    }
  },
  "parentAtEnd1": false,
  "properties": {
    "class" : "ValidValueDefinitionProperties",
    "qualifiedName": "add unique name here",
    "displayName": "add short name here",
    "description": "add description here",
    "category": "add description here",
    "namespace" : "add namespace here",
    "userDefinedStatus" : "add status here",
    "usage": "add usage here",
    "dataType" : "add data type here",
    "scope" : "add scope here",
    "preferredValue" : "add preferred value here",
    "isCaseSensitive" : false,
    "additionalProperties": {
      "property1" : "propertyValue1",
      "property2" : "propertyValue2"
    },
    "extendedProperties": {
      "property1" : "propertyValue1",
      "property2" : "propertyValue2"
    },
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  },
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}


###
# @name createValidValueDefinitionFromTemplate
# Create a new metadata element to represent a valid value definition using an existing metadata element as a template.
# The template defines additional classifications and relationships that should be added to the new element.
#
# Request body provides properties that override the template
#
# Returns unique identifier of the new metadata element
#  InvalidParameterException  one of the parameters is invalid
#  UserNotAuthorizedException the user is not authorized to issue this request
#  PropertyServerException    there is a problem reported in the open metadata server(s)
#
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/reference-data/valid-value-definitions/from-template
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "TemplateRequestBody",
  "anchorGUID" : "add guid here",
  "isOwnAnchor": false,
  "parentGUID": "add guid here",
  "parentRelationshipTypeName": "add type name here",
  "parentRelationshipProperties": {
    "class": "RelationshipElementProperties",
    "propertyValueMap" : {
      "description" : {
        "class": "PrimitiveTypePropertyValue",
        "typeName": "string",
        "primitiveValue" : "New description"
      }
    }
  },
  "parentAtEnd1": false,
  "templateGUID": "add guid here",
  "replacementProperties": {
    "class": "ElementProperties",
    "propertyValueMap" : {
      "description" : {
        "class": "PrimitiveTypePropertyValue",
        "typeName": "string",
        "primitiveValue" : "New description"
      }
    }
  },
  "placeholderPropertyValues":  {
    "placeholder1" : "propertyValue1",
    "placeholder2" : "propertyValue2"
  },
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}


###
# @name updateValidValueDefinition
# Update the properties of a valid value definition.
#
# @param validValueDefinitionGUID unique identifier of the valid value definition (returned from create)
# Request body provides     properties for the new element.
#
# Returns void or
#  InvalidParameterException  one of the parameters is invalid.
#  PropertyServerException    there is a problem retrieving information from the property server(s).
#  UserNotAuthorizedException the requesting user is not authorized to issue this request.
#
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/reference-data/valid-value-definitions/{{validValueDefinitionGUID}}/update
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "UpdateElementRequestBody",
  "mergeUpdate": true,
  "properties": {
    "class" : "ValidValueDefinitionProperties",
    "qualifiedName": "add unique name here",
    "displayName": "add short name here",
    "description": "add description here",
    "category": "add description here",
    "namespace" : "add namespace here",
    "userDefinedStatus" : "add status here",
    "usage": "add usage here",
    "dataType" : "add data type here",
    "scope" : "add scope here",
    "preferredValue" : "add preferred value here",
    "isCaseSensitive" : false,
    "additionalProperties": {
      "property1" : "propertyValue1",
      "property2" : "propertyValue2"
    },
    "extendedProperties": {
      "property1" : "propertyValue1",
      "property2" : "propertyValue2"
    },
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  },
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}


###

@validValueSetGUID=add guid here
@validValueMemberGUID=add guid here

###
# @name linkValidValueMember
# Attach a valid value to a valid value set.
#
# @param validValueSetGUID       unique identifier of the set (parent)
# @param validValueMemberGUID           unique identifier of the member
# Request body provides  description of the relationship.
#
# Returns void or
#  InvalidParameterException  one of the parameters is null or invalid.
#  PropertyServerException    there is a problem retrieving information from the property server(s).
#  UserNotAuthorizedException the requesting user is not authorized to issue this request.
#
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/reference-data/valid-values/{{validValueSetGUID}}/members/{{validValueMemberGUID}}/attach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "NewRelationshipRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "properties": {
    "class": "AdjacentLocationProperties",
    "label": "",
    "description": "",
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  }
}


###
# @name detachValidValueMember
# Detach a valid value from a valid value set.
#
# @param validValueSetGUID       unique identifier of the set (parent)
# @param validValueMemberGUID           unique identifier of the member
# Request body provides  description of the relationship.
#
# Returns void or
#  InvalidParameterException  one of the parameters is null or invalid.
#  PropertyServerException    there is a problem retrieving information from the property server(s).
#  UserNotAuthorizedException the requesting user is not authorized to issue this request.
#
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/reference-data/valid-values/{{validValueSetGUID}}/members/{{validValueMemberGUID}}/detach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "DeleteRelationshipRequestBody",
  "deleteMethod": "LOOK_FOR_LINEAGE",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}

###


###
# @name deleteValidValueDefinition
# Delete a valid value definition.
#
# @param validValueDefinitionGUID  unique identifier of the element to delete
# Request body provides  description of the relationship.
#
# Returns void or
#  InvalidParameterException  one of the parameters is null or invalid.
#  PropertyServerException    there is a problem retrieving information from the property server(s).
#  UserNotAuthorizedException the requesting user is not authorized to issue this request.
#
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/reference-data/valid-value-definitions/{{validValueDefinitionGUID}}/delete
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "DeleteElementRequestBody",
  "cascadeDelete" : false,
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}


###
# @name getValidValueDefinitionsByName
# Returns the list of communities with a particular name.
#
# Request body provides string to find in the properties
#
# Returns list of matching metadata elements or
#  InvalidParameterException  one of the parameters is invalid
#  UserNotAuthorizedException the user is not authorized to issue this request
#  PropertyServerException    there is a problem reported in the open metadata server(s)
#
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/reference-data/valid-value-definitions/by-name
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "FilterRequestBody",
  "filter" : "Add name here",
  "metadataElementTypeName" : "ValidValueDefinition",
  "startFrom": 0,
  "pageSize": 10,
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "limitResultsByStatus" : ["ACTIVE"],
  "sequencingOrder" : "PROPERTY_ASCENDING",
  "sequencingProperty" : "qualifiedName"
}


###
# @name findValidValueDefinitions
# Retrieve the list of valid value definition metadata elements that contain the search string.
#
# Request body provides string to find in the properties
#
# Returns list of matching metadata elements or
#  InvalidParameterException  one of the parameters is invalid
#  UserNotAuthorizedException the user is not authorized to issue this request
#  PropertyServerException    there is a problem reported in the open metadata server(s)
#
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/reference-data/valid-value-definitions/by-search-string
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "SearchStringRequestBody",
  "searchString" : "Add value here",
  "metadataElementTypeName" : "ValidValueDefinition",
  "startsWith" : false,
  "endsWith" : false,
  "ignoreCase" : true,
  "startFrom" : 0,
  "pageSize": 10,
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "limitResultsByStatus" : ["ACTIVE"],
  "sequencingOrder" : "PROPERTY_ASCENDING",
  "sequencingProperty" : "qualifiedName"
}


###
# @name getValidValueDefinitionByGUID
# Return the properties of a specific valid value definition.
#
# @param validValueDefinitionGUID    unique identifier of the required element
# Request body controls query options
#
# Returns element or
#  InvalidParameterException  one of the parameters is invalid
#  UserNotAuthorizedException the user is not authorized to issue this request
#  PropertyServerException    there is a problem reported in the open metadata server(s)
#
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/reference-data/valid-value-definitions/{{validValueDefinitionGUID}}/retrieve
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "GetRequestBody",
  "metadataElementTypeName" : "ValidValueDefinition",
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}




