# Egeria-action-author-view-service

@baseURL=https://localhost:9443
@viewServer=view-server

###
# =====================================================================================================================
# Manage the authentication token.  Run this request to create/refresh the token.

# @name Token (RequestBody)
POST {{baseURL}}/api/token
Content-Type: application/json

{
  "userId" : "peterprofile",
  "password" : "secret"
}

> {% client.global.set("token", response.body); %}

###
# =====================================================================================================================
# A Governance Action Type describes a call to a specific request-type of a Governance Engine.  This results
# in an Engine Action that calls the Governance Service running in an engine host.
# Governance Action Types are governance definitions that are managed by Governance Officer OMVS.
# The relationship below links a governance action type to a governance engine that will execute a request
# to run the governance action type.

###

@governanceActionTypeGUID=xyz
@governanceEngineGUID=xyz

###
# @name linkGovernanceActionExecutor
# Link a governance action type to the governance engine that it is to call.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/action-author/governance-action-types/{{governanceActionTypeGUID}}/governance-engine-executor/{{governanceEngineGUID}}/attach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "NewRelationshipRequestBody",
  "properties": {
    "class": "GovernanceActionExecutorProperties",
    "requestType": "add label here",
    "requestParameters": {},
    "requestParameterFilter": [],
    "requestParameterMap": {},
    "actionTargetFilter": [],
    "actionTargetMap": {},
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  },
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}


###
# @name detachGovernanceActionExecutor
# Detach a governance action type from the governance engine that it is to call. Request body is optional.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/action-author/governance-action-types/{{governanceActionTypeGUID}}/governance-engine-executor/{{governanceEngineGUID}}/detach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "DeleteRelationshipRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}

###

@elementGUID=add guid here

###
# @name linkTargetForGovernanceAction
# Link a governance action to the element it is to work on (action target).
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/action-author/governance-actions/{governanceActionGUID}/action-targets/{elementGUID}/attach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "NewRelationshipRequestBody",
  "properties": {
    "class": "TargetForGovernanceActionProperties",
    "actionTargetName": "add name here",
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  },
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}


###
# @name detachTargetForGovernanceAction
# Detach a governance action from the element it is to work on (action target). Request body is optional.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/action-author/governance-actions/{governanceActionGUID}/action-targets/{elementGUID}/detach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "DeleteRelationshipRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}

###
###
# =====================================================================================================================
# A governance action process describes a well-defined series of steps that gets something done.
# The steps are defined using GovernanceActionProcessSteps.

# This is the unique identifier of the governance action process

@processGUID = guid

###
# @name getGovernanceActionProcessGraph
# Retrieve the governance action process metadata element with the supplied unique identifier
# along with the flow definition describing its implementation.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/governance-officer/governance-action-processes/{{processGUID}}/graph
Authorization: Bearer {{token}}


###
# =====================================================================================================================
# A governance action process step describes a step in a governance action process
#

@processStepGUID=guid
@nextProcessStepGUID=guid
@relationshipGUID=guid


###
# @name setupFirstActionProcessStep
# Set up a link between a governance action process and a governance action process step.  This defines the first
# step in the process.  The request body is optional.  It contains the name of the guard to pass to the first step
# in the process.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/action-author/governance-action-processes/{{processGUID}}/first-process-step/{{processStepGUID}}/attach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "NewRelationshipRequestBody",
  "properties" : {
    "class" : "GovernanceActionProcessFlowProperties",
    "guard" : "Add name of guard that could trigger the next step",
    "requestParameters" : {},
    "mandatoryGuard" : false
  }
}

###
# @name removeFirstActionProcessStep
# Remove the link between a governance process and that governance action process step that defines its first step.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/action-author/governance-action-processes/{{processGUID}}/first-process-step/detach


###
# @name setupNextActionProcessStep
# Add one of the links between two governance action process steps to show that one follows on from the other when a
# governance action process is executing.  The guard identifies one of the possible guards that triggers the action.
# If mandatoryGuard=true then
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/action-author/governance-action-process-steps/{{processStepGUID}}/next-process-steps/{{nextProcessStepGUID}}/attach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "NewRelationshipRequestBody",
  "properties" : {
    "class" : "NextGovernanceActionProcessStepProperties",
    "guard" : "Add name of guard that could trigger the next step",
    "mandatoryGuard" : false
  }
}


###
# @name updateNextActionProcessStep
# Update the properties of the link between two governance action process steps that shows that one follows on from the other when a governance
# action process is executing.

POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/action-author/governance-action-process-steps/next-process-steps/{{relationshipGUID}}/update
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "UpdateRelationshipRequestBody",
  "properties" : {
    "class" : "NextGovernanceActionProcessStepProperties",
    "guard" : "Add name of guard that could trigger the next step",
    "mandatoryGuard" : false
  }
}


###
# @name removeNextActionProcessStep
# Remove a follow-on step from a governance action process.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/action-author/governance-action-process-steps/next-process-step/{{relationshipGUID}}/detach
Authorization: Bearer {{token}}

###
