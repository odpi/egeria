# Egeria-load-content-packs
# =====================================================================================================================
# Egeria's content packs provide reference data, templates and connector/service configuration.  They are
# organized around the solutions they enable.
#
# More information:
# A content pack is a type of open metadata archive.
# https://egeria-project.org/concepts/open-metadata-archives/

@baseURL=https://localhost:9443
@viewServer=view-server

###
# =====================================================================================================================
# Manage the authentication token.  Run this request to create/refresh the token.

# @name Token (RequestBody)
POST {{baseURL}}/api/token
Content-Type: application/json

{
  "userId" : "garygeeke",
  "password" : "secret"
}

> {% client.global.set("token", response.body); %}


###
# =====================================================================================================================
# Retrieve the unique identifier for the active metadata store.  This metadata element is catalogued automatically
# by the OMAG Server Platform cataloguer.   This is an integration connector that queries each of the catalogued
# OMAG Server Platforms and builds a metadata representation of the servers running on it.  These representations are
# then used by the Runtime Manager API to target operation commands to the right OMAG Server.
###
# @name get the GUID for active-metadata-store
# Retrieve the metadata element using its unique identifier.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/runtime-manager/metadata-elements/guid-by-unique-name
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "UniqueNameRequestBody",
  "name" : "active-metadata-store",
  "namePropertyName" : "displayName"
}

> {% client.global.set("activeMetadataStoreGUID", response.body.guid); %}


###
# =====================================================================================================================
# @name Add CocoComboArchive (into active-metadata-store)
# CocoComboArchive contains metadata about Coco Pharmaceuticals, a fictitious company used to demonstrate many of
# the features of Egeria in a broader organizational context.  It is a useful source of metadata for your own testing.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/runtime-manager/omag-servers/{{activeMetadataStoreGUID}}/instance/load/open-metadata-archives/file
Authorization: Bearer {{token}}
Content-Type: text/plain

content-packs/CocoComboArchive.omarchive

###
# @name get the GUID for the Sustainability Glossary
# Retrieve the metadata element using its unique identifier.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/metadata-expert/metadata-elements/guid-by-unique-name
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "UniqueNameRequestBody",
  "name" : "Glossary::Sustainability",
  "namePropertyName" : "qualifiedName"
}

> {% client.global.set("sustainabilityGlossaryGUID", response.body.guid); %}


###
# =====================================================================================================================
# @name Add OpenMetadataProductsContentPack (into active-metadata-store)
# OpenMetadataProductsContentPack activates Egeria's Open Metadata Digital Product Catalog.  This solution actively
# monitors the content of the open metadata ecosystem and builds a digital product catalog of interesting data products
# that users can browse, review and subscribe to.  The subscriber can choose the location, format and technology
# where the product data is delivered to.  The subscription type also controls whether changes to the product data are
#
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/runtime-manager/omag-servers/{{activeMetadataStoreGUID}}/instance/load/open-metadata-archives/file
Authorization: Bearer {{token}}
Content-Type: text/plain

content-packs/OpenMetadataProductsContentPack.omarchive


###
# =====================================================================================================================
# @name Add PostgresContentPack (into active-metadata-store)
# PostgresContentPack activates a solution for understanding your PostgreSQL estate.  It provides templates for cataloguing
# different types of PostgreSQL artifacts such as PostgreSQL servers, databases and schemas.  These templates can be
# used directly.  They are also used by the automated services configured by this content pack.  These automated
# services support surveys of your PorgreSQL servers/databases/schema as well as a synchronized cataloging service.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/runtime-manager/omag-servers/{{activeMetadataStoreGUID}}/instance/load/open-metadata-archives/file
Authorization: Bearer {{token}}
Content-Type: text/plain

content-packs/PostgresContentPack.omarchive


###
# =====================================================================================================================
# @name Add UnityCatalogContentPack (into active-metadata-store)
# UnityCatalogContentPack activates a solution for understanding your Unity Catalog estate.  It provides templates
# for cataloguing your Unity Catalog catalogs and the artifacts within.  These templates can be used directly.  They
# are also used by Egeria's automated processes for Unity catalog that are configured by this content pack.  This includes
# surveys of Unity Catalog contents along with an automated cataloguger that allows you to analyse and search across
# your Unity Catalog instances. They also support provisioning of artifacts to Unity Catalog.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/runtime-manager/omag-servers/{{activeMetadataStoreGUID}}/instance/load/open-metadata-archives/file
Authorization: Bearer {{token}}
Content-Type: text/plain

content-packs/UnityCatalogContentPack.omarchive

###
# =====================================================================================================================
# @name ApacheAtlasContentPack (into active-metadata-store)
# ApacheAtlasContentPack activates a solution for supporting an Apache Atlas catalog.  This includes the ability to
# survey your Apache Atlas metadata, catalog its content in Open Metadata and push glossary and business metadata
# to Apache Atlas to enhance its content.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/runtime-manager/omag-servers/{{activeMetadataStoreGUID}}/instance/load/open-metadata-archives/file
Authorization: Bearer {{token}}
Content-Type: text/plain

content-packs/ApacheAtlasContentPack.omarchive

###
# =====================================================================================================================
# @name Add ApacheKafkaContentPack (into active-metadata-store)
# ApacheKafkaContentPack activates a solution that is able to survey and catalog the topics in Apache Kafka brokers.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/runtime-manager/omag-servers/{{activeMetadataStoreGUID}}/instance/load/open-metadata-archives/file
Authorization: Bearer {{token}}
Content-Type: text/plain

content-packs/ApacheKafkaContentPack.omarchive

###
# =====================================================================================================================
# @name Add APIsContentPack (into active-metadata-store)
# APIsContentPack activates a solution to catalog APIs through the OpenAPI REST API.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/runtime-manager/omag-servers/{{activeMetadataStoreGUID}}/instance/load/open-metadata-archives/file
Authorization: Bearer {{token}}
Content-Type: text/plain

content-packs/APIsContentPack.omarchive


###
# =====================================================================================================================
# @name Add ObservabilityContentPack (into active-metadata-store)
# ObservabilityContentPack activates a solution that monitors and analyses open metadata and its associated activity
# to generate new insights into the operation of your organization.  These insights can be picked up and published
# through the Open Metadata Digital Product Catalog (see OpenMetadataProductsContentPack.omarchive above).
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/runtime-manager/omag-servers/{{activeMetadataStoreGUID}}/instance/load/open-metadata-archives/file
Authorization: Bearer {{token}}
Content-Type: text/plain

content-packs/ObservabilityContentPack.omarchive


###
# =====================================================================================================================
# @name Add CloudInformationModel
# CloudInformationModel provides a large glossary based on the content of the Cloud Informaiton Model.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/runtime-manager/omag-servers/{{activeMetadataStoreGUID}}/instance/load/open-metadata-archives/file
Authorization: Bearer {{token}}
Content-Type: text/plain

content-packs/CloudInformationModel.omarchive


###
# @name get the GUID for the CloudInformationModel Glossary
# Retrieve the metadata element using its unique identifier.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/runtime-manager/metadata-elements/guid-by-unique-name
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "UniqueNameRequestBody",
  "name" : "Glossary::CloudInformationModel",
  "namePropertyName" : "qualifiedName"
}

> {% client.global.set("cimGlossaryGUID", response.body.guid); %}

